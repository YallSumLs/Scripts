local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v90 = 0;
			local v91;
			while true do
				if (v90 == 0) then
					v91 = v2(v0(v30, 16));
					if v19 then
						local v123 = v5(v91, v19);
						v19 = nil;
						return v123;
					else
						return v91;
					end
					break;
				end
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v92 = 0 - 0;
			local v93;
			while true do
				if (v92 == ((0 + 0) - 0)) then
					v93 = (v31 / (2 ^ (v32 - (1 - 0)))) % (((5 - 1) - 2) ^ (((v33 - (620 - ((1620 - (68 + 997)) + 64))) - (v32 - 1)) + (1271 - (226 + 1044))));
					return v93 - (v93 % (932 - (857 + 74)));
				end
			end
		else
			local v94 = 568 - (367 + 201);
			local v95;
			while true do
				if (v94 == (927 - (214 + 713))) then
					v95 = (1 + 1) ^ (v32 - (1 + 0));
					return (((v31 % (v95 + v95)) >= v95) and (878 - (282 + 595))) or (1637 - (1523 + (496 - 382)));
				end
			end
		end
	end
	local function v21()
		local v34 = 117 - (32 + 85);
		local v35;
		while true do
			if (v34 == 1) then
				return v35;
			end
			if (v34 == (0 + 0)) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (2 - 1) + 0;
				v34 = (1770 - 812) - ((1637 - 745) + 65);
			end
		end
	end
	local function v22()
		local v36, v37 = v1(v16, v18, v18 + (352 - (87 + 263)));
		v18 = v18 + (182 - (67 + 113));
		return (v37 * (188 + 68)) + v36;
	end
	local function v23()
		local v38 = 952 - (802 + 150);
		local v39;
		local v40;
		local v41;
		local v42;
		while true do
			if (v38 == (2 - 1)) then
				return (v42 * (30433252 - 13656036)) + (v41 * (47703 + (19020 - (1069 + 118)))) + (v40 * (189 + 67)) + v39;
			end
			if (v38 == (0 - 0)) then
				v39, v40, v41, v42 = v1(v16, v18, v18 + 2 + 1);
				v18 = v18 + (4 - 0);
				v38 = 1;
			end
		end
	end
	local function v24()
		local v43 = 0 - 0;
		local v44;
		local v45;
		local v46;
		local v47;
		local v48;
		local v49;
		while true do
			if (v43 == 0) then
				v44 = v23();
				v45 = v23();
				v43 = 1 - 0;
			end
			if (v43 == (1 + (887 - (261 + 624)))) then
				if (v48 == 0) then
					if (v47 == (0 - (0 - 0))) then
						return v49 * (0 + 0);
					else
						v48 = 792 - (368 + 423);
						v46 = (0 - 0) - 0;
					end
				elseif (v48 == (2065 - (10 + 8))) then
					return ((v47 == (0 - 0)) and (v49 * (1 / (442 - (416 + 26))))) or (v49 * NaN);
				end
				return v8(v49, v48 - 1023) * (v46 + (v47 / ((6 - 4) ^ (23 + 29))));
			end
			if (v43 == 2) then
				v48 = v20(v45, 36 - 15, 469 - (145 + 293));
				v49 = ((v20(v45, 462 - ((1124 - (1020 + 60)) + 386)) == 1) and -(1487 - (998 + 488))) or (1 + 0);
				v43 = 3 + 0;
			end
			if ((773 - (201 + 571)) == v43) then
				v46 = 1139 - (116 + 1022);
				v47 = (v20(v45, (1427 - (630 + 793)) - 3, 1 + 11 + (26 - 18)) * ((7 - 5) ^ (113 - 81))) + v44;
				v43 = 861 - (814 + 16 + 29);
			end
		end
	end
	local function v25(v50)
		local v51 = (1413 - (447 + 966)) - 0;
		local v52;
		local v53;
		while true do
			if (v51 == (1 + 0)) then
				v52 = v3(v16, v18, (v18 + v50) - (2 - 1));
				v18 = v18 + v50;
				v51 = 6 - 4;
			end
			if (v51 == (1 + 1)) then
				v53 = {};
				for v113 = 1748 - (760 + 987), #v52 do
					v53[v113] = v2(v1(v3(v52, v113, v113)));
				end
				v51 = 1916 - (1789 + 124);
			end
			if (v51 == (0 - 0)) then
				v52 = nil;
				if not v50 then
					v50 = v23();
					if (v50 == (766 - (745 + 21))) then
						return "";
					end
				end
				v51 = 2 - 1;
			end
			if (v51 == (2 + 1)) then
				return v6(v53);
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v54 = (function()
			return function(v96, v97, v98, v99, v100, v101, v102, v103, v104)
				local v105 = (function()
					return 0;
				end)();
				local v96 = (function()
					return;
				end)();
				local v97 = (function()
					return;
				end)();
				while true do
					if (v105 == 0) then
						local v119 = (function()
							return 0;
						end)();
						while true do
							if (v119 ~= 0) then
							else
								local v126 = (function()
									return 0 - 0;
								end)();
								while true do
									if (v126 ~= 1) then
									else
										v119 = (function()
											return 1;
										end)();
										break;
									end
									if (v126 == 0) then
										v96 = (function()
											return 74 - (71 + 3);
										end)();
										v97 = (function()
											return nil;
										end)();
										v126 = (function()
											return 1;
										end)();
									end
								end
							end
							if (1 == v119) then
								v105 = (function()
									return 1 + 0;
								end)();
								break;
							end
						end
					end
					if (1 ~= v105) then
					else
						local v120 = (function()
							return 0;
						end)();
						while true do
							if (v120 == 0) then
								while true do
									if (v96 == 0) then
										v97 = (function()
											return v98();
										end)();
										if (v99(v97, #"]", #"~") == (0 - 0)) then
											local v129 = (function()
												return 0;
											end)();
											local v130 = (function()
												return;
											end)();
											local v131 = (function()
												return;
											end)();
											local v132 = (function()
												return;
											end)();
											while true do
												if (v129 ~= 0) then
												else
													local v215 = (function()
														return 0 - 0;
													end)();
													local v216 = (function()
														return;
													end)();
													while true do
														if (v215 == (241 - (187 + 54))) then
															v216 = (function()
																return 780 - (162 + 618);
															end)();
															while true do
																if ((1 + 0) ~= v216) then
																else
																	v129 = (function()
																		return 1 + 0;
																	end)();
																	break;
																end
																if (v216 == 0) then
																	local v3131 = (function()
																		return 0;
																	end)();
																	while true do
																		if (v3131 == (0 - 0)) then
																			v130 = (function()
																				return v99(v97, 2, #"asd");
																			end)();
																			v131 = (function()
																				return v99(v97, #"0836", 9 - 3);
																			end)();
																			v3131 = (function()
																				return 1;
																			end)();
																		end
																		if (v3131 == (1 + 0)) then
																			v216 = (function()
																				return 1637 - (1373 + 263);
																			end)();
																			break;
																		end
																	end
																end
															end
															break;
														end
													end
												end
												if ((1003 - (451 + 549)) == v129) then
													if (v99(v131, #"gha", #"xxx") == #"<") then
														v132[#".com"] = (function()
															return v102[v132[#"http"]];
														end)();
													end
													v103[v104] = (function()
														return v132;
													end)();
													break;
												end
												if (v129 == 2) then
													if (v99(v131, #">", #"\\") ~= #"\\") then
													else
														v132[1 + 1] = (function()
															return v102[v132[2 - 0]];
														end)();
													end
													if (v99(v131, 2 - 0, 2) ~= #" ") then
													else
														v132[#"91("] = (function()
															return v102[v132[#"-19"]];
														end)();
													end
													v129 = (function()
														return 3;
													end)();
												end
												if (v129 == (1385 - (746 + 638))) then
													local v218 = (function()
														return 0;
													end)();
													local v219 = (function()
														return;
													end)();
													while true do
														if ((0 + 0) ~= v218) then
														else
															v219 = (function()
																return 0 - 0;
															end)();
															while true do
																if (1 == v219) then
																	v129 = (function()
																		return 2;
																	end)();
																	break;
																end
																if (v219 == (341 - (218 + 123))) then
																	v132 = (function()
																		return {v100(),v100(),nil,nil};
																	end)();
																	if (v130 == (0 + 0)) then
																		local v3139 = (function()
																			return 0;
																		end)();
																		local v3140 = (function()
																			return;
																		end)();
																		while true do
																			if (v3139 ~= 0) then
																			else
																				v3140 = (function()
																					return 0 + 0;
																				end)();
																				while true do
																					if (v3140 == 0) then
																						v132[#"gha"] = (function()
																							return v100();
																						end)();
																						v132[#".dev"] = (function()
																							return v100();
																						end)();
																						break;
																					end
																				end
																				break;
																			end
																		end
																	elseif (v130 == #">") then
																		v132[#"91("] = (function()
																			return v101();
																		end)();
																	elseif (v130 == 2) then
																		v132[#"91("] = (function()
																			return v101() - ((562 - (306 + 254)) ^ (1 + 15));
																		end)();
																	elseif (v130 ~= #"19(") then
																	else
																		local v3153 = (function()
																			return 0;
																		end)();
																		local v3154 = (function()
																			return;
																		end)();
																		while true do
																			if (v3153 == 0) then
																				v3154 = (function()
																					return 0 - 0;
																				end)();
																				while true do
																					if ((1467 - (899 + 568)) == v3154) then
																						v132[#"nil"] = (function()
																							return v101() - (2 ^ (11 + 5));
																						end)();
																						v132[#"0313"] = (function()
																							return v100();
																						end)();
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																	v219 = (function()
																		return 2 - 1;
																	end)();
																end
															end
															break;
														end
													end
												end
											end
										end
										break;
									end
								end
								return v96, v97, v98, v99, v100, v101, v102, v103, v104;
							end
						end
					end
				end
			end;
		end)();
		local v55 = (function()
			return function(v106, v107, v108)
				local v109 = (function()
					return 0;
				end)();
				while true do
					if (v109 == (603 - (268 + 335))) then
						local v121 = (function()
							return 0;
						end)();
						local v122 = (function()
							return;
						end)();
						while true do
							if (v121 == (290 - (60 + 230))) then
								v122 = (function()
									return 572 - (426 + 146);
								end)();
								while true do
									if (v122 ~= (0 + 0)) then
									else
										local v128 = (function()
											return 1456 - (282 + 1174);
										end)();
										while true do
											if (v128 ~= (811 - (569 + 242))) then
											else
												v106[v107 - #">"] = (function()
													return v108();
												end)();
												return v106, v107, v108;
											end
										end
									end
								end
								break;
							end
						end
					end
				end
			end;
		end)();
		local v56 = (function()
			return {};
		end)();
		local v57 = (function()
			return {};
		end)();
		local v58 = (function()
			return {};
		end)();
		local v59 = (function()
			return {v56,v57,nil,v58};
		end)();
		local v60 = (function()
			return v23();
		end)();
		local v61 = (function()
			return {};
		end)();
		for v69 = #"/", v60 do
			local v70 = (function()
				return 0 - 0;
			end)();
			local v71 = (function()
				return;
			end)();
			local v72 = (function()
				return;
			end)();
			local v73 = (function()
				return;
			end)();
			while true do
				if (v70 == (0 + 0)) then
					v71 = (function()
						return 1024 - (706 + 318);
					end)();
					v72 = (function()
						return nil;
					end)();
					v70 = (function()
						return 1;
					end)();
				end
				if (v70 == 1) then
					v73 = (function()
						return nil;
					end)();
					while true do
						if (v71 == 0) then
							local v124 = (function()
								return 0;
							end)();
							while true do
								if (v124 ~= 0) then
								else
									local v127 = (function()
										return 1251 - (721 + 530);
									end)();
									while true do
										if (v127 == 1) then
											v124 = (function()
												return 1;
											end)();
											break;
										end
										if (v127 == (1271 - (945 + 326))) then
											v72 = (function()
												return v21();
											end)();
											v73 = (function()
												return nil;
											end)();
											v127 = (function()
												return 2 - 1;
											end)();
										end
									end
								end
								if (v124 ~= (1 + 0)) then
								else
									v71 = (function()
										return 701 - (271 + 429);
									end)();
									break;
								end
							end
						end
						if (v71 ~= (1 + 0)) then
						else
							if (v72 == #"\\") then
								v73 = (function()
									return v21() ~= (1500 - (1408 + 92));
								end)();
							elseif (v72 == (1088 - (461 + 625))) then
								v73 = (function()
									return v24();
								end)();
							elseif (v72 == #"gha") then
								v73 = (function()
									return v25();
								end)();
							end
							v61[v69] = (function()
								return v73;
							end)();
							break;
						end
					end
					break;
				end
			end
		end
		v59[#"91("] = (function()
			return v21();
		end)();
		for v74 = #"|", v23() do
			FlatIdent_45D0C, Descriptor, v21, v20, v22, v23, v61, v56, v74 = (function()
				return v54(FlatIdent_45D0C, Descriptor, v21, v20, v22, v23, v61, v56, v74);
			end)();
		end
		for v75 = #".", v23() do
			v57, v75, v28 = (function()
				return v55(v57, v75, v28);
			end)();
		end
		return v59;
	end
	local function v29(v63, v64, v65)
		local v66 = v63[1289 - (993 + (413 - (31 + 87)))];
		local v67 = v63[1 + 1];
		local v68 = v63[1174 - (418 + 753)];
		return function(...)
			local v76 = v66;
			local v77 = v67;
			local v78 = v68;
			local v79 = v27;
			local v80 = 1 + (131 - (44 + 87));
			local v81 = -(1 + 0);
			local v82 = {};
			local v83 = {...};
			local v84 = v12("#", ...) - 1;
			local v85 = {};
			local v86 = {};
			for v110 = 0 + 0, v84 do
				if ((v110 >= v78) or (3939 <= 1933)) then
					v82[v110 - v78] = v83[v110 + 1 + 0];
				else
					v86[v110] = v83[v110 + (530 - (332 + 74 + 123))];
				end
			end
			local v87 = (v84 - v78) + ((3882 - 2112) - (1749 + 20));
			local v88;
			local v89;
			while true do
				v88 = v76[v80];
				v89 = v88[1 + 0];
				if (v89 <= 57) then
					if ((1530 < 2138) and (v89 <= 28)) then
						if ((515 == 515) and (v89 <= (1335 - (1249 + (210 - 137))))) then
							if (v89 <= (3 + 3)) then
								if (v89 <= 2) then
									if (v89 <= (1145 - (466 + 679))) then
										local v134 = 0 - (786 - (284 + 502));
										local v135;
										while true do
											if (v134 == (19 - 12)) then
												v88 = v76[v80];
												v135 = v88[1902 - (106 + 1794)];
												v86[v135] = v86[v135](v13(v86, v135 + 1, v88[1 + 2]));
												v134 = 3 + 4 + 1;
											end
											if (v134 == (2 - (1187 - (124 + 1062)))) then
												v88 = v76[v80];
												v86[v88[(1032 - (847 + 180)) - (3 + 0)]] = v86[v88[117 - (4 + 110)]][v88[588 - (57 + 527)]];
												v80 = v80 + (1428 - (41 + 1386));
												v134 = 105 - (17 + 86);
											end
											if (v134 == 6) then
												v88 = v76[v80];
												v86[v88[2 + 0]] = v88[6 - 3];
												v80 = v80 + (2 - 1);
												v134 = 173 - (122 + (183 - 139));
											end
											if (v134 == (8 - 3)) then
												v88 = v76[v80];
												v86[v88[6 - 4]] = v88[1366 - (369 + 994)];
												v80 = v80 + 1 + 0;
												v134 = (964 - (583 + 380)) + 5;
											end
											if (v134 == (17 - 8)) then
												v80 = v80 + 1;
												v88 = v76[v80];
												v86[v88[67 - (30 + 35)]] = v86[v88[3 + 0 + 0]][v88[1261 - (1043 + 156 + 58)]];
												break;
											end
											if ((v134 == (15 - 11)) or (170 >= 939)) then
												v88 = v76[v80];
												v86[v88[(598 + 616) - (323 + 889)]] = v88[(1980 - (1085 + 888)) - 4];
												v80 = v80 + (581 - (361 + 219));
												v134 = (802 - 477) - ((202 - 149) + 267);
											end
											if ((v134 == (1 + 2)) or (901 > 1621)) then
												v88 = v76[v80];
												v86[v88[415 - (15 + 398)]] = v86[v88[985 - ((84 - 66) + 964)]][v88[14 - 10]];
												v80 = v80 + 1 + 0;
												v134 = 3 + (1 - 0);
											end
											if (v134 == ((253 + 597) - (20 + 830))) then
												v135 = nil;
												v86[v88[2 + 0]][v86[v88[129 - (116 + 10)]]] = v86[v88[1 + 0 + 3]];
												v80 = v80 + (739 - (542 + 196));
												v134 = 1 - 0;
											end
											if (v134 == 8) then
												v80 = v80 + 1 + 0 + 0;
												v88 = v76[v80];
												v86[v88[2 + 0]][v86[v88[3]]] = v86[v88[2 + 2]];
												v134 = 23 - 14;
											end
											if (v134 == (4 - (2 - 0))) then
												v88 = v76[v80];
												v86[v88[1553 - (1126 + 425)]] = v65[v88[408 - ((165 - 47) + 287)]];
												v80 = v80 + 1;
												v134 = 11 - 8;
											end
										end
									elseif (v89 > (1122 - (118 + 1003))) then
										if ((3870 > 2325) and not v86[v88[2]]) then
											v80 = v80 + (2 - 1);
										else
											v80 = v88[3];
										end
									else
										local v220;
										local v221;
										v86[v88[379 - (142 + 235)]] = v86[v88[3]][v88[18 - (12 + 2)]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[2]] = v86[v88[3]][v88[981 - (553 + 424)]];
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[2 + 0]][v88[3 + 0 + 0]] = v86[v88[3 + 1]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[1 + 1]][v88[2 + 1]] = v86[v88[8 - 4]];
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[4 - 2]] = v86[v88[1 + 2]][v88[(19 + 0) - 15]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v221 = v88[755 - (239 + 514)];
										v220 = v86[v88[3]];
										v86[v221 + 1] = v220;
										v86[v221] = v220[v88[2 + 2]];
									end
								elseif (v89 <= (1333 - (797 + 532))) then
									if (v89 > (3 + 0)) then
										local v238 = 0 + 0;
										local v239;
										while true do
											if ((4 - 2) == v238) then
												v88 = v76[v80];
												v86[v88[2]][v88[1205 - ((587 - (153 + 61)) + 829)]] = v86[v88[735 - (476 + 255)]];
												v80 = v80 + ((2074 - (704 + 239)) - (171 + 198 + 761));
												v88 = v76[v80];
												v86[v88[2 + 0]] = v86[v88[5 - 2]];
												v80 = v80 + ((1387 - (740 + 646)) - 0);
												v88 = v76[v80];
												v86[v88[240 - (64 + 174)]] = v88[1 + 2];
												v80 = v80 + (1 - (0 + 0));
												v88 = v76[v80];
												v238 = (2261 - (1547 + 375)) - (144 + 192);
											end
											if (v238 == (227 - (22 + 20 + 174))) then
												v86[v88[2 + 0]] = v88[3];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v239 = v88[405 - (211 + 192)];
												v86[v239] = v86[v239](v13(v86, v239 + 1 + 0, v88[1507 - (363 + 1141)]));
												v80 = v80 + (1581 - (1183 + 397));
												v88 = v76[v80];
												v86[v88[5 - 3]][v88[3]] = v86[v88[3 + 1]];
												v80 = v80 + 1 + (0 - 0);
												v88 = v76[v80];
												v238 = 12;
											end
											if ((v238 == (1995 - (1913 + (95 - 33)))) or (878 > 4169)) then
												v86[v88[2 + 0]] = v86[v88[7 - 4]];
												v80 = v80 + ((2715 - (425 + 356)) - (50 + 515 + 1368));
												v88 = v76[v80];
												v86[v88[7 - 5]] = v88[3];
												v80 = v80 + (1662 - (1477 + 184));
												v88 = v76[v80];
												v86[v88[2 - 0]] = v88[3];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v239 = v88[(2236 - 1378) - ((2130 - (83 + 1483)) + 292)];
												v238 = 35 - 14;
											end
											if (v238 == 13) then
												v86[v239] = v86[v239](v13(v86, v239 + 1, v88[(1280 - (123 + 1149)) - 5]));
												v80 = v80 + (305 - (193 + 51 + 60));
												v88 = v76[v80];
												v86[v88[2]][v88[2 + 1 + 0]] = v86[v88[480 - ((1621 - (908 + 672)) + 435)]];
												v80 = v80 + (1002 - (938 + 63));
												v88 = v76[v80];
												v86[v88[2 + 0]] = v86[v88[1128 - (936 + 189)]];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v86[v88[1615 - ((2078 - (206 + 307)) + 48)]] = v88[2 + 1];
												v238 = 1152 - (651 + 131 + (418 - (18 + 44)));
											end
											if (v238 == (274 - (60 + 116 + 91))) then
												v80 = v80 + (2 - 1);
												v88 = v76[v80];
												v86[v88[2 - 0]] = v86[v88[1095 - ((2136 - 1161) + 117)]];
												v80 = v80 + (1876 - (157 + 1718));
												v88 = v76[v80];
												v86[v88[2]] = v88[3 + 0];
												v80 = v80 + (3 - 2);
												v88 = v76[v80];
												v86[v88[(13 - 7) - 4]] = v88[(190 + 831) - (697 + 321)];
												v80 = v80 + (2 - 1);
												v238 = (951 - (226 + 709)) - 8;
											end
											if ((20 - (737 - (235 + 491))) == v238) then
												v88 = v76[v80];
												v86[v88[(1 - 0) + 1 + 0]] = v88[5 - 2];
												v80 = v80 + (2 - 1);
												v88 = v76[v80];
												v86[v88[1229 - (322 + 905)]] = v88[614 - (602 + 9)];
												v80 = v80 + (1190 - (449 + (2039 - (463 + 836))));
												v88 = v76[v80];
												v239 = v88[2];
												v86[v239] = v86[v239](v13(v86, v239 + (873 - (826 + 46)), v88[(1354 - (166 + 238)) - ((426 - 181) + 702)]));
												v80 = v80 + ((3 + 0) - 2);
												v238 = 4 + 6;
											end
											if ((v238 == 0) or (2885 == 3440)) then
												v239 = nil;
												v239 = v88[2];
												v86[v239] = v86[v239](v13(v86, v239 + 1, v88[1901 - (260 + (3079 - (1080 + 361)))]));
												v80 = v80 + (441 - (382 + 58));
												v88 = v76[v80];
												v86[v88[2]][v88[4 - 1]] = v86[v88[12 - (4 + 4)]];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v86[v88[3 - 1]] = v86[v88[8 - 5]];
												v80 = v80 + 1;
												v238 = 1;
											end
											if (((1227 - (902 + 303)) == v238) or (242 == 4032)) then
												v80 = v80 + (1 - (0 - 0));
												v88 = v76[v80];
												v86[v88[4 - 2]] = v88[1 + 2];
												v80 = v80 + (1691 - (1121 + 569));
												v88 = v76[v80];
												v239 = v88[2];
												v86[v239] = v86[v239](v13(v86, v239 + (215 - (22 + 192)), v88[686 - (483 + 200)]));
												v80 = v80 + (1464 - (1404 + 59));
												v88 = v76[v80];
												v86[v88[2]][v88[8 - 5]] = v86[v88[4]];
												v238 = 30 - 7;
											end
											if ((970 == 970) and ((784 - (468 + 297)) == v238)) then
												v86[v88[564 - (334 + 228)]] = v88[10 - 7];
												v80 = v80 + 1;
												v88 = v76[v80];
												v239 = v88[2];
												v86[v239] = v86[v239](v13(v86, v239 + 1, v88[6 - 3]));
												v80 = v80 + 1;
												v88 = v76[v80];
												v86[v88[2 - 0]][v88[1 + 2]] = v86[v88[(540 - (254 + 46)) - (141 + 95)]];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v238 = 20;
											end
											if ((v238 == (5 + 19)) or (3715 <= 3322)) then
												v88 = v76[v80];
												v239 = v88[2];
												v86[v239] = v86[v239](v13(v86, v239 + (2 - 1), v88[6 - (2 + 1)]));
												v80 = v80 + 1;
												v88 = v76[v80];
												v86[v88[1 + 1]][v88[8 - 5]] = v86[v88[4]];
												v80 = v80 + 1 + (256 - (37 + 219));
												v88 = v76[v80];
												v86[v88[2 + (1899 - (1330 + 569))]] = v86[v88[4 - (1 - 0)]];
												v80 = v80 + 1;
												v238 = (24 - 9) + 10;
											end
											if (v238 == 14) then
												v80 = v80 + 1;
												v88 = v76[v80];
												v86[v88[165 - (92 + 71)]] = v88[(7 - 5) + 1];
												v80 = v80 + (1 - 0);
												v88 = v76[v80];
												v239 = v88[2];
												v86[v239] = v86[v239](v13(v86, v239 + 1, v88[768 - (574 + 191)]));
												v80 = v80 + 1 + (0 - 0);
												v88 = v76[v80];
												v86[v88[4 - 2]][v88[2 + 1]] = v86[v88[853 - (254 + 595)]];
												v238 = 141 - (55 + 71);
											end
											if (v238 == (3 - (670 - (128 + 542)))) then
												v86[v88[1792 - (573 + 1217)]] = v88[8 - 5];
												v80 = v80 + (1 - 0) + 0;
												v88 = v76[v80];
												v239 = v88[2];
												v86[v239] = v86[v239](v13(v86, v239 + 1, v88[3]));
												v80 = v80 + (1 - 0);
												v88 = v76[v80];
												v86[v88[2]][v88[3]] = v86[v88[943 - (714 + 225)]];
												v80 = v80 + (3 - 2);
												v88 = v76[v80];
												v238 = 11 - 7;
											end
											if (v238 == (10 - (6 - 4))) then
												v88 = v76[v80];
												v239 = v88[1 + 1];
												v86[v239] = v86[v239](v13(v86, v239 + 1, v88[3]));
												v80 = v80 + ((1 + 0) - 0);
												v88 = v76[v80];
												v86[v88[2]][v88[809 - (118 + 688)]] = v86[v88[52 - (25 + 23)]];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v86[v88[1888 - (927 + 959)]] = v86[v88[(35 - 25) - 7]];
												v80 = v80 + (733 - (16 + 716));
												v238 = 16 - 7;
											end
											if ((430 <= 2829) and (v238 == (118 - (11 + 86)))) then
												v86[v239] = v86[v239](v13(v86, v239 + (2 - 1), v88[3]));
												v80 = v80 + (286 - (175 + 110));
												v88 = v76[v80];
												v86[v88[4 - 2]][v88[(13 + 1) - 11]] = v86[v88[1800 - (503 + 1293)]];
												v80 = v80 + (2 - 1);
												v88 = v76[v80];
												v86[v88[2 + 0]] = v86[v88[1064 - (810 + 251)]];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v86[v88[2]] = v88[1 + 2];
												v238 = 22;
											end
											if ((v238 == (1 + 0)) or (653 > 1090)) then
												v88 = v76[v80];
												v86[v88[2 + 0]] = v88[536 - (43 + 490)];
												v80 = v80 + (734 - (711 + 22));
												v88 = v76[v80];
												v86[v88[7 - 5]] = v88[(1760 - 898) - (240 + 619)];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v239 = v88[2 - 0];
												v86[v239] = v86[v239](v13(v86, v239 + 1 + 0, v88[(1588 + 159) - (1344 + 400)]));
												v80 = v80 + (406 - (255 + 150));
												v238 = 2 + 0;
											end
											if ((4 + (814 - (96 + 716))) == v238) then
												v80 = v80 + 1;
												v88 = v76[v80];
												v86[v88[8 - 6]] = v88[9 - 6];
												v80 = v80 + (1740 - (404 + (2942 - (85 + 1522))));
												v88 = v76[v80];
												v239 = v88[408 - (183 + 223)];
												v86[v239] = v86[v239](v13(v86, v239 + 1, v88[(856 - (724 + 129)) - 0]));
												v80 = v80 + 1;
												v88 = v76[v80];
												v86[v88[(6 - 4) + 0]][v88[2 + 1]] = v86[v88[4]];
												v238 = (717 - (83 + 290)) - (10 + 327);
											end
											if (v238 == (17 + 6)) then
												v80 = v80 + (1 - 0);
												v88 = v76[v80];
												v86[v88[340 - (118 + 220)]] = v86[v88[1 + (3 - 1)]];
												v80 = v80 + (450 - (108 + 341));
												v88 = v76[v80];
												v86[v88[1 + 1]] = v88[12 - 9];
												v80 = v80 + (1494 - (711 + 782));
												v88 = v76[v80];
												v86[v88[(3 + 0) - (1 + 0)]] = v88[472 - (270 + 199)];
												v80 = v80 + 1;
												v238 = 8 + 7 + 9;
											end
											if ((1835 - (580 + (1799 - 560))) == v238) then
												v88 = v76[v80];
												v239 = v88[5 - 3];
												v86[v239] = v86[v239](v13(v86, v239 + 1 + 0, v88[1 + 0 + 2]));
												v80 = v80 + 1;
												v88 = v76[v80];
												v86[v88[2]][v88[2 + 1]] = v86[v88[9 - (10 - 5)]];
												v80 = v80 + 1;
												v88 = v76[v80];
												v86[v88[2 + 0]] = v86[v88[1170 - (645 + (1019 - 497))]];
												v80 = v80 + (1791 - ((1457 - (190 + 257)) + 780));
												v238 = 17;
											end
											if ((v238 == (18 + 0)) or (714 > 2277)) then
												v88 = v76[v80];
												v86[v88[2]][v88[14 - 11]] = v86[v88[11 - (598 - (402 + 189))]];
												v80 = v80 + (1837 - (1045 + 791));
												v88 = v76[v80];
												v86[v88[4 - 2]] = v86[v88[4 - 1]];
												v80 = v80 + (506 - (351 + 154));
												v88 = v76[v80];
												v86[v88[2]] = v88[1577 - (706 + 575 + 293)];
												v80 = v80 + (267 - ((594 - (90 + 476)) + 238));
												v88 = v76[v80];
												v238 = 41 - (836 - (688 + 126));
											end
											if ((5 == v238) or (651 > 4917)) then
												v86[v239] = v86[v239](v13(v86, v239 + 1, v88[1562 - (1381 + 178)]));
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v86[v88[2]][v88[2 + 1 + 0]] = v86[v88[4]];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v86[v88[6 - 4]] = v86[v88[2 + 1]];
												v80 = v80 + (471 - (381 + 89));
												v88 = v76[v80];
												v86[v88[2 + 0]] = v88[1 + 2 + 0];
												v238 = 9 - 3;
											end
											if (v238 == (1168 - (1074 + 82))) then
												v86[v88[2]] = v86[v88[3]];
												v80 = v80 + (1 - 0);
												v88 = v76[v80];
												v86[v88[1786 - (214 + 1570)]] = v88[1458 - (990 + 465)];
												v80 = v80 + 1;
												v88 = v76[v80];
												v86[v88[2]] = v88[2 + 1];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v239 = v88[2];
												v238 = 13 + 0;
											end
											if ((3672 >= 155) and (v238 == ((514 - (34 + 465)) - (47 - 36)))) then
												v86[v88[2]] = v86[v88[3]];
												v80 = v80 + ((3645 - 1918) - (869 + 799 + 58));
												v88 = v76[v80];
												v86[v88[628 - (512 + 114)]] = v88[7 - 4];
												v80 = v80 + (1 - 0);
												v88 = v76[v80];
												v86[v88[6 - 4]] = v88[3];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v239 = v88[1 + 1];
												v238 = 5 + 0;
											end
											if ((v238 == (50 - 35)) or (1609 < 727)) then
												v80 = v80 + (1995 - (109 + 1885));
												v88 = v76[v80];
												v86[v88[1471 - (1269 + 200)]] = v86[v88[5 - 2]];
												v80 = v80 + (816 - (98 + 717));
												v88 = v76[v80];
												v86[v88[2]] = v88[3];
												v80 = v80 + (827 - (802 + 24));
												v88 = v76[v80];
												v86[v88[2]] = v88[3];
												v80 = v80 + 1;
												v238 = 27 - 11;
											end
											if (((12 - 2) == v238) or (304 < 148)) then
												v88 = v76[v80];
												v86[v88[2]][v88[1 + 2]] = v86[v88[4 + 0]];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v86[v88[1 + 1]] = v86[v88[8 - 5]];
												v80 = v80 + 1;
												v88 = v76[v80];
												v86[v88[6 - 4]] = v88[2 + 1];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v238 = 10 + 1;
											end
											if ((v238 == (19 + 6)) or (3126 > 4879)) then
												v88 = v76[v80];
												v86[v88[2]] = v88[2 + 1];
												v80 = v80 + (1434 - (797 + 636));
												v88 = v76[v80];
												v86[v88[9 - 7]] = v88[3];
												break;
											end
											if ((v238 == (1636 - (1427 + 192))) or (187 > 762)) then
												v88 = v76[v80];
												v86[v88[1 + 1]] = v88[6 - 3];
												v80 = v80 + 1 + 0;
												v88 = v76[v80];
												v86[v88[1 + 1]] = v88[329 - (192 + 134)];
												v80 = v80 + (1277 - (316 + 960));
												v88 = v76[v80];
												v239 = v88[2 + 0];
												v86[v239] = v86[v239](v13(v86, v239 + 1 + 0, v88[3]));
												v80 = v80 + 1;
												v238 = 17 + 1;
											end
										end
									else
										v86[v88[7 - 5]] = v88[554 - (83 + 468)];
									end
								elseif (v89 > (1811 - (1202 + 604))) then
									local v242 = 0 - 0;
									local v243;
									while true do
										if (v242 == (0 - 0)) then
											v243 = v88[5 - 3];
											do
												return v13(v86, v243, v243 + v88[328 - (45 + 280)]);
											end
											break;
										end
									end
								else
									local v244 = 0 + 0;
									local v245;
									local v246;
									while true do
										if ((1791 == 1791) and ((0 + 0) == v244)) then
											v245 = nil;
											v246 = nil;
											v246 = v88[1 + 1];
											v245 = v86[v88[3]];
											v244 = 1;
										end
										if (v244 == (2 + 0)) then
											v246 = v88[1 + 1];
											v86[v246](v86[v246 + (1 - 0)]);
											v80 = v80 + (1912 - (340 + 1571));
											v88 = v76[v80];
											v244 = 2 + 1;
										end
										if ((1775 - (1733 + 39)) == v244) then
											for v3105 = v88[5 - 3], v88[1037 - (125 + 909)] do
												v86[v3105] = nil;
											end
											v80 = v80 + (1949 - (1096 + 852));
											v88 = v76[v80];
											v64[v88[2 + 1]] = v86[v88[2 - 0]];
											v244 = 4 + 0;
										end
										if ((513 - (409 + 103)) == v244) then
											v86[v246 + (237 - (46 + 190))] = v245;
											v86[v246] = v245[v88[99 - (51 + 44)]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v244 = 1 + 1;
										end
										if (v244 == (1321 - (1114 + 203))) then
											v80 = v80 + (727 - (228 + 498));
											v88 = v76[v80];
											v80 = v88[1 + 2];
											break;
										end
									end
								end
							elseif ((v89 <= (5 + 4)) or (3815 <= 204)) then
								if (v89 <= (670 - (174 + 489))) then
									local v136 = v86[v88[10 - 6]];
									if ((367 < 1923) and not v136) then
										v80 = v80 + (1906 - (830 + 1075));
									else
										v86[v88[526 - (303 + 221)]] = v136;
										v80 = v88[1272 - (231 + 1038)];
									end
								elseif (v89 == (7 + 1)) then
									v86[v88[1164 - (171 + 991)]] = v64[v88[12 - 9]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[4 - 2]] = v86[v88[3 + 0]][v88[4]];
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v86[v88[2]][v88[8 - 5]] = v86[v88[4]];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[2]] = v64[v88[9 - 6]];
									v80 = v80 + (1249 - (111 + 1137));
									v88 = v76[v80];
									v86[v88[160 - (91 + 67)]] = v86[v88[8 - 5]][v88[1 + 3]];
									v80 = v80 + (524 - (423 + 100));
									v88 = v76[v80];
									v86[v88[2]][v88[3]] = v86[v88[1 + 3]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[3]] = v88[775 - (326 + 445)];
									v80 = v80 + (4 - 3);
									v88 = v76[v80];
									v86[v88[2]] = v64[v88[6 - 3]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[3]][v88[4]];
									v80 = v80 + (712 - (530 + 181));
									v88 = v76[v80];
									v86[v88[2]][v88[884 - (614 + 267)]] = v86[v88[36 - (19 + 13)]];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[4 - 2]] = v65[v88[8 - 5]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[3 - 1]] = v86[v88[6 - 3]][v88[1816 - (1293 + 519)]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[3 - 1]] = v86[v88[7 - 4]][v88[7 - 3]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[8 - 6]][v88[6 - 3]] = v86[v88[3 + 1]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[4 - 2]] = v88[1 + 2];
								else
									v86[v88[2]] = v86[v88[1 + 2]] % v86[v88[3 + 1]];
								end
							elseif (v89 <= (1107 - (709 + 387))) then
								if (v89 > (1868 - (673 + 1185))) then
									local v276 = v88[2];
									do
										return v13(v86, v276, v81);
									end
								else
									local v277 = 0;
									local v278;
									while true do
										if (3 == v277) then
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[6 - 4]] = v86[v88[4 - 1]];
											v80 = v80 + 1;
											v277 = 3 + 1;
										end
										if ((2944 <= 3679) and (v277 == 1)) then
											v86[v88[2]] = v64[v88[3]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[2 + 0]] = v86[v88[3 - 0]][v88[4]];
											v277 = 1 + 1;
										end
										if (4 == v277) then
											v88 = v76[v80];
											v86[v88[3 - 1]] = v88[5 - 2];
											break;
										end
										if ((v277 == (1882 - (446 + 1434))) or (3995 < 771)) then
											v80 = v80 + (1284 - (1040 + 243));
											v88 = v76[v80];
											v278 = v88[5 - 3];
											v86[v278] = v86[v278](v86[v278 + (1848 - (559 + 1288))]);
											v277 = 1934 - (609 + 1322);
										end
										if (v277 == (454 - (13 + 441))) then
											v278 = nil;
											v86[v88[7 - 5]] = v86[v88[7 - 4]][v88[19 - 15]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v277 = 1;
										end
									end
								end
							elseif (v89 == (43 - 31)) then
								v86[v88[1 + 1]] = not v86[v88[2 + 1]];
							else
								v86[v88[5 - 3]] = v86[v88[2 + 1]][v88[4]];
							end
						elseif (v89 <= 20) then
							if ((1345 <= 1927) and (v89 <= (28 - 12))) then
								if ((250 <= 2837) and (v89 <= (10 + 4))) then
									local v137 = 0;
									local v138;
									local v139;
									while true do
										if (v137 == (1 + 0)) then
											v88 = v76[v80];
											v86[v88[2 + 0]] = v64[v88[3 + 0]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v137 = 2;
										end
										if ((0 == v137) or (4038 == 4048)) then
											v138 = nil;
											v139 = nil;
											v86[v88[2 + 0]]();
											v80 = v80 + (434 - (153 + 280));
											v137 = 2 - 1;
										end
										if (v137 == 2) then
											v139 = v88[2 + 0];
											v138 = v86[v88[2 + 1]];
											v86[v139 + 1 + 0] = v138;
											v86[v139] = v138[v88[4 + 0]];
											v137 = 3 + 0;
										end
										if (v137 == (5 - 1)) then
											v80 = v80 + 1;
											v88 = v76[v80];
											v80 = v88[2 + 1];
											break;
										end
										if (v137 == (670 - (89 + 578))) then
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v139 = v88[3 - 1];
											v86[v139](v86[v139 + (1050 - (572 + 477))]);
											v137 = 1 + 3;
										end
									end
								elseif (v89 > (10 + 5)) then
									if v86[v88[1 + 1]] then
										v80 = v80 + (87 - (84 + 2));
									else
										v80 = v88[4 - 1];
									end
								else
									local v282 = v88[2 + 0];
									v86[v282](v13(v86, v282 + (843 - (497 + 345)), v88[1 + 2]));
								end
							elseif ((1057 < 2569) and (v89 <= (4 + 14))) then
								if (v89 > 17) then
									local v283 = 1333 - (605 + 728);
									local v284;
									while true do
										if (v283 == (3 + 1)) then
											v86[v88[2]] = v65[v88[6 - 3]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[7 - 5]] = v86[v88[3]][v88[4 + 0]];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[2 + 0]] = v88[492 - (457 + 32)];
											v80 = v80 + 1;
											v283 = 3 + 2;
										end
										if (v283 == (1408 - (832 + 570))) then
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v284 = v88[1 + 1];
											v86[v284] = v86[v284](v13(v86, v284 + (3 - 2), v88[2 + 1]));
											v80 = v80 + (797 - (588 + 208));
											v88 = v76[v80];
											v86[v88[5 - 3]][v88[1803 - (884 + 916)]] = v86[v88[8 - 4]];
											v80 = v80 + 1 + 0;
											v283 = 660 - (232 + 421);
										end
										if ((1896 - (1569 + 320)) == v283) then
											v88 = v76[v80];
											v86[v88[1 + 1]] = v65[v88[1 + 2]];
											v80 = v80 + (3 - 2);
											v88 = v76[v80];
											v86[v88[607 - (316 + 289)]] = v86[v88[3]][v88[4]];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[1 + 1]] = v88[3];
											v283 = 8;
										end
										if (v283 == (1453 - (666 + 787))) then
											v284 = nil;
											v86[v88[427 - (360 + 65)]] = v86[v88[3 + 0]][v88[4]];
											v80 = v80 + (255 - (79 + 175));
											v88 = v76[v80];
											v86[v88[2 - 0]] = v86[v88[3]][v88[4 + 0]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[5 - 3]][v88[5 - 2]] = v86[v88[903 - (503 + 396)]];
											v283 = 182 - (92 + 89);
										end
										if (v283 == (16 - 7)) then
											v86[v88[2 + 0]] = v88[2 + 1];
											v80 = v80 + (3 - 2);
											v88 = v76[v80];
											v284 = v88[1 + 1];
											v86[v284] = v86[v284](v13(v86, v284 + (2 - 1), v88[3 + 0]));
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[5 - 3]][v88[1 + 2]] = v86[v88[4]];
											v283 = 10;
										end
										if ((v283 == (2 - 0)) or (486 == 2061)) then
											v86[v88[1246 - (485 + 759)]] = v86[v88[6 - 3]][v88[1193 - (442 + 747)]];
											v80 = v80 + (1136 - (832 + 303));
											v88 = v76[v80];
											v86[v88[948 - (88 + 858)]] = v64[v88[3]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[2]] = v86[v88[1 + 2]][v88[4 + 0]];
											v80 = v80 + 1 + 0;
											v283 = 792 - (766 + 23);
										end
										if ((v283 == (54 - 43)) or (1767 >= 4205)) then
											v86[v88[2 - 0]][v88[3]] = v86[v88[4]];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[6 - 4]] = v88[1076 - (1036 + 37)];
											break;
										end
										if ((3962 == 3962) and (v283 == (1 + 0))) then
											v80 = v80 + (1 - 0);
											v88 = v76[v80];
											v86[v88[2 + 0]][v88[1483 - (641 + 839)]] = v86[v88[4]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[915 - (910 + 3)]] = v65[v88[7 - 4]];
											v80 = v80 + (1685 - (1466 + 218));
											v88 = v76[v80];
											v283 = 2;
										end
										if (v283 == 8) then
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[2]] = v88[1151 - (556 + 592)];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[810 - (329 + 479)]] = v88[857 - (174 + 680)];
											v80 = v80 + (3 - 2);
											v88 = v76[v80];
											v283 = 18 - 9;
										end
										if ((8 + 2) == v283) then
											v80 = v80 + (740 - (396 + 343));
											v88 = v76[v80];
											v86[v88[1 + 1]] = v64[v88[1480 - (29 + 1448)]];
											v80 = v80 + (1390 - (135 + 1254));
											v88 = v76[v80];
											v86[v88[2]] = v86[v88[11 - 8]][v88[18 - 14]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v283 = 11;
										end
										if ((4772 > 2530) and (v283 == 5)) then
											v88 = v76[v80];
											v86[v88[1529 - (389 + 1138)]] = v88[577 - (102 + 472)];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[2]] = v88[2 + 1];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[1547 - (320 + 1225)]] = v88[5 - 2];
											v283 = 4 + 2;
										end
										if ((3615 < 3896) and (v283 == (1467 - (157 + 1307)))) then
											v88 = v76[v80];
											v284 = v88[1861 - (821 + 1038)];
											v86[v284] = v86[v284](v86[v284 + 1]);
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[2]] = v86[v88[1 + 2]];
											v80 = v80 + (1 - 0);
											v88 = v76[v80];
											v283 = 4;
										end
									end
								else
									v86[v88[1 + 1]] = {};
								end
							elseif (v89 > 19) then
								local v286 = v88[4 - 2];
								local v287, v288 = v79(v86[v286](v86[v286 + (1027 - (834 + 192))]));
								v81 = (v288 + v286) - (1 + 0);
								local v289 = 0 + 0;
								for v1248 = v286, v81 do
									local v1249 = 0 + 0;
									while true do
										if (v1249 == (0 - 0)) then
											v289 = v289 + (305 - (300 + 4));
											v86[v1248] = v287[v289];
											break;
										end
									end
								end
							else
								local v290 = 0 + 0;
								local v291;
								while true do
									if ((1079 <= 1564) and (v290 == (0 - 0))) then
										v291 = v88[364 - (112 + 250)];
										v86[v291] = v86[v291]();
										break;
									end
								end
							end
						elseif (v89 <= (10 + 14)) then
							if (v89 <= 22) then
								if (v89 == (52 - 31)) then
									v64[v88[2 + 1]] = v86[v88[2]];
								else
									local v294;
									v86[v88[2 + 0]] = v86[v88[3 + 0]][v88[2 + 2]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v64[v88[1417 - (1001 + 413)]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[884 - (244 + 638)]] = v86[v88[696 - (627 + 66)]][v88[11 - 7]];
									v80 = v80 + (603 - (512 + 90));
									v88 = v76[v80];
									v294 = v88[1908 - (1665 + 241)];
									v86[v294] = v86[v294](v86[v294 + (718 - (373 + 344))]);
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[3]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2]] = v64[v88[7 - 4]];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[1101 - (35 + 1064)]] = v86[v88[3 + 0]][v88[8 - 4]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1238 - (298 + 938)]][v88[3]] = v86[v88[4]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2]][v88[3]] = v88[1263 - (233 + 1026)];
									v80 = v80 + (1667 - (636 + 1030));
									v88 = v76[v80];
									v86[v88[2 + 0]] = v65[v88[3]];
								end
							elseif (v89 > 23) then
								local v313 = v88[2 + 0];
								v86[v313](v86[v313 + 1 + 0]);
							else
								local v314 = 0 + 0;
								local v315;
								while true do
									if (v314 == (230 - (55 + 166))) then
										v88 = v76[v80];
										v86[v88[1 + 1]][v88[1 + 2]] = v86[v88[15 - 11]];
										v80 = v80 + (298 - (36 + 261));
										v88 = v76[v80];
										v86[v88[3 - 1]][v88[1371 - (34 + 1334)]] = v88[2 + 2];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[1285 - (1035 + 248)]][v88[24 - (20 + 1)]] = v86[v88[3 + 1]];
										v314 = 329 - (134 + 185);
									end
									if ((1903 <= 4372) and (0 == v314)) then
										v315 = nil;
										v86[v88[1135 - (549 + 584)]] = v86[v88[3]][v88[689 - (314 + 371)]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[6 - 4]] = v64[v88[971 - (478 + 490)]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[1174 - (786 + 386)]] = v86[v88[9 - 6]][v88[1383 - (1055 + 324)]];
										v314 = 1341 - (1093 + 247);
									end
									if (v314 == (7 + 0)) then
										v88 = v76[v80];
										v86[v88[1 + 1]] = v88[11 - 8];
										v80 = v80 + 1;
										v88 = v76[v80];
										v315 = v88[2];
										v86[v315] = v86[v315](v13(v86, v315 + (3 - 2), v88[3]));
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v314 = 8;
									end
									if (v314 == 8) then
										v86[v88[2]][v88[3]] = v86[v88[9 - 5]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[1 + 1]] = v64[v88[11 - 8]];
										v80 = v80 + (3 - 2);
										v88 = v76[v80];
										v86[v88[2 + 0]] = v86[v88[7 - 4]][v88[692 - (364 + 324)]];
										v80 = v80 + (2 - 1);
										v314 = 9;
									end
									if ((v314 == 3) or (4904 <= 4858)) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[4 - 2]] = v88[1 + 2];
										v80 = v80 + (4 - 3);
										v88 = v76[v80];
										v86[v88[2 - 0]] = v88[8 - 5];
										v80 = v80 + 1;
										v88 = v76[v80];
										v314 = 1272 - (1249 + 19);
									end
									if (v314 == (10 + 0)) then
										v80 = v80 + (3 - 2);
										v88 = v76[v80];
										v86[v88[1088 - (686 + 400)]] = v88[3 + 0];
										break;
									end
									if ((3206 <= 4872) and (v314 == (230 - (73 + 156)))) then
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v315 = v88[813 - (721 + 90)];
										v86[v315] = v86[v315](v86[v315 + 1 + 0]);
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[6 - 4]] = v86[v88[3]];
										v80 = v80 + (471 - (224 + 246));
										v314 = 2 - 0;
									end
									if (v314 == (6 - 2)) then
										v86[v88[1 + 1]] = v88[3];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v315 = v88[2 + 0];
										v86[v315] = v86[v315](v13(v86, v315 + (1 - 0), v88[9 - 6]));
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[515 - (203 + 310)]][v88[3]] = v86[v88[1997 - (1238 + 755)]];
										v314 = 5;
									end
									if (v314 == (1 + 4)) then
										v80 = v80 + (1535 - (709 + 825));
										v88 = v76[v80];
										v86[v88[3 - 1]] = v65[v88[3 - 0]];
										v80 = v80 + (865 - (196 + 668));
										v88 = v76[v80];
										v86[v88[7 - 5]] = v86[v88[5 - 2]][v88[4]];
										v80 = v80 + (834 - (171 + 662));
										v88 = v76[v80];
										v314 = 99 - (4 + 89);
									end
									if ((1843 == 1843) and ((20 - 14) == v314)) then
										v86[v88[1 + 1]] = v88[3];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[8 - 6]] = v88[2 + 1];
										v80 = v80 + (1487 - (35 + 1451));
										v88 = v76[v80];
										v86[v88[2]] = v88[1456 - (28 + 1425)];
										v80 = v80 + 1;
										v314 = 2000 - (941 + 1052);
									end
									if (v314 == 2) then
										v88 = v76[v80];
										v86[v88[2]] = v65[v88[3 + 0]];
										v80 = v80 + (1515 - (822 + 692));
										v88 = v76[v80];
										v86[v88[2]] = v86[v88[3 - 0]][v88[2 + 2]];
										v80 = v80 + (298 - (45 + 252));
										v88 = v76[v80];
										v86[v88[2 + 0]] = v88[2 + 1];
										v314 = 7 - 4;
									end
								end
							end
						elseif (v89 <= (459 - (114 + 319))) then
							if (v89 == (35 - 10)) then
								local v316;
								v86[v88[2]] = v65[v88[3 - 0]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[2 + 0]] = v86[v88[4 - 1]][v88[8 - 4]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[1965 - (556 + 1407)]] = v64[v88[1209 - (741 + 465)]];
								v80 = v80 + (466 - (170 + 295));
								v88 = v76[v80];
								v86[v88[2 + 0]] = v86[v88[3 + 0]][v88[9 - 5]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v316 = v88[2];
								v86[v316] = v86[v316](v86[v316 + 1 + 0]);
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[1232 - (957 + 273)]] = v86[v88[1 + 2]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[7 - 5]] = v65[v88[7 - 4]];
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v86[v88[9 - 7]] = v86[v88[1783 - (389 + 1391)]][v88[4]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[1 + 1]] = v88[6 - 3];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[953 - (783 + 168)]] = v88[9 - 6];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[313 - (309 + 2)]] = v88[3];
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v86[v88[2]] = v88[1215 - (1090 + 122)];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v316 = v88[6 - 4];
								v86[v316] = v86[v316](v13(v86, v316 + 1, v88[3]));
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[1120 - (628 + 490)]][v88[1 + 2]] = v86[v88[9 - 5]];
								v80 = v80 + (4 - 3);
								v88 = v76[v80];
								v86[v88[776 - (431 + 343)]] = v65[v88[5 - 2]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[5 - 3]] = v86[v88[3 + 0]][v88[1 + 3]];
								v80 = v80 + (1696 - (556 + 1139));
								v88 = v76[v80];
								v86[v88[2]] = v88[3];
								v80 = v80 + (16 - (6 + 9));
								v88 = v76[v80];
								v86[v88[1 + 1]] = v88[2 + 1];
								v80 = v80 + (170 - (28 + 141));
								v88 = v76[v80];
								v86[v88[1 + 1]] = v88[3 - 0];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[2 + 0]] = v88[1320 - (486 + 831)];
								v80 = v80 + 1;
								v88 = v76[v80];
								v316 = v88[5 - 3];
								v86[v316] = v86[v316](v13(v86, v316 + (3 - 2), v88[1 + 2]));
								v80 = v80 + (3 - 2);
								v88 = v76[v80];
								v86[v88[1265 - (668 + 595)]][v88[3 + 0]] = v86[v88[1 + 3]];
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v86[v88[292 - (23 + 267)]][v88[1947 - (1129 + 815)]] = v88[391 - (371 + 16)];
								v80 = v80 + (1751 - (1326 + 424));
								v88 = v76[v80];
								v86[v88[3 - 1]] = v64[v88[10 - 7]];
								v80 = v80 + (119 - (88 + 30));
								v88 = v76[v80];
								v86[v88[773 - (720 + 51)]] = v86[v88[6 - 3]][v88[1780 - (421 + 1355)]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[2 - 0]][v88[2 + 1]] = v86[v88[4]];
								v80 = v80 + (1084 - (286 + 797));
								v88 = v76[v80];
								v86[v88[2]] = v88[10 - 7];
							else
								local v362;
								local v363;
								v86[v88[2 - 0]] = v86[v88[442 - (397 + 42)]][v88[2 + 2]];
								v80 = v80 + (801 - (24 + 776));
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[4 - 1]][v88[4]];
								v80 = v80 + (786 - (222 + 563));
								v88 = v76[v80];
								v86[v88[3 - 1]] = v65[v88[3 + 0]];
								v80 = v80 + (191 - (23 + 167));
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[3]][v88[1802 - (690 + 1108)]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[3 + 0]][v88[852 - (40 + 808)]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v363 = v88[7 - 5];
								v86[v363] = v86[v363](v13(v86, v363 + 1 + 0, v88[2 + 1]));
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[573 - (47 + 524)]] = v86[v88[2 + 1]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[5 - 3]] = v64[v88[4 - 1]];
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v363 = v88[1728 - (1165 + 561)];
								v362 = v86[v88[1 + 2]];
								v86[v363 + (3 - 2)] = v362;
								v86[v363] = v362[v88[2 + 2]];
								v80 = v80 + (480 - (341 + 138));
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[1 + 2]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[3 - 1]] = v86[v88[329 - (89 + 237)]];
								v80 = v80 + (3 - 2);
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[6 - 3]];
								v80 = v80 + (882 - (581 + 300));
								v88 = v76[v80];
								v363 = v88[2];
								do
									return v86[v363](v13(v86, v363 + (1221 - (855 + 365)), v88[3]));
								end
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v363 = v88[1 + 1];
								do
									return v13(v86, v363, v81);
								end
								v80 = v80 + (1236 - (1030 + 205));
								v88 = v76[v80];
								v80 = v88[3];
							end
						elseif (v89 == (26 + 1)) then
							local v388;
							v86[v88[2 + 0]] = v88[3];
							v80 = v80 + (287 - (156 + 130));
							v88 = v76[v80];
							v388 = v88[4 - 2];
							v86[v388] = v86[v388](v13(v86, v388 + (1 - 0), v88[5 - 2]));
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2 + 0]][v88[72 - (10 + 59)]] = v86[v88[2 + 2]];
							v80 = v80 + (4 - 3);
							v88 = v76[v80];
							v86[v88[1165 - (671 + 492)]] = v86[v88[3]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[1217 - (369 + 846)]] = v88[1 + 2];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[1947 - (1036 + 909)]] = v88[3 + 0];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v388 = v88[2];
							v86[v388] = v86[v388](v13(v86, v388 + 1, v88[3]));
							v80 = v80 + (204 - (11 + 192));
							v88 = v76[v80];
							v86[v88[2]][v88[2 + 1]] = v86[v88[179 - (135 + 40)]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]] = v86[v88[3]];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[2]] = v88[2 + 1];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[2]] = v88[4 - 1];
							v80 = v80 + (177 - (50 + 126));
							v88 = v76[v80];
							v388 = v88[5 - 3];
							v86[v388] = v86[v388](v13(v86, v388 + 1 + 0, v88[3]));
							v80 = v80 + (1414 - (1233 + 180));
							v88 = v76[v80];
							v86[v88[971 - (522 + 447)]][v88[1424 - (107 + 1314)]] = v86[v88[2 + 2]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[5 - 3]] = v86[v88[3]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]] = v88[2 + 1];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[7 - 5]] = v88[1913 - (716 + 1194)];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v388 = v88[2];
							v86[v388] = v86[v388](v13(v86, v388 + 1 + 0, v88[3]));
							v80 = v80 + (504 - (74 + 429));
							v88 = v76[v80];
							v86[v88[3 - 1]][v88[3]] = v86[v88[2 + 2]];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[2 + 0]] = v86[v88[8 - 5]];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[2]] = v88[436 - (279 + 154)];
							v80 = v80 + (779 - (454 + 324));
							v88 = v76[v80];
							v86[v88[2 + 0]] = v88[20 - (12 + 5)];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v388 = v88[4 - 2];
							v86[v388] = v86[v388](v13(v86, v388 + 1 + 0, v88[1096 - (277 + 816)]));
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[8 - 6]][v88[1186 - (1058 + 125)]] = v86[v88[1 + 3]];
							v80 = v80 + (976 - (815 + 160));
							v88 = v76[v80];
							v86[v88[8 - 6]] = v86[v88[7 - 4]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]] = v88[1 + 2];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[1900 - (41 + 1857)]] = v88[1896 - (1222 + 671)];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v388 = v88[2 - 0];
							v86[v388] = v86[v388](v13(v86, v388 + (1183 - (229 + 953)), v88[1777 - (1111 + 663)]));
							v80 = v80 + (1580 - (874 + 705));
							v88 = v76[v80];
							v86[v88[2]][v88[3]] = v86[v88[1 + 3]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2]] = v86[v88[6 - 3]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[1 + 1]] = v88[3];
							v80 = v80 + (680 - (642 + 37));
							v88 = v76[v80];
							v86[v88[1 + 1]] = v88[3];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v388 = v88[4 - 2];
							v86[v388] = v86[v388](v13(v86, v388 + (455 - (233 + 221)), v88[3]));
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[2]][v88[3 + 0]] = v86[v88[1545 - (718 + 823)]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2 + 0]] = v86[v88[808 - (266 + 539)]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[5 - 3]] = v88[3];
							v80 = v80 + (1226 - (636 + 589));
							v88 = v76[v80];
							v86[v88[4 - 2]] = v88[5 - 2];
							v80 = v80 + 1;
							v88 = v76[v80];
							v388 = v88[2 + 0];
							v86[v388] = v86[v388](v13(v86, v388 + 1 + 0, v88[1018 - (657 + 358)]));
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[4 - 2]][v88[3]] = v86[v88[1191 - (1151 + 36)]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2]] = v86[v88[1 + 2]];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[1834 - (1552 + 280)]] = v88[3];
							v80 = v80 + (835 - (64 + 770));
							v88 = v76[v80];
							v86[v88[2 + 0]] = v88[3];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v388 = v88[1 + 1];
							v86[v388] = v86[v388](v13(v86, v388 + 1, v88[1246 - (157 + 1086)]));
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]][v88[3]] = v86[v88[4]];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[2]] = v86[v88[13 - 10]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2 - 0]] = v88[3 - 0];
							v80 = v80 + (820 - (599 + 220));
							v88 = v76[v80];
							v86[v88[3 - 1]] = v88[1934 - (1813 + 118)];
							v80 = v80 + 1;
							v88 = v76[v80];
							v388 = v88[2 + 0];
							v86[v388] = v86[v388](v13(v86, v388 + (1218 - (841 + 376)), v88[3 - 0]));
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[5 - 3]][v88[862 - (464 + 395)]] = v86[v88[4]];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[1 + 1]] = v86[v88[840 - (467 + 370)]];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[2 + 0]] = v88[10 - 7];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[4 - 2]] = v88[523 - (150 + 370)];
							v80 = v80 + 1;
							v88 = v76[v80];
							v388 = v88[1284 - (74 + 1208)];
							v86[v388] = v86[v388](v13(v86, v388 + (2 - 1), v88[14 - 11]));
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2]][v88[393 - (14 + 376)]] = v86[v88[4]];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[2 + 0]] = v86[v88[3 + 0]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[5 - 3]] = v88[3 + 0];
							v80 = v80 + (79 - (23 + 55));
							v88 = v76[v80];
							v86[v88[4 - 2]] = v88[3];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v388 = v88[2];
							v86[v388] = v86[v388](v13(v86, v388 + 1 + 0, v88[3]));
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[1 + 1]][v88[904 - (652 + 249)]] = v86[v88[10 - 6]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[1870 - (708 + 1160)]] = v86[v88[3]];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[3 - 1]] = v88[30 - (10 + 17)];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[1 + 1]] = v88[1735 - (1400 + 332)];
							v80 = v80 + 1;
							v88 = v76[v80];
							v388 = v88[2];
							v86[v388] = v86[v388](v13(v86, v388 + 1, v88[5 - 2]));
							v80 = v80 + (1909 - (242 + 1666));
							v88 = v76[v80];
							v86[v88[2]][v88[3]] = v86[v88[4]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[1 + 1]] = v86[v88[3]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2 + 0]] = v88[943 - (850 + 90)];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[3 - 1]] = v88[1393 - (360 + 1030)];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v388 = v88[5 - 3];
							v86[v388] = v86[v388](v13(v86, v388 + (1 - 0), v88[3]));
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]][v88[3]] = v86[v88[1665 - (909 + 752)]];
							v80 = v80 + (1224 - (109 + 1114));
							v88 = v76[v80];
							v86[v88[3 - 1]] = v86[v88[2 + 1]];
							v80 = v80 + (243 - (6 + 236));
							v88 = v76[v80];
							v86[v88[2 + 0]] = v88[3];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[4 - 2]] = v88[4 - 1];
							v80 = v80 + (1134 - (1076 + 57));
							v88 = v76[v80];
							v388 = v88[1 + 1];
							v86[v388] = v86[v388](v13(v86, v388 + (690 - (579 + 110)), v88[1 + 2]));
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]][v88[3 + 0]] = v86[v88[3 + 1]];
							v80 = v80 + (408 - (174 + 233));
							v88 = v76[v80];
							v86[v88[5 - 3]] = v86[v88[4 - 1]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[1176 - (663 + 511)]] = v88[3 + 0];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[5 - 3]] = v88[3];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v388 = v88[4 - 2];
							v86[v388] = v86[v388](v13(v86, v388 + 1, v88[7 - 4]));
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2]][v88[5 - 2]] = v86[v88[4]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2 + 0]] = v86[v88[1 + 2]];
							v80 = v80 + (723 - (478 + 244));
							v88 = v76[v80];
							v86[v88[519 - (440 + 77)]] = v88[3];
						else
							v86[v88[1 + 1]] = v88[10 - 7] ~= (1556 - (655 + 901));
						end
					elseif (v89 <= 42) then
						if ((1333 > 510) and (v89 <= (7 + 28))) then
							if (v89 <= 31) then
								if (v89 <= (23 + 6)) then
									local v140 = 0 + 0;
									local v141;
									local v142;
									while true do
										if ((24 - 18) == v140) then
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[2]][v88[1448 - (695 + 750)]] = v86[v88[13 - 9]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[2]] = v65[v88[3 - 0]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v140 = 7;
										end
										if ((1452 > 1003) and (v140 == (64 - 48))) then
											v88 = v76[v80];
											v86[v88[2]] = v88[354 - (285 + 66)];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[4 - 2]] = v88[3];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[1312 - (682 + 628)]] = v88[3];
											v140 = 3 + 14;
										end
										if (v140 == 9) then
											v142 = v88[301 - (176 + 123)];
											v141 = v86[v88[3]];
											v86[v142 + 1 + 0] = v141;
											v86[v142] = v141[v88[3 + 1]];
											v80 = v80 + (270 - (239 + 30));
											v88 = v76[v80];
											v86[v88[1 + 1]] = v86[v88[3 + 0]][v88[6 - 2]];
											v80 = v80 + (2 - 1);
											v140 = 10;
										end
										if ((335 - (306 + 9)) == v140) then
											v86[v88[6 - 4]] = v88[1 + 2];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v142 = v88[2];
											v86[v142] = v86[v142](v13(v86, v142 + 1 + 0, v88[3]));
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[2]][v86[v88[3]]] = v86[v88[1379 - (1140 + 235)]];
											v140 = 14 + 7;
										end
										if ((832 == 832) and (v140 == 27)) then
											v88 = v76[v80];
											v86[v88[2]][v86[v88[3]]] = v86[v88[4]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[1 + 1]] = v86[v88[55 - (33 + 19)]][v88[4]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[5 - 3]] = v65[v88[3]];
											v140 = 28;
										end
										if ((1741 > 400) and (v140 == (6 + 7))) then
											v142 = v88[3 - 1];
											v141 = v86[v88[3 + 0]];
											v86[v142 + (690 - (586 + 103))] = v141;
											v86[v142] = v141[v88[4]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[5 - 3]] = v86[v88[1491 - (1309 + 179)]][v88[6 - 2]];
											v80 = v80 + 1 + 0;
											v140 = 37 - 23;
										end
										if ((v140 == 12) or (747 == 3711)) then
											v88 = v76[v80];
											v142 = v88[2 + 0];
											v86[v142] = v86[v142](v13(v86, v142 + (1 - 0), v88[5 - 2]));
											v80 = v80 + (610 - (295 + 314));
											v88 = v76[v80];
											v86[v88[4 - 2]] = v65[v88[3]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v140 = 1975 - (1300 + 662);
										end
										if (v140 == (81 - 55)) then
											v80 = v80 + (1756 - (1178 + 577));
											v88 = v76[v80];
											v86[v88[2 + 0]] = v88[3];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v142 = v88[1407 - (851 + 554)];
											v86[v142] = v86[v142](v13(v86, v142 + 1 + 0, v88[3]));
											v80 = v80 + 1;
											v140 = 74 - 47;
										end
										if (v140 == 25) then
											v88 = v76[v80];
											v86[v88[2]] = v86[v88[6 - 3]][v88[306 - (115 + 187)]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[2]] = v88[3 + 0];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[7 - 5]] = v88[1164 - (160 + 1001)];
											v140 = 23 + 3;
										end
										if (v140 == (23 + 10)) then
											v86[v142] = v86[v142](v13(v86, v142 + (1 - 0), v88[3]));
											break;
										end
										if ((4552 == 4552) and (v140 == 17)) then
											v80 = v80 + (359 - (237 + 121));
											v88 = v76[v80];
											v142 = v88[899 - (525 + 372)];
											v86[v142] = v86[v142](v13(v86, v142 + (1 - 0), v88[9 - 6]));
											v80 = v80 + (143 - (96 + 46));
											v88 = v76[v80];
											v86[v88[779 - (643 + 134)]][v86[v88[2 + 1]]] = v86[v88[9 - 5]];
											v80 = v80 + (3 - 2);
											v140 = 18;
										end
										if ((28 + 1) == v140) then
											v86[v88[3 - 1]] = v88[5 - 2];
											v80 = v80 + (720 - (316 + 403));
											v88 = v76[v80];
											v86[v88[2 + 0]] = v88[8 - 5];
											v80 = v80 + 1;
											v88 = v76[v80];
											v142 = v88[1 + 1];
											v86[v142] = v86[v142](v13(v86, v142 + (2 - 1), v88[3]));
											v140 = 22 + 8;
										end
										if ((3723 > 238) and (v140 == (2 + 2))) then
											v80 = v80 + (3 - 2);
											v88 = v76[v80];
											v86[v88[2]][v88[14 - 11]] = v86[v88[7 - 3]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[2]] = v86[v88[5 - 2]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v140 = 14 - 9;
										end
										if (v140 == (49 - (12 + 5))) then
											v88 = v76[v80];
											v86[v88[7 - 5]] = v88[5 - 2];
											v80 = v80 + (1 - 0);
											v88 = v76[v80];
											v86[v88[4 - 2]] = v88[3];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v142 = v88[2];
											v140 = 2006 - (1656 + 317);
										end
										if ((v140 == 3) or (4666 < 399)) then
											v86[v88[2 + 0]] = v88[3 + 0];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[9 - 7]] = v88[357 - (5 + 349)];
											v80 = v80 + (4 - 3);
											v88 = v76[v80];
											v142 = v88[1273 - (266 + 1005)];
											v86[v142] = v86[v142](v13(v86, v142 + 1, v88[2 + 1]));
											v140 = 13 - 9;
										end
										if ((2920 >= 2628) and (v140 == (2 - 0))) then
											v80 = v80 + (1697 - (561 + 1135));
											v88 = v76[v80];
											v86[v88[2 - 0]][v88[9 - 6]] = v86[v88[1070 - (507 + 559)]];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[6 - 4]] = v86[v88[391 - (212 + 176)]];
											v80 = v80 + (906 - (250 + 655));
											v88 = v76[v80];
											v140 = 8 - 5;
										end
										if (v140 == (17 - 7)) then
											v88 = v76[v80];
											v142 = v88[2 - 0];
											v86[v142] = v86[v142](v13(v86, v142 + 1, v88[1959 - (1869 + 87)]));
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[6 - 4]] = v65[v88[1904 - (484 + 1417)]];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v140 = 18 - 7;
										end
										if ((804 - (48 + 725)) == v140) then
											v86[v88[2 - 0]] = v65[v88[3]];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[2]] = v86[v88[2 + 1]][v88[10 - 6]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[1 + 1]] = v88[856 - (152 + 701)];
											v80 = v80 + 1;
											v140 = 32;
										end
										if ((1332 - (430 + 881)) == v140) then
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[1 + 1]] = v86[v88[3]][v88[899 - (557 + 338)]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[1 + 1]] = v65[v88[3]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v140 = 61 - 39;
										end
										if (v140 == (105 - 75)) then
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[4 - 2]][v86[v88[3]]] = v86[v88[805 - (499 + 302)]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[868 - (39 + 827)]] = v86[v88[3]][v88[10 - 6]];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v140 = 123 - 92;
										end
										if ((11 - 3) == v140) then
											v88 = v76[v80];
											v142 = v88[1 + 1];
											v86[v142] = v86[v142](v13(v86, v142 + (2 - 1), v88[1 + 2]));
											v80 = v80 + (1 - 0);
											v88 = v76[v80];
											v86[v88[2]] = v65[v88[107 - (103 + 1)]];
											v80 = v80 + (555 - (475 + 79));
											v88 = v76[v80];
											v140 = 19 - 10;
										end
										if (v140 == (48 - 33)) then
											v86[v88[2]] = v86[v88[1 + 2]][v88[4]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[1505 - (1395 + 108)]] = v65[v88[8 - 5]];
											v80 = v80 + (1205 - (7 + 1197));
											v88 = v76[v80];
											v86[v88[1 + 1]] = v86[v88[2 + 1]][v88[323 - (27 + 292)]];
											v80 = v80 + 1;
											v140 = 46 - 30;
										end
										if (v140 == (1 - 0)) then
											v86[v88[2]] = v88[12 - 9];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[3 - 1]] = v88[3];
											v80 = v80 + 1;
											v88 = v76[v80];
											v142 = v88[3 - 1];
											v86[v142] = v86[v142](v13(v86, v142 + (140 - (43 + 96)), v88[3]));
											v140 = 8 - 6;
										end
										if ((245 < 2021) and (v140 == (24 - 13))) then
											v142 = v88[2 + 0];
											v141 = v86[v88[1 + 2]];
											v86[v142 + (1 - 0)] = v141;
											v86[v142] = v141[v88[2 + 2]];
											v80 = v80 + (1 - 0);
											v88 = v76[v80];
											v86[v88[1 + 1]] = v86[v88[1 + 2]][v88[1755 - (1414 + 337)]];
											v80 = v80 + 1;
											v140 = 1952 - (1642 + 298);
										end
										if ((22 == v140) or (4200 <= 2719)) then
											v86[v88[4 - 2]] = v86[v88[8 - 5]][v88[11 - 7]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[1 + 1]] = v88[3 + 0];
											v80 = v80 + (973 - (357 + 615));
											v88 = v76[v80];
											v86[v88[2 + 0]] = v88[6 - 3];
											v80 = v80 + 1 + 0;
											v140 = 23;
										end
										if (v140 == (51 - 27)) then
											v86[v88[2]][v86[v88[3]]] = v86[v88[4 + 0]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[2 + 0]] = v86[v88[1304 - (384 + 917)]][v88[701 - (128 + 569)]];
											v80 = v80 + (1544 - (1407 + 136));
											v88 = v76[v80];
											v86[v88[2]] = v65[v88[1890 - (687 + 1200)]];
											v80 = v80 + (1711 - (556 + 1154));
											v140 = 87 - 62;
										end
										if ((2498 > 1827) and (v140 == (100 - (9 + 86)))) then
											v86[v88[423 - (275 + 146)]] = v88[1 + 2];
											v80 = v80 + (65 - (29 + 35));
											v88 = v76[v80];
											v86[v88[8 - 6]] = v88[8 - 5];
											v80 = v80 + (4 - 3);
											v88 = v76[v80];
											v142 = v88[2 + 0];
											v86[v142] = v86[v142](v13(v86, v142 + (1013 - (53 + 959)), v88[411 - (312 + 96)]));
											v140 = 10 - 4;
										end
										if ((v140 == (292 - (147 + 138))) or (2684 <= 2621)) then
											v142 = v88[901 - (813 + 86)];
											v141 = v86[v88[3 + 0]];
											v86[v142 + (1 - 0)] = v141;
											v86[v142] = v141[v88[496 - (18 + 474)]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[6 - 4]] = v86[v88[1089 - (860 + 226)]][v88[307 - (121 + 182)]];
											v80 = v80 + 1 + 0;
											v140 = 8;
										end
										if ((1547 <= 4537) and ((1259 - (988 + 252)) == v140)) then
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[1 + 1]] = v88[1 + 2];
											v80 = v80 + (1971 - (49 + 1921));
											v88 = v76[v80];
											v86[v88[892 - (223 + 667)]] = v88[55 - (51 + 1)];
											v80 = v80 + (1 - 0);
											v88 = v76[v80];
											v140 = 42 - 22;
										end
										if (v140 == (1143 - (146 + 979))) then
											v88 = v76[v80];
											v86[v88[2]] = v86[v88[3]][v88[4]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[1 + 1]] = v65[v88[608 - (311 + 294)]];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[1 + 1]] = v86[v88[3]][v88[1447 - (496 + 947)]];
											v140 = 1377 - (1233 + 125);
										end
										if ((v140 == (10 + 13)) or (2812 <= 2739)) then
											v88 = v76[v80];
											v86[v88[2 + 0]] = v88[1 + 2];
											v80 = v80 + 1;
											v88 = v76[v80];
											v142 = v88[1647 - (963 + 682)];
											v86[v142] = v86[v142](v13(v86, v142 + 1 + 0, v88[1507 - (504 + 1000)]));
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v140 = 24;
										end
										if (v140 == (26 + 2)) then
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[2]] = v86[v88[1 + 2]][v88[4]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[2 - 0]] = v88[3 + 0];
											v80 = v80 + 1;
											v88 = v76[v80];
											v140 = 29;
										end
										if (v140 == (9 + 5)) then
											v88 = v76[v80];
											v142 = v88[184 - (156 + 26)];
											v86[v142] = v86[v142](v13(v86, v142 + 1 + 0, v88[3]));
											v80 = v80 + (1 - 0);
											v88 = v76[v80];
											v86[v88[166 - (149 + 15)]] = {};
											v80 = v80 + (961 - (890 + 70));
											v88 = v76[v80];
											v140 = 132 - (39 + 78);
										end
										if (v140 == (482 - (14 + 468))) then
											v141 = nil;
											v142 = nil;
											v86[v88[4 - 2]][v88[8 - 5]] = v86[v88[3 + 1]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[1 + 1]] = v86[v88[2 + 1]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v140 = 1 - 0;
										end
									end
								elseif (v89 == (30 + 0)) then
									local v466 = 0 - 0;
									local v467;
									while true do
										if (v466 == (1 + 3)) then
											v88 = v76[v80];
											v86[v88[53 - (12 + 39)]] = v64[v88[3 + 0]];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v466 = 17 - 12;
										end
										if ((9 <= 1022) and (1 == v466)) then
											v467 = v88[1 + 1];
											v86[v467] = v86[v467]();
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v466 = 4 - 2;
										end
										if (v466 == 6) then
											v86[v467] = v86[v467](v86[v467 + 1 + 0]);
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[9 - 7]][v88[1713 - (1596 + 114)]] = v86[v88[4]];
											v466 = 18 - 11;
										end
										if ((v466 == (713 - (164 + 549))) or (4733 <= 2436)) then
											v467 = nil;
											v86[v88[1440 - (1059 + 379)]] = v86[v88[3 - 0]][v88[3 + 1]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v466 = 393 - (145 + 247);
										end
										if (v466 == 3) then
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[2 + 0]] = v64[v88[2 + 1]];
											v80 = v80 + (2 - 1);
											v466 = 4;
										end
										if (5 == v466) then
											v86[v88[1 + 1]] = v86[v88[3 + 0]];
											v80 = v80 + (1 - 0);
											v88 = v76[v80];
											v467 = v88[722 - (254 + 466)];
											v466 = 566 - (544 + 16);
										end
										if (7 == v466) then
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v80 = v88[631 - (294 + 334)];
											break;
										end
										if (v466 == (255 - (236 + 17))) then
											v86[v88[1 + 1]] = v64[v88[3]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[7 - 5]] = v86[v88[14 - 11]] - v86[v88[4]];
											v466 = 2 + 1;
										end
									end
								else
									v86[v88[2]] = v86[v88[3 + 0]] + v88[798 - (413 + 381)];
								end
							elseif (v89 <= (2 + 31)) then
								if (v89 > (67 - 35)) then
									v86[v88[4 - 2]] = v86[v88[1973 - (582 + 1388)]][v88[6 - 2]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[366 - (326 + 38)]][v88[3]] = v86[v88[11 - 7]];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[622 - (47 + 573)]] = v64[v88[2 + 1]];
									v80 = v80 + (4 - 3);
									v88 = v76[v80];
									v86[v88[2 - 0]] = v86[v88[1667 - (1269 + 395)]][v88[496 - (76 + 416)]];
									v80 = v80 + (444 - (319 + 124));
									v88 = v76[v80];
									v86[v88[4 - 2]][v88[3]] = v86[v88[1011 - (564 + 443)]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[2]][v88[461 - (337 + 121)]] = v88[11 - 7];
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v86[v88[1913 - (1261 + 650)]] = v64[v88[2 + 1]];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[1819 - (772 + 1045)]] = v86[v88[1 + 2]][v88[148 - (102 + 42)]];
									v80 = v80 + (1845 - (1524 + 320));
									v88 = v76[v80];
									v86[v88[1272 - (1049 + 221)]][v88[159 - (18 + 138)]] = v86[v88[4]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[2]] = v65[v88[1105 - (67 + 1035)]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[350 - (136 + 212)]] = v86[v88[3]][v88[16 - 12]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v86[v88[1607 - (240 + 1364)]][v88[1086 - (1050 + 32)]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[7 - 5]][v88[2 + 1]] = v86[v88[4]];
									v80 = v80 + (1056 - (331 + 724));
									v88 = v76[v80];
									v86[v88[1 + 1]][v88[647 - (269 + 375)]] = v86[v88[729 - (267 + 458)]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[3 - 1]] = v88[821 - (667 + 151)];
								else
									local v498 = 1497 - (1410 + 87);
									local v499;
									while true do
										if ((v498 == (1897 - (1504 + 393))) or (228 >= 475)) then
											v499 = nil;
											v86[v88[5 - 3]] = v86[v88[3]][v88[10 - 6]];
											v80 = v80 + (797 - (461 + 335));
											v88 = v76[v80];
											v86[v88[2]] = v88[1 + 2];
											v498 = 1762 - (1730 + 31);
										end
										if ((v498 == (1668 - (728 + 939))) or (2197 < 754)) then
											v80 = v80 + (3 - 2);
											v88 = v76[v80];
											v86[v88[3 - 1]] = v88[6 - 3];
											v80 = v80 + (1069 - (138 + 930));
											v88 = v76[v80];
											v498 = 2 + 0;
										end
										if (v498 == 3) then
											v88 = v76[v80];
											v499 = v88[2 + 0];
											v86[v499] = v86[v499](v13(v86, v499 + 1 + 0, v88[12 - 9]));
											v80 = v80 + 1;
											v88 = v76[v80];
											v498 = 4;
										end
										if (v498 == (1770 - (459 + 1307))) then
											v86[v88[1872 - (474 + 1396)]][v88[3]] = v86[v88[6 - 2]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[1 + 1]] = v64[v88[8 - 5]];
											v80 = v80 + 1 + 0;
											v498 = 5;
										end
										if (v498 == (6 - 4)) then
											v86[v88[8 - 6]] = v88[3];
											v80 = v80 + (592 - (562 + 29));
											v88 = v76[v80];
											v86[v88[2 + 0]] = v88[1422 - (374 + 1045)];
											v80 = v80 + 1;
											v498 = 3 + 0;
										end
										if (v498 == (21 - 14)) then
											v86[v88[2]][v88[641 - (448 + 190)]] = v88[2 + 2];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[2 + 0]][v88[11 - 8]] = v88[4];
											v80 = v80 + (2 - 1);
											v498 = 8;
										end
										if ((v498 == (1499 - (1307 + 187))) or (4074 > 4451)) then
											v88 = v76[v80];
											v86[v88[7 - 5]] = v86[v88[6 - 3]][v88[4]];
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[2]][v88[686 - (232 + 451)]] = v86[v88[4]];
											v498 = 6 + 0;
										end
										if ((1611 == 1611) and (v498 == (6 + 0))) then
											v80 = v80 + (565 - (510 + 54));
											v88 = v76[v80];
											v86[v88[2]][v88[5 - 2]] = v88[40 - (13 + 23)];
											v80 = v80 + (1 - 0);
											v88 = v76[v80];
											v498 = 9 - 2;
										end
										if ((562 < 4641) and (v498 == (14 - 6))) then
											v88 = v76[v80];
											v86[v88[1090 - (830 + 258)]][v88[10 - 7]] = v86[v88[3 + 1]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v86[v88[2 + 0]] = v88[1444 - (860 + 581)];
											break;
										end
									end
								end
							elseif ((v89 > 34) or (4513 < 3045)) then
								local v500;
								v86[v88[7 - 5]] = v64[v88[3 + 0]];
								v80 = v80 + (242 - (237 + 4));
								v88 = v76[v80];
								v86[v88[4 - 2]] = v86[v88[6 - 3]][v88[7 - 3]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[2 + 0]] = v88[2 + 1];
								v80 = v80 + (3 - 2);
								v88 = v76[v80];
								v500 = v88[1 + 1];
								v86[v500](v13(v86, v500 + 1 + 0, v88[3]));
								v80 = v80 + (1427 - (85 + 1341));
								v88 = v76[v80];
								v80 = v88[4 - 1];
							else
								local v510 = 0 - 0;
								local v511;
								while true do
									if (v510 == 6) then
										v88 = v76[v80];
										v86[v88[2]] = v88[375 - (45 + 327)];
										v80 = v80 + 1;
										v88 = v76[v80];
										v511 = v88[3 - 1];
										v86[v511] = v86[v511](v13(v86, v511 + (503 - (444 + 58)), v88[2 + 1]));
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[1 + 1]][v88[8 - 5]] = v86[v88[1736 - (64 + 1668)]];
										v510 = 1980 - (1227 + 746);
									end
									if (v510 == (0 - 0)) then
										v511 = nil;
										v86[v88[3 - 1]] = v86[v88[497 - (415 + 79)]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[493 - (142 + 349)]] = v88[2 + 1];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2 - 0]] = v88[2 + 1];
										v80 = v80 + 1 + 0;
										v510 = 1;
									end
									if (v510 == 24) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v511 = v88[2];
										v86[v511] = v86[v511](v13(v86, v511 + (2 - 1), v88[1867 - (1710 + 154)]));
										v80 = v80 + (319 - (200 + 118));
										v88 = v76[v80];
										v86[v88[2]][v88[2 + 1]] = v86[v88[6 - 2]];
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v510 = 23 + 2;
									end
									if (v510 == (19 + 0)) then
										v86[v511] = v86[v511](v13(v86, v511 + 1 + 0, v88[1 + 2]));
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[1252 - (363 + 887)]][v88[5 - 2]] = v86[v88[4]];
										v80 = v80 + (4 - 3);
										v88 = v76[v80];
										v86[v88[2]] = v86[v88[1 + 2]];
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v510 = 14 + 6;
									end
									if (v510 == 25) then
										v86[v88[2]] = v86[v88[1667 - (674 + 990)]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[1 + 1]] = v88[3 - 0];
										v80 = v80 + (1056 - (507 + 548));
										v88 = v76[v80];
										v86[v88[839 - (289 + 548)]] = v88[1821 - (821 + 997)];
										v80 = v80 + (256 - (195 + 60));
										v88 = v76[v80];
										v510 = 26;
									end
									if (v510 == (5 + 13)) then
										v80 = v80 + (1502 - (251 + 1250));
										v88 = v76[v80];
										v86[v88[2]] = v88[8 - 5];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[1034 - (809 + 223)]] = v88[3 - 0];
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v511 = v88[6 - 4];
										v510 = 14 + 5;
									end
									if ((v510 == (6 + 5)) or (1511 > 2427)) then
										v88 = v76[v80];
										v86[v88[2]] = v88[620 - (14 + 603)];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[131 - (118 + 11)]] = v88[1 + 2];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v511 = v88[5 - 3];
										v86[v511] = v86[v511](v13(v86, v511 + (950 - (551 + 398)), v88[2 + 1]));
										v510 = 5 + 7;
									end
									if (v510 == (7 + 1)) then
										v80 = v80 + (3 - 2);
										v88 = v76[v80];
										v511 = v88[2];
										v86[v511] = v86[v511](v13(v86, v511 + (2 - 1), v88[1 + 2]));
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[7 - 5]][v88[3]] = v86[v88[2 + 2]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v510 = 98 - (40 + 49);
									end
									if (v510 == (45 - 33)) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[492 - (99 + 391)]][v88[3 + 0]] = v86[v88[17 - 13]];
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[2]] = v86[v88[3]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2 + 0]] = v88[3];
										v510 = 34 - 21;
									end
									if ((1626 - (1032 + 572)) == v510) then
										v88 = v76[v80];
										v86[v88[419 - (203 + 214)]] = v88[1820 - (568 + 1249)];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v511 = v88[4 - 2];
										v86[v511] = v86[v511](v13(v86, v511 + (3 - 2), v88[1309 - (913 + 393)]));
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[2 - 0]][v88[413 - (269 + 141)]] = v86[v88[4]];
										v510 = 23;
									end
									if ((61 - 33) == v510) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2]][v88[1984 - (362 + 1619)]] = v86[v88[1629 - (950 + 675)]];
										break;
									end
									if (v510 == (11 + 15)) then
										v511 = v88[1181 - (216 + 963)];
										v86[v511] = v86[v511](v13(v86, v511 + 1, v88[1290 - (485 + 802)]));
										v80 = v80 + (560 - (432 + 127));
										v88 = v76[v80];
										v86[v88[1075 - (1065 + 8)]][v88[2 + 1]] = v86[v88[1605 - (635 + 966)]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[44 - (5 + 37)]] = v86[v88[7 - 4]];
										v80 = v80 + 1 + 0;
										v510 = 42 - 15;
									end
									if (v510 == (5 + 5)) then
										v511 = v88[3 - 1];
										v86[v511] = v86[v511](v13(v86, v511 + (3 - 2), v88[5 - 2]));
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[2 + 0]][v88[532 - (318 + 211)]] = v86[v88[4]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[9 - 7]] = v86[v88[1590 - (963 + 624)]];
										v80 = v80 + 1 + 0;
										v510 = 857 - (518 + 328);
									end
									if ((v510 == (39 - 22)) or (5 > 1784)) then
										v88 = v76[v80];
										v511 = v88[2];
										v86[v511] = v86[v511](v13(v86, v511 + (1 - 0), v88[320 - (301 + 16)]));
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[5 - 3]][v88[3]] = v86[v88[4]];
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[2]] = v86[v88[7 - 4]];
										v510 = 17 + 1;
									end
									if (v510 == (9 + 6)) then
										v86[v88[3 - 1]] = v88[2 + 1];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v511 = v88[6 - 4];
										v86[v511] = v86[v511](v13(v86, v511 + 1 + 0, v88[1022 - (829 + 190)]));
										v80 = v80 + (3 - 2);
										v88 = v76[v80];
										v86[v88[2]][v88[3 - 0]] = v86[v88[5 - 1]];
										v80 = v80 + (2 - 1);
										v510 = 4 + 12;
									end
									if (v510 == (1 + 2)) then
										v86[v511] = v86[v511](v13(v86, v511 + (2 - 1), v88[3 + 0]));
										v80 = v80 + (614 - (520 + 93));
										v88 = v76[v80];
										v86[v88[278 - (259 + 17)]][v88[1 + 2]] = v86[v88[2 + 2]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[6 - 4]] = v86[v88[594 - (396 + 195)]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v510 = 11 - 7;
									end
									if (v510 == (1788 - (440 + 1321))) then
										v88 = v76[v80];
										v86[v88[1831 - (1059 + 770)]] = v88[13 - 10];
										v80 = v80 + (546 - (424 + 121));
										v88 = v76[v80];
										v86[v88[2]] = v88[1 + 2];
										v80 = v80 + 1;
										v88 = v76[v80];
										v511 = v88[1349 - (641 + 706)];
										v86[v511] = v86[v511](v13(v86, v511 + 1 + 0, v88[443 - (249 + 191)]));
										v510 = 28;
									end
									if (v510 == (69 - 53)) then
										v88 = v76[v80];
										v86[v88[1 + 1]] = v86[v88[11 - 8]];
										v80 = v80 + (428 - (183 + 244));
										v88 = v76[v80];
										v86[v88[1 + 1]] = v88[733 - (434 + 296)];
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[514 - (169 + 343)]] = v88[3];
										v80 = v80 + 1 + 0;
										v510 = 17;
									end
									if (v510 == (15 - 6)) then
										v86[v88[5 - 3]] = v86[v88[3 + 0]];
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[1125 - (651 + 472)]] = v88[3 + 0];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[2 - 0]] = v88[486 - (397 + 86)];
										v80 = v80 + (877 - (423 + 453));
										v88 = v76[v80];
										v510 = 2 + 8;
									end
									if (v510 == (3 + 18)) then
										v88 = v76[v80];
										v86[v88[2 + 0]][v88[3 + 0]] = v86[v88[4 + 0]];
										v80 = v80 + (1191 - (50 + 1140));
										v88 = v76[v80];
										v86[v88[2 + 0]] = v86[v88[2 + 1]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[2 - 0]] = v88[3 + 0];
										v80 = v80 + 1;
										v510 = 618 - (157 + 439);
									end
									if (v510 == (1 - 0)) then
										v88 = v76[v80];
										v511 = v88[6 - 4];
										v86[v511] = v86[v511](v13(v86, v511 + (2 - 1), v88[921 - (782 + 136)]));
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[857 - (112 + 743)]][v88[1174 - (1026 + 145)]] = v86[v88[1 + 3]];
										v80 = v80 + (719 - (493 + 225));
										v88 = v76[v80];
										v86[v88[7 - 5]] = v86[v88[2 + 1]];
										v510 = 5 - 3;
									end
									if ((1 + 22) == v510) then
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[1 + 1]] = v86[v88[3]];
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[2]] = v88[1598 - (210 + 1385)];
										v80 = v80 + (1690 - (1201 + 488));
										v88 = v76[v80];
										v86[v88[2 + 0]] = v88[5 - 2];
										v510 = 42 - 18;
									end
									if ((v510 == 2) or (3220 >= 3909)) then
										v80 = v80 + (586 - (352 + 233));
										v88 = v76[v80];
										v86[v88[2]] = v88[7 - 4];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[5 - 3]] = v88[577 - (489 + 85)];
										v80 = v80 + (1502 - (277 + 1224));
										v88 = v76[v80];
										v511 = v88[1495 - (663 + 830)];
										v510 = 3 + 0;
									end
									if (v510 == 5) then
										v88 = v76[v80];
										v86[v88[2]][v88[3]] = v86[v88[9 - 5]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[877 - (461 + 414)]] = v86[v88[1 + 2]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[1 + 1]] = v88[3 + 0];
										v80 = v80 + (251 - (172 + 78));
										v510 = 8 - 2;
									end
									if (v510 == (6 + 8)) then
										v86[v88[2 - 0]][v88[1 + 2]] = v86[v88[2 + 2]];
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[2 - 0]] = v86[v88[1 + 2]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[1 + 1]] = v88[11 - 8];
										v80 = v80 + 1;
										v88 = v76[v80];
										v510 = 34 - 19;
									end
									if ((7 + 13) == v510) then
										v86[v88[2 + 0]] = v88[3];
										v80 = v80 + (448 - (133 + 314));
										v88 = v76[v80];
										v86[v88[1 + 1]] = v88[216 - (199 + 14)];
										v80 = v80 + (3 - 2);
										v88 = v76[v80];
										v511 = v88[1551 - (647 + 902)];
										v86[v511] = v86[v511](v13(v86, v511 + 1, v88[8 - 5]));
										v80 = v80 + (234 - (85 + 148));
										v510 = 1310 - (426 + 863);
									end
									if (v510 == 4) then
										v86[v88[9 - 7]] = v88[1657 - (873 + 781)];
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[2]] = v88[7 - 4];
										v80 = v80 + 1;
										v88 = v76[v80];
										v511 = v88[1 + 1];
										v86[v511] = v86[v511](v13(v86, v511 + (3 - 2), v88[3 - 0]));
										v80 = v80 + (2 - 1);
										v510 = 5;
									end
									if ((1752 <= 3992) and (v510 == (1954 - (414 + 1533)))) then
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[2]] = v86[v88[558 - (443 + 112)]];
										v80 = v80 + (1480 - (888 + 591));
										v88 = v76[v80];
										v86[v88[2]] = v88[7 - 4];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[2]] = v88[3];
										v510 = 8;
									end
									if ((v510 == (48 - 35)) or (86 > 2873)) then
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[1 + 1]] = v88[1 + 2];
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v511 = v88[3 - 1];
										v86[v511] = v86[v511](v13(v86, v511 + (1679 - (136 + 1542)), v88[9 - 6]));
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v510 = 21 - 7;
									end
								end
							end
						elseif (v89 <= (28 + 10)) then
							if ((v89 <= (522 - (68 + 418))) or (4938 <= 3183)) then
								v86[v88[4 - 2]] = {};
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[2 + 0]] = v65[v88[1095 - (770 + 322)]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[1 + 2]][v88[1 + 3]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[3 - 1]] = v65[v88[7 - 4]];
								v80 = v80 + (3 - 2);
								v88 = v76[v80];
								v86[v88[2 + 0]] = v86[v88[4 - 1]][v88[2 + 2]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[2 + 0]] = v65[v88[11 - 8]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[2 - 0]] = v86[v88[3]][v88[2 + 2]];
								v80 = v80 + (4 - 3);
								v88 = v76[v80];
								v86[v88[6 - 4]] = v65[v88[2 + 1]];
								v80 = v80 + (4 - 3);
								v88 = v76[v80];
								if not v86[v88[833 - (762 + 69)]] then
									v80 = v80 + (3 - 2);
								else
									v80 = v88[3 + 0];
								end
							elseif ((2193 == 2193) and (v89 == (24 + 13))) then
								local v513;
								v86[v88[2]] = v64[v88[7 - 4]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[1 + 1]] = v86[v88[11 - 8]][v88[161 - (8 + 149)]];
								v80 = v80 + (1321 - (1199 + 121));
								v88 = v76[v80];
								v86[v88[3 - 1]] = v88[6 - 3];
								v80 = v80 + 1;
								v88 = v76[v80];
								v513 = v88[1 + 1];
								v86[v513](v13(v86, v513 + (3 - 2), v88[6 - 3]));
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v80 = v88[1810 - (518 + 1289)];
							else
								v86[v88[2 - 0]]();
							end
						elseif (v89 <= 40) then
							if (v89 > (6 + 33)) then
								local v523 = v88[2 - 0];
								local v524 = v86[v88[3 + 0]];
								v86[v523 + (470 - (304 + 165))] = v524;
								v86[v523] = v524[v88[4 + 0]];
							else
								local v528 = 160 - (54 + 106);
								local v529;
								local v530;
								while true do
									if (v528 == (1973 - (1618 + 351))) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2 + 0]] = v86[v88[1019 - (10 + 1006)]][v88[2 + 2]];
										v528 = 1 + 4;
									end
									if (v528 == (9 - 6)) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[1035 - (912 + 121)]][v88[3]] = v86[v88[2 + 2]];
										v528 = 1293 - (1140 + 149);
									end
									if (v528 == (1 + 0)) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2 - 0]] = v86[v88[3]][v88[1 + 3]];
										v528 = 6 - 4;
									end
									if (v528 == 2) then
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[1 + 1]][v88[10 - 7]] = v86[v88[190 - (165 + 21)]];
										v528 = 114 - (61 + 50);
									end
									if (v528 == 0) then
										v529 = nil;
										v530 = nil;
										v86[v88[1 + 1]] = v64[v88[14 - 11]];
										v528 = 1 - 0;
									end
									if (v528 == 6) then
										v529 = v86[v88[2 + 1]];
										v86[v530 + (1461 - (1295 + 165))] = v529;
										v86[v530] = v529[v88[1 + 3]];
										break;
									end
									if ((v528 == (3 + 2)) or (2001 <= 373)) then
										v80 = v80 + (1398 - (819 + 578));
										v88 = v76[v80];
										v530 = v88[1404 - (331 + 1071)];
										v528 = 749 - (588 + 155);
									end
								end
							end
						elseif (v89 == (1323 - (546 + 736))) then
							local v531;
							local v532, v533;
							local v534;
							v86[v88[2]] = v86[v88[1940 - (1834 + 103)]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2]] = v64[v88[8 - 5]];
							v80 = v80 + (1767 - (1536 + 230));
							v88 = v76[v80];
							v86[v88[493 - (128 + 363)]] = v64[v88[1 + 2]];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[1 + 1]] = v64[v88[3]];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[5 - 3]] = v64[v88[7 - 4]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[1011 - (615 + 394)]] = v86[v88[3 + 0]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[5 - 3]] = v86[v88[13 - 10]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]] = v86[v88[3]] + v88[655 - (59 + 592)];
							v80 = v80 + 1;
							v88 = v76[v80];
							v534 = v88[4 - 2];
							v532, v533 = v79(v86[v534](v13(v86, v534 + (1 - 0), v88[3])));
							v81 = (v533 + v534) - (1 + 0);
							v531 = 0;
							for v1450 = v534, v81 do
								v531 = v531 + (172 - (70 + 101));
								v86[v1450] = v532[v531];
							end
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v534 = v88[2 + 0];
							v86[v534] = v86[v534](v13(v86, v534 + (2 - 1), v81));
							v80 = v80 + (242 - (123 + 118));
							v88 = v76[v80];
							v86[v88[1 + 1]] = v64[v88[1 + 2]];
							v80 = v80 + (1400 - (653 + 746));
							v88 = v76[v80];
							v86[v88[3 - 1]] = v64[v88[4 - 1]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[5 - 3]] = v86[v88[2 + 1]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2 + 0]] = #v86[v88[1 + 2]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[4 - 2]] = v86[v88[3]] % v86[v88[4 + 0]];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[1236 - (885 + 349)]] = v88[3 + 0] + v86[v88[4]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]] = #v86[v88[8 - 5]];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[2]] = v86[v88[3]] % v86[v88[972 - (915 + 53)]];
							v80 = v80 + (802 - (768 + 33));
							v88 = v76[v80];
							v86[v88[7 - 5]] = v88[3] + v86[v88[6 - 2]];
							v80 = v80 + (329 - (287 + 41));
							v88 = v76[v80];
							v86[v88[849 - (638 + 209)]] = v86[v88[3]] + v88[3 + 1];
							v80 = v80 + (1687 - (96 + 1590));
							v88 = v76[v80];
							v534 = v88[1674 - (741 + 931)];
							v532, v533 = v79(v86[v534](v13(v86, v534 + 1 + 0, v88[8 - 5])));
							v81 = (v533 + v534) - (4 - 3);
							v531 = 0 + 0;
							for v1453 = v534, v81 do
								local v1454 = 0 + 0;
								while true do
									if ((v1454 == (0 + 0)) or (4498 <= 1257)) then
										v531 = v531 + 1;
										v86[v1453] = v532[v531];
										break;
									end
								end
							end
							v80 = v80 + (3 - 2);
							v88 = v76[v80];
							v534 = v88[2];
							v532, v533 = v79(v86[v534](v13(v86, v534 + 1 + 0, v81)));
							v81 = (v533 + v534) - (1 + 0);
							v531 = 0 - 0;
							for v1455 = v534, v81 do
								v531 = v531 + 1 + 0;
								v86[v1455] = v532[v531];
							end
							v80 = v80 + (495 - (64 + 430));
							v88 = v76[v80];
							v534 = v88[2 + 0];
							v86[v534] = v86[v534](v13(v86, v534 + (364 - (106 + 257)), v81));
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[723 - (496 + 225)]] = v86[v88[5 - 2]] % v88[19 - 15];
							v80 = v80 + (1659 - (256 + 1402));
							v88 = v76[v80];
							v534 = v88[1901 - (30 + 1869)];
							v532, v533 = v79(v86[v534](v86[v534 + (1370 - (213 + 1156))]));
							v81 = (v533 + v534) - (189 - (96 + 92));
							v531 = 0 + 0;
							for v1458 = v534, v81 do
								v531 = v531 + (900 - (142 + 757));
								v86[v1458] = v532[v531];
							end
							v80 = v80 + 1;
							v88 = v76[v80];
							v534 = v88[2 + 0];
							v86[v534](v13(v86, v534 + 1 + 0, v81));
						else
							v80 = v88[82 - (32 + 47)];
						end
					elseif (v89 <= (2026 - (1053 + 924))) then
						if (v89 <= (45 + 0)) then
							if ((v89 <= 43) or (2212 == 460)) then
								local v157 = 0 - 0;
								local v158;
								while true do
									if (v157 == (1649 - (685 + 963))) then
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[2]] = v86[v88[3]][v88[6 - 2]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v158 = v88[1711 - (541 + 1168)];
										v86[v158] = v86[v158](v86[v158 + (1598 - (645 + 952))]);
										v80 = v80 + (839 - (669 + 169));
										v157 = 2;
									end
									if ((v157 == 4) or (4064 <= 3064)) then
										v86[v88[6 - 4]] = v88[6 - 3];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[1 + 1]] = v88[3];
										v80 = v80 + (766 - (181 + 584));
										v88 = v76[v80];
										v158 = v88[1397 - (665 + 730)];
										v86[v158] = v86[v158](v13(v86, v158 + (2 - 1), v88[5 - 2]));
										v157 = 5;
									end
									if (v157 == (1359 - (540 + 810))) then
										v88 = v76[v80];
										v86[v88[7 - 5]][v88[8 - 5]] = v86[v88[4]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[205 - (166 + 37)]] = v88[1884 - (22 + 1859)];
										v80 = v80 + (1773 - (843 + 929));
										v88 = v76[v80];
										v80 = v88[265 - (30 + 232)];
										break;
									end
									if (v157 == (19 - 12)) then
										v88 = v76[v80];
										v86[v88[779 - (55 + 722)]] = v88[6 - 3];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[1677 - (78 + 1597)]] = v88[1 + 2];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v158 = v88[2 + 0];
										v157 = 8;
									end
									if (2 == v157) then
										v88 = v76[v80];
										v86[v88[551 - (305 + 244)]] = v86[v88[3 + 0]];
										v80 = v80 + (106 - (95 + 10));
										v88 = v76[v80];
										v86[v88[2 + 0]] = v65[v88[3]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2]] = v86[v88[3]][v88[12 - 8]];
										v157 = 3;
									end
									if (v157 == (0 - 0)) then
										v158 = nil;
										v86[v88[764 - (592 + 170)]] = v65[v88[10 - 7]];
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[1 + 1]] = v86[v88[2 + 1]][v88[9 - 5]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[3 - 1]] = v64[v88[510 - (353 + 154)]];
										v157 = 1;
									end
									if (v157 == (3 - 0)) then
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[2 + 0]] = v88[3 + 0];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2 + 0]] = v88[3];
										v80 = v80 + 1;
										v88 = v76[v80];
										v157 = 5 - 1;
									end
									if (8 == v157) then
										v86[v158] = v86[v158](v13(v86, v158 + 1, v88[5 - 2]));
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[2]][v88[89 - (7 + 79)]] = v86[v88[4]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[183 - (24 + 157)]][v88[5 - 2]] = v88[8 - 4];
										v80 = v80 + 1 + 0;
										v157 = 23 - 14;
									end
									if (v157 == (386 - (262 + 118))) then
										v86[v88[1085 - (1038 + 45)]] = v86[v88[5 - 2]][v88[4]];
										v80 = v80 + (231 - (19 + 211));
										v88 = v76[v80];
										v86[v88[115 - (88 + 25)]] = v88[7 - 4];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[2 + 0]] = v88[1039 - (1007 + 29)];
										v80 = v80 + 1 + 0;
										v157 = 7;
									end
									if (v157 == 5) then
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[2]][v88[3]] = v86[v88[18 - 14]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[2]] = v65[v88[814 - (340 + 471)]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v157 = 15 - 9;
									end
								end
							elseif (v89 > (633 - (276 + 313))) then
								local v564 = 0 - 0;
								local v565;
								while true do
									if (v564 == 0) then
										v565 = v88[2];
										do
											return v86[v565](v13(v86, v565 + 1 + 0, v88[2 + 1]));
										end
										break;
									end
								end
							else
								local v566 = 0;
								local v567;
								while true do
									if ((3203 <= 4477) and ((1 + 1) == v566)) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2]] = v88[1975 - (495 + 1477)];
										v80 = v80 + (2 - 1);
										v566 = 2 + 1;
									end
									if ((v566 == (406 - (342 + 61))) or (1357 >= 3528)) then
										v88 = v76[v80];
										v567 = v88[1 + 1];
										v86[v567](v13(v86, v567 + (166 - (4 + 161)), v88[2 + 1]));
										v80 = v80 + (3 - 2);
										v566 = 10 - 6;
									end
									if ((v566 == (497 - (322 + 175))) or (379 == 1276)) then
										v567 = nil;
										v86[v88[565 - (173 + 390)]] = v64[v88[1 + 2]];
										v80 = v80 + (315 - (203 + 111));
										v88 = v76[v80];
										v566 = 1 + 0;
									end
									if ((1368 < 4493) and (v566 == (3 + 1))) then
										v88 = v76[v80];
										do
											return;
										end
										break;
									end
									if (v566 == (2 - 1)) then
										v86[v88[2 + 0]] = v64[v88[3]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2]] = v86[v88[709 - (57 + 649)]][v88[4]];
										v566 = 2;
									end
								end
							end
						elseif (v89 <= (431 - (328 + 56))) then
							if (v89 == 46) then
								local v568 = 0;
								local v569;
								local v570;
								while true do
									if (v568 == (3 + 5)) then
										v88 = v76[v80];
										v86[v88[514 - (433 + 79)]] = v88[3];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v570 = v88[2];
										v86[v570](v86[v570 + 1 + 0]);
										v80 = v80 + 1;
										v88 = v76[v80];
										v568 = 29 - 20;
									end
									if (v568 == 3) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2]] = v88[14 - 11];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[2 + 0]] = v88[1039 - (562 + 474)];
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v568 = 4;
									end
									if ((v568 == (1 - 0)) or (4803 < 3829)) then
										v86[v88[907 - (76 + 829)]] = {};
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2]] = v64[v88[1676 - (1506 + 167)]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2]] = v86[v88[3]][v88[6 - 2]];
										v80 = v80 + (267 - (58 + 208));
										v568 = 2 + 0;
									end
									if (v568 == (2 + 0)) then
										v88 = v76[v80];
										v86[v88[2 + 0]] = v65[v88[12 - 9]];
										v80 = v80 + (338 - (258 + 79));
										v88 = v76[v80];
										v86[v88[1 + 1]] = v86[v88[5 - 2]][v88[1474 - (1219 + 251)]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[1673 - (1231 + 440)]] = v88[61 - (34 + 24)];
										v568 = 2 + 1;
									end
									if ((2726 >= 361) and (v568 == (7 - 3))) then
										v86[v88[1 + 1]] = v88[8 - 5];
										v80 = v80 + 1;
										v88 = v76[v80];
										v570 = v88[2];
										v86[v570] = v86[v570](v13(v86, v570 + (3 - 2), v88[7 - 4]));
										v80 = v80 + (3 - 2);
										v88 = v76[v80];
										v86[v88[2]][v86[v88[3]]] = v86[v88[8 - 4]];
										v568 = 1594 - (877 + 712);
									end
									if (((0 + 0) == v568) or (276 > 1935)) then
										v569 = nil;
										v570 = nil;
										v86[v88[2]] = v64[v88[757 - (242 + 512)]];
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[629 - (92 + 535)]] = v86[v88[3]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v568 = 1;
									end
									if ((6 + 1) == v568) then
										v86[v570](v86[v570 + 1]);
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[2]] = v65[v88[3]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[1 + 1]] = v86[v88[10 - 7]][v88[4 + 0]];
										v80 = v80 + 1;
										v568 = 8;
									end
									if (v568 == (7 + 2)) then
										v86[v88[1 + 1]] = v64[v88[3]];
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										if (v86[v88[2 - 0]] == v86[v88[1789 - (1476 + 309)]]) then
											v80 = v80 + (1285 - (299 + 985));
										else
											v80 = v88[1 + 2];
										end
										break;
									end
									if ((4510 >= 1950) and (v568 == (19 - 13))) then
										v88 = v76[v80];
										v570 = v88[95 - (86 + 7)];
										v569 = v86[v88[12 - 9]];
										v86[v570 + 1 + 0] = v569;
										v86[v570] = v569[v88[884 - (672 + 208)]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v570 = v88[1 + 1];
										v568 = 139 - (14 + 118);
									end
									if ((1196 <= 4037) and (v568 == (450 - (339 + 106)))) then
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[2 + 0]] = v88[1398 - (440 + 955)];
										v80 = v80 + 1;
										v88 = v76[v80];
										v570 = v88[2 + 0];
										v86[v570] = v86[v570](v13(v86, v570 + (1 - 0), v88[1 + 2]));
										v80 = v80 + 1;
										v568 = 14 - 8;
									end
								end
							else
								local v571 = 0;
								while true do
									if (v571 == 1) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2 + 0]][v88[356 - (260 + 93)]] = v86[v88[4 + 0]];
										v80 = v80 + (2 - 1);
										v571 = 2;
									end
									if (v571 == (3 - 1)) then
										v88 = v76[v80];
										v86[v88[1976 - (1181 + 793)]][v88[1 + 2]] = v88[311 - (105 + 202)];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v571 = 813 - (352 + 458);
									end
									if ((20 - 15) == v571) then
										v88 = v76[v80];
										v86[v88[4 - 2]] = v88[3 + 0];
										break;
									end
									if ((11 - 7) == v571) then
										v80 = v80 + (950 - (438 + 511));
										v88 = v76[v80];
										v86[v88[1385 - (1262 + 121)]][v88[1071 - (728 + 340)]] = v86[v88[1794 - (816 + 974)]];
										v80 = v80 + (2 - 1);
										v571 = 17 - 12;
									end
									if (v571 == (339 - (163 + 176))) then
										v86[v88[5 - 3]] = v64[v88[13 - 10]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[1812 - (1564 + 246)]] = v86[v88[348 - (124 + 221)]][v88[4]];
										v571 = 1 + 0;
									end
									if (v571 == (454 - (115 + 336))) then
										v86[v88[2]] = v64[v88[6 - 3]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[48 - (45 + 1)]] = v86[v88[1 + 2]][v88[1994 - (1282 + 708)]];
										v571 = 1216 - (583 + 629);
									end
								end
							end
						elseif (v89 == (8 + 40)) then
							local v572 = 0;
							local v573;
							while true do
								if (v572 == (12 - 7)) then
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v88[1173 - (943 + 227)];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v573 = v88[1633 - (1539 + 92)];
									v572 = 1952 - (706 + 1240);
								end
								if (v572 == 8) then
									v86[v88[260 - (81 + 177)]] = v88[3];
									break;
								end
								if (v572 == (8 - 5)) then
									v80 = v80 + (258 - (212 + 45));
									v88 = v76[v80];
									v86[v88[6 - 4]] = v86[v88[1949 - (708 + 1238)]][v88[4]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[1670 - (586 + 1081)];
									v572 = 515 - (348 + 163);
								end
								if (v572 == (7 + 0)) then
									v86[v88[282 - (215 + 65)]][v88[7 - 4]] = v86[v88[1863 - (1541 + 318)]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[2 + 1]] = v86[v88[4]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v572 = 1758 - (1036 + 714);
								end
								if (v572 == (0 + 0)) then
									v573 = nil;
									v86[v88[2 + 0]] = v86[v88[1283 - (883 + 397)]][v88[594 - (563 + 27)]];
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v86[v88[1988 - (1369 + 617)]] = v64[v88[1490 - (85 + 1402)]];
									v80 = v80 + 1;
									v572 = 1 + 0;
								end
								if (v572 == (4 - 2)) then
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[405 - (274 + 129)]] = v86[v88[220 - (12 + 205)]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v65[v88[11 - 8]];
									v572 = 3;
								end
								if (v572 == 6) then
									v86[v573] = v86[v573](v13(v86, v573 + 1 + 0, v88[3]));
									v80 = v80 + (385 - (27 + 357));
									v88 = v76[v80];
									v86[v88[482 - (91 + 389)]][v88[300 - (90 + 207)]] = v86[v88[1 + 3]];
									v80 = v80 + (862 - (706 + 155));
									v88 = v76[v80];
									v572 = 1802 - (730 + 1065);
								end
								if ((3635 > 3570) and ((1567 - (1339 + 224)) == v572)) then
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v88[3];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[845 - (268 + 575)]] = v88[1297 - (919 + 375)];
									v572 = 5;
								end
								if (v572 == (2 - 1)) then
									v88 = v76[v80];
									v86[v88[973 - (180 + 791)]] = v86[v88[1808 - (323 + 1482)]][v88[1922 - (1177 + 741)]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v573 = v88[1 + 1];
									v86[v573] = v86[v573](v86[v573 + 1]);
									v572 = 7 - 5;
								end
							end
						else
							v86[v88[1 + 1]][v86[v88[6 - 3]]] = v86[v88[1 + 3]];
						end
					elseif (v89 <= (162 - (96 + 13))) then
						if (v89 <= 51) then
							if (v89 > (1971 - (962 + 959))) then
								local v576 = 0 - 0;
								while true do
									if (v576 == (0 + 0)) then
										v86[v88[1353 - (461 + 890)]] = v64[v88[3 + 0]];
										v80 = v80 + (3 - 2);
										v88 = v76[v80];
										v576 = 244 - (19 + 224);
									end
									if ((2 + 0) == v576) then
										v64[v88[201 - (37 + 161)]] = v86[v88[1 + 1]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v576 = 3;
									end
									if ((3310 < 3400) and (v576 == (5 + 0))) then
										if (v86[v88[2]] or (698 == 550)) then
											v80 = v80 + (62 - (60 + 1));
										else
											v80 = v88[3];
										end
										break;
									end
									if ((927 - (826 + 97)) == v576) then
										v86[v88[2 + 0]] = v64[v88[10 - 7]];
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v576 = 690 - (375 + 310);
									end
									if (v576 == (2000 - (1864 + 135))) then
										v86[v88[2]] = not v86[v88[7 - 4]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v576 = 1 + 1;
									end
									if ((3662 == 3662) and (v576 == 3)) then
										v86[v88[1 + 1]] = v64[v88[7 - 4]];
										v80 = v80 + (1132 - (314 + 817));
										v88 = v76[v80];
										v576 = 4;
									end
								end
							else
								local v577;
								v86[v88[2 + 0]] = v64[v88[3]];
								v80 = v80 + (215 - (32 + 182));
								v88 = v76[v80];
								v86[v88[2 + 0]] = v86[v88[10 - 7]][v88[69 - (39 + 26)]];
								v80 = v80 + (145 - (54 + 90));
								v88 = v76[v80];
								v86[v88[200 - (45 + 153)]] = v88[2 + 1];
								v80 = v80 + (553 - (457 + 95));
								v88 = v76[v80];
								v577 = v88[2 + 0];
								v86[v577](v13(v86, v577 + (1 - 0), v88[3]));
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v80 = v88[10 - 7];
							end
						elseif (v89 == 52) then
							local v586 = 0 + 0;
							local v587;
							while true do
								if (v586 == (17 - 12)) then
									v80 = v88[8 - 5];
									break;
								end
								if (v586 == (749 - (485 + 263))) then
									v88 = v76[v80];
									v86[v88[709 - (575 + 132)]] = v64[v88[3]];
									v80 = v80 + (862 - (750 + 111));
									v88 = v76[v80];
									v86[v88[1012 - (445 + 565)]] = v86[v88[3 + 0]][v88[1 + 3]];
									v80 = v80 + (1 - 0);
									v586 = 1 + 1;
								end
								if (v586 == (314 - (189 + 121))) then
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v587 = v88[1349 - (634 + 713)];
									do
										return v13(v86, v587, v81);
									end
									v80 = v80 + (539 - (493 + 45));
									v88 = v76[v80];
									v586 = 973 - (493 + 475);
								end
								if ((0 + 0) == v586) then
									v587 = nil;
									v86[v88[2]] = v65[v88[787 - (158 + 626)]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2 - 0]] = v86[v88[3]][v88[4]];
									v80 = v80 + 1 + 0;
									v586 = 1;
								end
								if (v586 == (1 + 1)) then
									v88 = v76[v80];
									v86[v88[1093 - (1035 + 56)]] = v86[v88[3]];
									v80 = v80 + (960 - (114 + 845));
									v88 = v76[v80];
									v86[v88[1 + 1]] = v86[v88[7 - 4]];
									v80 = v80 + 1 + 0;
									v586 = 3;
								end
								if ((103 == 103) and (v586 == (1052 - (179 + 870)))) then
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[3]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v587 = v88[2 - 0];
									do
										return v86[v587](v13(v86, v587 + (879 - (827 + 51)), v88[3]));
									end
									v586 = 10 - 6;
								end
							end
						else
							local v588 = v88[2];
							local v589, v590 = v79(v86[v588](v13(v86, v588 + 1 + 0, v81)));
							v81 = (v590 + v588) - (474 - (95 + 378));
							local v591 = 0 + 0;
							for v1521 = v588, v81 do
								local v1522 = 0 - 0;
								while true do
									if (v1522 == (0 + 0)) then
										v591 = v591 + (1012 - (334 + 677));
										v86[v1521] = v589[v591];
										break;
									end
								end
							end
						end
					elseif (v89 <= (205 - 150)) then
						if ((v89 > (1110 - (1049 + 7))) or (4418 <= 1456)) then
							local v592 = v88[8 - 6];
							v86[v592] = v86[v592](v13(v86, v592 + (1 - 0), v81));
						else
							local v594 = 0 + 0;
							while true do
								if (v594 == (5 - 3)) then
									v88 = v76[v80];
									v86[v88[3 - 1]] = v88[3];
									v80 = v80 + 1;
									v88 = v76[v80];
									v594 = 2 + 1;
								end
								if (v594 == (1420 - (1004 + 416))) then
									v64[v88[1960 - (1621 + 336)]] = v86[v88[1941 - (337 + 1602)]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1519 - (1014 + 503)]] = v64[v88[1018 - (446 + 569)]];
									v594 = 1 + 0;
								end
								if ((v594 == (2 - 1)) or (4792 < 4096)) then
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[3 - 1]][v88[1 + 2]] = v88[4];
									v80 = v80 + (506 - (223 + 282));
									v594 = 1 + 1;
								end
								if (v594 == 3) then
									v80 = v88[3];
									break;
								end
							end
						end
					elseif (v89 == (88 - 32)) then
						local v595;
						v86[v88[2 - 0]] = v86[v88[673 - (623 + 47)]][v88[4]];
						v80 = v80 + (46 - (32 + 13));
						v88 = v76[v80];
						v86[v88[2 + 0]] = v86[v88[3]] / v88[4 + 0];
						v80 = v80 + (1802 - (1070 + 731));
						v88 = v76[v80];
						v595 = v88[2 + 0];
						v86[v595] = v86[v595](v86[v595 + (1405 - (1257 + 147))]);
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[3 - 1]] = v86[v88[3]];
						v80 = v80 + (134 - (98 + 35));
						v88 = v76[v80];
						v86[v88[1 + 1]] = v65[v88[3]];
						v80 = v80 + (3 - 2);
						v88 = v76[v80];
						v86[v88[6 - 4]] = v86[v88[3 + 0]][v88[4 + 0]];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[2]] = v86[v88[2 + 1]] % v88[561 - (395 + 162)];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[1943 - (816 + 1125)]] = v86[v88[3 - 0]] / v88[1152 - (701 + 447)];
						v80 = v80 + (1 - 0);
						v88 = v76[v80];
						v595 = v88[2];
						v86[v595] = v86[v595](v86[v595 + (1 - 0)]);
						v80 = v80 + (1342 - (391 + 950));
						v88 = v76[v80];
						v86[v88[2]] = v86[v88[7 - 4]];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[4 - 2]] = v88[7 - 4];
					else
						local v614 = 0 + 0;
						local v615;
						local v616;
						while true do
							if ((3 + 2) == v614) then
								v86[v616 + (3 - 2)] = v615;
								v86[v616] = v615[v88[1526 - (251 + 1271)]];
								break;
							end
							if (v614 == (1 + 0)) then
								v88 = v76[v80];
								v616 = v88[5 - 3];
								v86[v616] = v86[v616]();
								v80 = v80 + (2 - 1);
								v614 = 2 - 0;
							end
							if (2 == v614) then
								v88 = v76[v80];
								v64[v88[1262 - (1147 + 112)]] = v86[v88[1 + 1]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v614 = 1 + 2;
							end
							if (v614 == 4) then
								v80 = v80 + (698 - (335 + 362));
								v88 = v76[v80];
								v616 = v88[2 + 0];
								v615 = v86[v88[4 - 1]];
								v614 = 13 - 8;
							end
							if ((v614 == (0 - 0)) or (2950 == 503)) then
								v615 = nil;
								v616 = nil;
								v86[v88[9 - 7]] = v86[v88[8 - 5]][v88[570 - (237 + 329)]];
								v80 = v80 + (3 - 2);
								v614 = 1 + 0;
							end
							if ((2 + 1) == v614) then
								v86[v88[1126 - (408 + 716)]] = v64[v88[11 - 8]];
								v80 = v80 + (822 - (344 + 477));
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[1 + 2]][v88[1765 - (1188 + 573)]];
								v614 = 10 - 6;
							end
						end
					end
				elseif (v89 <= (84 + 2)) then
					if ((1231 > 917) and (v89 <= 71)) then
						if ((v89 <= (207 - 143)) or (541 > 1252)) then
							if (v89 <= 60) then
								if (v89 <= (89 - 31)) then
									local v159;
									v86[v88[4 - 2]] = v86[v88[1532 - (508 + 1021)]][v88[4 + 0]];
									v80 = v80 + (1167 - (228 + 938));
									v88 = v76[v80];
									v86[v88[687 - (332 + 353)]] = v88[3 - 0];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[2 + 0]] = v88[2 + 1];
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v86[v88[425 - (18 + 405)]] = v88[2 + 1];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2 - 0]] = v88[981 - (194 + 784)];
									v80 = v80 + 1;
									v88 = v76[v80];
									v159 = v88[1772 - (694 + 1076)];
									v86[v159] = v86[v159](v13(v86, v159 + (1905 - (122 + 1782)), v88[3 + 0]));
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2]][v88[3 + 0]] = v86[v88[3 + 1]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[5 - 3]][v88[3 + 0]] = v88[1974 - (214 + 1756)];
									v80 = v80 + (4 - 3);
									v88 = v76[v80];
									v86[v88[2]] = v64[v88[1 + 2]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[587 - (217 + 368)]] = v86[v88[8 - 5]][v88[3 + 1]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[1 + 2]] = v86[v88[893 - (844 + 45)]];
									v80 = v80 + (285 - (242 + 42));
									v88 = v76[v80];
									v86[v88[2]] = v64[v88[5 - 2]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[1202 - (132 + 1068)]] = v86[v88[3]][v88[5 - 1]];
									v80 = v80 + (1624 - (214 + 1409));
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[1637 - (497 + 1137)]] = v86[v88[944 - (9 + 931)]];
									v80 = v80 + (290 - (181 + 108));
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[7 - 4]] = v88[11 - 7];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1 + 1]] = v64[v88[2 + 1]];
									v80 = v80 + (477 - (296 + 180));
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[1406 - (1183 + 220)]][v88[4]];
									v80 = v80 + (1266 - (1037 + 228));
									v88 = v76[v80];
									v86[v88[2]][v88[4 - 1]] = v86[v88[4]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[6 - 4]] = v88[3];
								elseif (v89 > (793 - (527 + 207))) then
									local v617 = 527 - (187 + 340);
									while true do
										if (v617 == (1874 - (1298 + 572))) then
											v80 = v80 + (2 - 1);
											v88 = v76[v80];
											v86[v88[172 - (144 + 26)]] = v65[v88[7 - 4]];
											v80 = v80 + (2 - 1);
											v617 = 5;
										end
										if (v617 == (2 + 3)) then
											v88 = v76[v80];
											v86[v88[2]] = v86[v88[3]][v88[10 - 6]];
											v80 = v80 + 1;
											v88 = v76[v80];
											v617 = 6;
										end
										if (v617 == 9) then
											v86[v88[2]] = v88[3];
											break;
										end
										if (2 == v617) then
											v88 = v76[v80];
											v86[v88[4 - 2]] = v64[v88[3]];
											v80 = v80 + (4 - 3);
											v88 = v76[v80];
											v617 = 2 + 1;
										end
										if (v617 == 7) then
											v80 = v80 + (1 - 0);
											v88 = v76[v80];
											v86[v88[2 + 0]][v88[2 + 1]] = v88[206 - (5 + 197)];
											v80 = v80 + (687 - (339 + 347));
											v617 = 8;
										end
										if (v617 == (6 - 3)) then
											v86[v88[6 - 4]] = v86[v88[379 - (365 + 11)]][v88[4 + 0]];
											v80 = v80 + (3 - 2);
											v88 = v76[v80];
											v86[v88[4 - 2]][v88[927 - (837 + 87)]] = v86[v88[4]];
											v617 = 6 - 2;
										end
										if (v617 == (1671 - (837 + 833))) then
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[1389 - (356 + 1031)]][v88[2 + 1]] = v88[4];
											v80 = v80 + (1647 - (73 + 1573));
											v617 = 2;
										end
										if (v617 == (1388 - (1307 + 81))) then
											v86[v88[236 - (7 + 227)]] = v86[v88[4 - 1]][v88[170 - (90 + 76)]];
											v80 = v80 + (3 - 2);
											v88 = v76[v80];
											v86[v88[1 + 1]][v88[3 + 0]] = v86[v88[4 + 0]];
											v617 = 1;
										end
										if (v617 == (23 - 17)) then
											v86[v88[262 - (197 + 63)]] = v86[v88[1 + 2]][v88[1 + 3]];
											v80 = v80 + 1 + 0;
											v88 = v76[v80];
											v86[v88[1 + 1]][v88[3 - 0]] = v86[v88[4]];
											v617 = 1376 - (618 + 751);
										end
										if (((6 + 2) == v617) or (728 > 4322)) then
											v88 = v76[v80];
											v86[v88[1912 - (206 + 1704)]][v88[4 - 1]] = v86[v88[4]];
											v80 = v80 + (1 - 0);
											v88 = v76[v80];
											v617 = 9;
										end
									end
								else
									v86[v88[2]] = v86[v88[3]] - v86[v88[4]];
								end
							elseif (v89 <= (28 + 34)) then
								if (v89 == 61) then
									local v619;
									v86[v88[1277 - (155 + 1120)]] = v86[v88[1509 - (396 + 1110)]][v88[4]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[3 + 0];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[978 - (230 + 746)]] = v88[604 - (473 + 128)];
									v80 = v80 + (49 - (39 + 9));
									v88 = v76[v80];
									v86[v88[268 - (38 + 228)]] = v88[5 - 2];
									v80 = v80 + (474 - (106 + 367));
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[1865 - (354 + 1508)];
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v619 = v88[2 + 0];
									v86[v619] = v86[v619](v13(v86, v619 + 1 + 0, v88[3 - 0]));
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1246 - (334 + 910)]][v88[898 - (92 + 803)]] = v86[v88[3 + 1]];
									v80 = v80 + (1182 - (1035 + 146));
									v88 = v76[v80];
									v86[v88[618 - (230 + 386)]] = v65[v88[2 + 1]];
									v80 = v80 + (1511 - (353 + 1157));
									v88 = v76[v80];
									v86[v88[1116 - (53 + 1061)]] = v86[v88[1638 - (1568 + 67)]][v88[2 + 2]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[4 - 2]] = v88[8 - 5];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[4 - 2]] = v88[3 + 0];
									v80 = v80 + (1213 - (615 + 597));
									v88 = v76[v80];
									v86[v88[2 + 0]] = v88[3 - 0];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2]] = v88[1 + 2];
									v80 = v80 + 1;
									v88 = v76[v80];
									v619 = v88[2 + 0];
									v86[v619] = v86[v619](v13(v86, v619 + (1900 - (1056 + 843)), v88[5 - 2]));
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[5 - 3]][v88[2 + 1]] = v86[v88[4]];
									v80 = v80 + (1977 - (286 + 1690));
									v88 = v76[v80];
									v86[v88[913 - (98 + 813)]] = v64[v88[1 + 2]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[7 - 4]][v88[3 + 1]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[509 - (263 + 244)]][v88[3 + 0]] = v86[v88[4]];
									v80 = v80 + (1688 - (1502 + 185));
									v88 = v76[v80];
									v86[v88[1 + 1]] = v64[v88[3]];
									v80 = v80 + (4 - 3);
									v88 = v76[v80];
									v86[v88[5 - 3]] = v86[v88[1530 - (629 + 898)]][v88[4]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2]][v88[8 - 5]] = v86[v88[10 - 6]];
									v80 = v80 + (366 - (12 + 353));
									v88 = v76[v80];
									v86[v88[2]] = v64[v88[1914 - (1680 + 231)]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1 + 1]] = v86[v88[2 + 1]][v88[1153 - (212 + 937)]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1064 - (111 + 951)]][v88[1 + 2]] = v86[v88[31 - (18 + 9)]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[536 - (31 + 503)]][v88[3]] = v88[4];
									v80 = v80 + (1633 - (595 + 1037));
									v88 = v76[v80];
									v86[v88[1446 - (189 + 1255)]] = v88[2 + 1];
								else
									local v663;
									v86[v88[2 - 0]] = v86[v88[1282 - (1170 + 109)]][v88[4]];
									v80 = v80 + (1818 - (348 + 1469));
									v88 = v76[v80];
									v86[v88[1291 - (1115 + 174)]] = v64[v88[7 - 4]];
									v80 = v80 + (1015 - (85 + 929));
									v88 = v76[v80];
									v86[v88[2 + 0]] = v86[v88[3]][v88[4]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v663 = v88[1869 - (1151 + 716)];
									v86[v663] = v86[v663](v86[v663 + 1 + 0]);
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v86[v88[3]];
									v80 = v80 + (1705 - (95 + 1609));
									v88 = v76[v80];
									v86[v88[6 - 4]] = v65[v88[761 - (364 + 394)]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1 + 1]] = v86[v88[1 + 2]][v88[4 + 0]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v88[2 + 1];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v88[1 + 2];
									v80 = v80 + (957 - (719 + 237));
									v88 = v76[v80];
									v86[v88[5 - 3]] = v88[3 + 0];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[4 - 2]] = v88[3];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v663 = v88[2];
									v86[v663] = v86[v663](v13(v86, v663 + (2 - 1), v88[1994 - (761 + 1230)]));
									v80 = v80 + (194 - (80 + 113));
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[3]] = v86[v88[4]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v64[v88[1 + 2]];
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[1 + 2]][v88[1 + 3]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1245 - (965 + 278)]][v88[1732 - (1391 + 338)]] = v86[v88[10 - 6]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[6 - 3]] = v86[v88[2 + 2]];
									v80 = v80 + (1409 - (496 + 912));
									v88 = v76[v80];
									v86[v88[2]] = v65[v88[9 - 6]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[3 - 1]] = v86[v88[1333 - (1190 + 140)]][v88[2 + 2]];
									v80 = v80 + (719 - (317 + 401));
									v88 = v76[v80];
									v86[v88[951 - (303 + 646)]] = v64[v88[10 - 7]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1734 - (1675 + 57)]] = v86[v88[2 + 1]][v88[10 - 6]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v663 = v88[2];
									v86[v663] = v86[v663](v86[v663 + 1 + 0]);
									v80 = v80 + (978 - (338 + 639));
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[382 - (320 + 59)]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2]] = v65[v88[735 - (628 + 104)]];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[1893 - (439 + 1452)]] = v86[v88[1950 - (105 + 1842)]][v88[18 - 14]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[9 - 7]] = v88[1 + 2];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[3 - 1]] = v88[3];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1166 - (274 + 890)]] = v88[3 + 0];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[2 + 1];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v663 = v88[2 - 0];
									v86[v663] = v86[v663](v13(v86, v663 + (820 - (731 + 88)), v88[3]));
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[3]] = v86[v88[1 + 3]];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[5 - 3]] = v88[8 - 5];
								end
							elseif ((v89 > (130 - 67)) or (4531 == 3134)) then
								v86[v88[2 + 0]][v88[1 + 2]] = v86[v88[1 + 3]];
							else
								local v712;
								v86[v88[2]] = v88[3 + 0];
								v80 = v80 + (159 - (139 + 19));
								v88 = v76[v80];
								v712 = v88[1 + 1];
								v86[v712] = v86[v712](v13(v86, v712 + (1994 - (1687 + 306)), v88[10 - 7]));
								v80 = v80 + (1155 - (1018 + 136));
								v88 = v76[v80];
								v86[v88[2]][v86[v88[1 + 2]]] = v86[v88[17 - 13]];
								v80 = v80 + (816 - (117 + 698));
								v88 = v76[v80];
								v86[v88[483 - (305 + 176)]] = v86[v88[1 + 2]][v88[3 + 1]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[2]] = v65[v88[3]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[2 - 0]] = v86[v88[6 - 3]][v88[6 - 2]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[262 - (159 + 101)]] = v86[v88[14 - 11]][v88[13 - 9]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[2]][v86[v88[9 - 6]]] = v86[v88[4]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[1 + 1]] = v86[v88[269 - (112 + 154)]][v88[9 - 5]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[33 - (21 + 10)]] = v65[v88[3]];
							end
						elseif (v89 <= (1786 - (531 + 1188))) then
							if (v89 <= (56 + 9)) then
								local v196;
								local v197;
								v197 = v88[2];
								v196 = v86[v88[666 - (96 + 567)]];
								v86[v197 + (1 - 0)] = v196;
								v86[v197] = v196[v88[2 + 2]];
								v80 = v80 + (3 - 2);
								v88 = v76[v80];
								v197 = v88[1697 - (867 + 828)];
								v86[v197](v86[v197 + 1]);
								v80 = v80 + 1;
								v88 = v76[v80];
								for v213 = v88[4 - 2], v88[10 - 7] do
									v86[v213] = nil;
								end
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v64[v88[3]] = v86[v88[2 - 0]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v80 = v88[2 + 1];
							elseif (v89 > (117 - 51)) then
								local v732 = 771 - (134 + 637);
								local v733;
								local v734;
								while true do
									if (v732 == (0 + 0)) then
										v733 = nil;
										v734 = nil;
										v734 = v88[1159 - (775 + 382)];
										v732 = 1;
									end
									if (v732 == (2 - 0)) then
										v80 = v80 + (608 - (45 + 562));
										v88 = v76[v80];
										v86[v88[864 - (545 + 317)]] = v64[v88[3 - 0]];
										v732 = 1029 - (763 + 263);
									end
									if (v732 == (2 + 3)) then
										v86[v734] = v86[v734](v13(v86, v734 + 1, v88[1753 - (512 + 1238)]));
										v80 = v80 + (1595 - (272 + 1322));
										v88 = v76[v80];
										v732 = 10 - 4;
									end
									if ((v732 == (1250 - (533 + 713))) or (167 == 432)) then
										v80 = v80 + (29 - (14 + 14));
										v88 = v76[v80];
										v734 = v88[827 - (499 + 326)];
										v732 = 8 - 3;
									end
									if (v732 == (427 - (104 + 320))) then
										v80 = v80 + (1998 - (1929 + 68));
										v88 = v76[v80];
										v86[v88[1325 - (1206 + 117)]] = v86[v88[3 + 0]][v88[1596 - (683 + 909)]];
										v732 = 12 - 8;
									end
									if (v732 == (11 - 5)) then
										v86[v88[779 - (772 + 5)]][v88[1430 - (19 + 1408)]] = v86[v88[4]];
										break;
									end
									if (v732 == (289 - (134 + 154))) then
										v733 = v86[v88[4 - 1]];
										v86[v734 + 1] = v733;
										v86[v734] = v733[v88[12 - 8]];
										v732 = 1 + 1;
									end
								end
							else
								local v735 = 0 + 0;
								local v736;
								while true do
									if (v735 == 2) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[204 - (10 + 192)]] = v86[v88[50 - (13 + 34)]];
										v80 = v80 + (1290 - (342 + 947));
										v88 = v76[v80];
										v86[v88[8 - 6]] = v65[v88[1711 - (119 + 1589)]];
										v735 = 6 - 3;
									end
									if ((2021 >= 195) and ((0 - 0) == v735)) then
										v736 = nil;
										v86[v88[554 - (545 + 7)]] = v86[v88[8 - 5]][v88[2 + 2]];
										v80 = v80 + (1704 - (494 + 1209));
										v88 = v76[v80];
										v86[v88[2]] = v64[v88[7 - 4]];
										v80 = v80 + (999 - (197 + 801));
										v735 = 1 - 0;
									end
									if ((4181 > 3970) and (v735 == (14 - 11))) then
										v80 = v80 + (955 - (919 + 35));
										v88 = v76[v80];
										v86[v88[2 + 0]] = v86[v88[11 - 8]][v88[471 - (369 + 98)]];
										v80 = v80 + (1116 - (400 + 715));
										v88 = v76[v80];
										v86[v88[1 + 1]] = v88[3];
										v735 = 2 + 2;
									end
									if (v735 == (1332 - (744 + 581))) then
										v86[v88[2 + 0]] = v88[1625 - (653 + 969)];
										break;
									end
									if (v735 == (11 - 5)) then
										v86[v736] = v86[v736](v13(v86, v736 + (1632 - (12 + 1619)), v88[3]));
										v80 = v80 + (164 - (103 + 60));
										v88 = v76[v80];
										v86[v88[9 - 7]][v88[3]] = v86[v88[17 - 13]];
										v80 = v80 + (4 - 3);
										v88 = v76[v80];
										v735 = 1669 - (710 + 952);
									end
									if (v735 == (1869 - (555 + 1313))) then
										v88 = v76[v80];
										v86[v88[2 + 0]] = v86[v88[3 + 0]][v88[4]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v736 = v88[2];
										v86[v736] = v86[v736](v86[v736 + (1469 - (1261 + 207))]);
										v735 = 2;
									end
									if (v735 == (256 - (245 + 7))) then
										v80 = v80 + (748 - (212 + 535));
										v88 = v76[v80];
										v86[v88[9 - 7]] = v88[3];
										v80 = v80 + (1477 - (905 + 571));
										v88 = v76[v80];
										v86[v88[9 - 7]] = v88[3 - 0];
										v735 = 19 - 14;
									end
									if ((1 + 4) == v735) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2]] = v88[1466 - (522 + 941)];
										v80 = v80 + (1512 - (292 + 1219));
										v88 = v76[v80];
										v736 = v88[1114 - (787 + 325)];
										v735 = 18 - 12;
									end
								end
							end
						elseif ((1145 < 1205) and (v89 <= (62 + 7))) then
							if (v89 > 68) then
								local v737 = 0 - 0;
								local v738;
								local v739;
								while true do
									if ((v737 == (540 - (424 + 110))) or (2728 < 1073)) then
										v86[v88[2 + 0]][v88[2 + 1]] = v86[v88[1 + 3]];
										break;
									end
									if (v737 == 4) then
										v80 = v80 + (313 - (33 + 279));
										v88 = v76[v80];
										v739 = v88[2];
										v737 = 1 + 4;
									end
									if ((1353 - (1338 + 15)) == v737) then
										v738 = nil;
										v739 = nil;
										v739 = v88[1425 - (528 + 895)];
										v737 = 1 + 0;
									end
									if (v737 == (1925 - (1606 + 318))) then
										v738 = v86[v88[1822 - (298 + 1521)]];
										v86[v739 + (4 - 3)] = v738;
										v86[v739] = v738[v88[314 - (154 + 156)]];
										v737 = 7 - 5;
									end
									if (v737 == 2) then
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[1117 - (712 + 403)]] = v64[v88[453 - (168 + 282)]];
										v737 = 3;
									end
									if (v737 == (5 - 2)) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2 + 0]] = v86[v88[3]][v88[1 + 3]];
										v737 = 4;
									end
									if (5 == v737) then
										v86[v739] = v86[v739](v13(v86, v739 + 1, v88[8 - 5]));
										v80 = v80 + (1452 - (1242 + 209));
										v88 = v76[v80];
										v737 = 685 - (20 + 659);
									end
								end
							else
								local v740 = v88[2];
								local v741 = v86[v740];
								local v742 = v86[v740 + 2];
								if (v742 > (0 + 0)) then
									if ((v741 > v86[v740 + 1 + 0]) or (2223 > 4886)) then
										v80 = v88[4 - 1];
									else
										v86[v740 + 3] = v741;
									end
								elseif (v741 < v86[v740 + (1 - 0)]) then
									v80 = v88[622 - (427 + 192)];
								else
									v86[v740 + (6 - 3)] = v741;
								end
							end
						elseif (v89 == (26 + 44)) then
							v86[v88[1949 - (1427 + 520)]] = v86[v88[2 + 1]] % v88[15 - 11];
						else
							local v744;
							local v745;
							v86[v88[2 + 0]] = v86[v88[3]];
							v80 = v80 + (1233 - (712 + 520));
							v88 = v76[v80];
							v86[v88[2]] = {};
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]] = v64[v88[6 - 3]];
							v80 = v80 + (1347 - (565 + 781));
							v88 = v76[v80];
							v86[v88[2]] = v86[v88[568 - (35 + 530)]][v88[2 + 2]];
							v80 = v80 + (3 - 2);
							v88 = v76[v80];
							v86[v88[2]] = v65[v88[1381 - (1330 + 48)]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2 + 0]] = v86[v88[1 + 2]][v88[4]];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[8 - 6]] = v88[1172 - (854 + 315)];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[6 - 4]] = v88[1 + 2];
							v80 = v80 + (45 - (31 + 13));
							v88 = v76[v80];
							v86[v88[2 - 0]] = v88[6 - 3];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2]] = v88[566 - (281 + 282)];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v745 = v88[2 + 0];
							v86[v745] = v86[v745](v13(v86, v745 + (950 - (216 + 733)), v88[3]));
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[1849 - (137 + 1710)]][v86[v88[3]]] = v86[v88[10 - 6]];
							v80 = v80 + (539 - (100 + 438));
							v88 = v76[v80];
							v86[v88[2]] = v88[1368 - (205 + 1160)];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v745 = v88[2 + 0];
							v86[v745] = v86[v745](v13(v86, v745 + (1306 - (535 + 770)), v88[1 + 2]));
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v745 = v88[2];
							v744 = v86[v88[1997 - (211 + 1783)]];
							v86[v745 + 1 + 0] = v744;
							v86[v745] = v744[v88[1433 - (1236 + 193)]];
							v80 = v80 + (911 - (793 + 117));
							v88 = v76[v80];
							v745 = v88[2];
							v86[v745](v86[v745 + (1893 - (1607 + 285))]);
							v80 = v80 + 1;
							v88 = v76[v80];
							v64[v88[863 - (747 + 113)]] = v86[v88[1978 - (80 + 1896)]];
							v80 = v80 + (4 - 3);
							v88 = v76[v80];
							v86[v88[2]] = v65[v88[5 - 2]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2 + 0]] = v86[v88[6 - 3]][v88[3 + 1]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v744 = v86[v88[11 - 7]];
							if ((1727 < 2511) and not v744) then
								v80 = v80 + 1 + 0;
							else
								v86[v88[2]] = v744;
								v80 = v88[1 + 2];
							end
						end
					elseif (v89 <= (186 - 108)) then
						if (v89 <= 74) then
							if (v89 <= (526 - (246 + 208))) then
								v86[v88[1894 - (614 + 1278)]] = v86[v88[2 + 1]] / v88[318 - (249 + 65)];
							elseif (v89 > (165 - 92)) then
								do
									return v86[v88[1277 - (726 + 549)]];
								end
							else
								v86[v88[2]] = v64[v88[3 + 0]];
							end
						elseif (v89 <= 76) then
							if (v89 > (1499 - (916 + 508))) then
								local v777 = 0 - 0;
								local v778;
								local v779;
								local v780;
								while true do
									if ((v777 == (0 + 0)) or (3104 <= 750)) then
										v778 = nil;
										v779 = nil;
										v780 = nil;
										v777 = 324 - (140 + 183);
									end
									if ((1 + 0) == v777) then
										v86[v88[566 - (297 + 267)]] = {};
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v777 = 344 - (37 + 305);
									end
									if (v777 == (1270 - (323 + 943))) then
										v86[v88[1 + 1]] = v88[3 - 0];
										v80 = v80 + 1;
										v88 = v76[v80];
										v777 = 1540 - (394 + 1141);
									end
									if (v777 == 3) then
										v86[v88[2 + 0]] = #v86[v88[1 + 2]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v777 = 4 - 0;
									end
									if (v777 == 2) then
										v86[v88[2 - 0]] = v88[3 + 0];
										v80 = v80 + 1;
										v88 = v76[v80];
										v777 = 3;
									end
									if (v777 == (5 + 0)) then
										v780 = v88[531 - (87 + 442)];
										v779 = v86[v780];
										v778 = v86[v780 + (807 - (13 + 792))];
										v777 = 6;
									end
									if ((6 + 0) == v777) then
										if (v778 > 0) then
											if (v779 > v86[v780 + 1]) then
												v80 = v88[2 + 1];
											else
												v86[v780 + 3 + 0] = v779;
											end
										elseif (v779 < v86[v780 + (1866 - (1231 + 634))]) then
											v80 = v88[1769 - (1362 + 404)];
										else
											v86[v780 + (8 - 5)] = v779;
										end
										break;
									end
								end
							else
								local v781;
								v86[v88[2 + 0]] = v86[v88[8 - 5]][v88[4]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[2]] = v64[v88[1019 - (660 + 356)]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[2 + 0]] = v86[v88[1953 - (1111 + 839)]][v88[955 - (496 + 455)]];
								v80 = v80 + (699 - (66 + 632));
								v88 = v76[v80];
								v781 = v88[2 - 0];
								v86[v781] = v86[v781](v86[v781 + (1137 - (441 + 695))]);
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[5 - 3]] = v86[v88[5 - 2]];
								v80 = v80 + (4 - 3);
								v88 = v76[v80];
								v86[v88[2 + 0]] = v64[v88[1841 - (286 + 1552)]];
								v80 = v80 + (1278 - (1016 + 261));
								v88 = v76[v80];
								v86[v88[1322 - (708 + 612)]] = v86[v88[3]][v88[11 - 7]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[381 - (113 + 266)]][v88[1173 - (979 + 191)]] = v86[v88[6 - 2]];
								v80 = v80 + (1736 - (339 + 1396));
								v88 = v76[v80];
								v86[v88[1 + 1]][v88[3 + 0]] = v86[v88[7 - 3]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[1 + 1]] = v65[v88[350 - (187 + 160)]];
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v86[v88[6 - 4]] = v86[v88[3]][v88[1 + 3]];
								v80 = v80 + (3 - 2);
								v88 = v76[v80];
								v86[v88[1 + 1]] = v64[v88[1 + 2]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[330 - (56 + 272)]] = v86[v88[3]][v88[3 + 1]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v781 = v88[2];
								v86[v781] = v86[v781](v86[v781 + 1 + 0]);
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[2 + 1]];
								v80 = v80 + (641 - (455 + 185));
								v88 = v76[v80];
								v86[v88[790 - (757 + 31)]] = v65[v88[3]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[2002 - (762 + 1237)]][v88[8 - 4]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[271 - (265 + 4)]] = v88[7 - 4];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[3 - 1]] = v88[8 - 5];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[5 - 3]] = v88[3];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[3 - 1]] = v88[3];
								v80 = v80 + 1;
								v88 = v76[v80];
								v781 = v88[2];
								v86[v781] = v86[v781](v13(v86, v781 + (1735 - (1691 + 43)), v88[3 + 0]));
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[2]][v88[9 - 6]] = v86[v88[1 + 3]];
								v80 = v80 + (3 - 2);
								v88 = v76[v80];
								v86[v88[2]] = v65[v88[179 - (127 + 49)]];
								v80 = v80 + (1681 - (281 + 1399));
								v88 = v76[v80];
								v86[v88[1661 - (184 + 1475)]] = v86[v88[3 - 0]][v88[8 - 4]];
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v86[v88[2 + 0]] = v88[3 + 0];
								v80 = v80 + (1292 - (260 + 1031));
								v88 = v76[v80];
								v86[v88[2]] = v88[1180 - (313 + 864)];
								v80 = v80 + (693 - (655 + 37));
								v88 = v76[v80];
								v86[v88[2 + 0]] = v88[3];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[4 - 2]] = v88[2 + 1];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v781 = v88[2];
								v86[v781] = v86[v781](v13(v86, v781 + (1 - 0), v88[773 - (383 + 387)]));
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[1 + 1]][v88[9 - 6]] = v86[v88[4]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[1 + 1]] = v88[1 + 2];
							end
						elseif ((2519 >= 1057) and (v89 == (587 - (304 + 206)))) then
							if ((4875 >= 3370) and (v86[v88[227 - (182 + 43)]] == v86[v88[779 - (264 + 511)]])) then
								v80 = v80 + 1 + 0;
							else
								v80 = v88[3];
							end
						else
							local v828 = 0;
							local v829;
							while true do
								if ((v828 == (6 - 3)) or (4402 <= 1842)) then
									v80 = v80 + (982 - (128 + 853));
									v88 = v76[v80];
									v86[v88[1704 - (1635 + 67)]] = v86[v88[1 + 2]][v88[2 + 2]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[199 - (131 + 66)]] = v88[10 - 7];
									v828 = 4;
								end
								if (v828 == (49 - 39)) then
									v88 = v76[v80];
									v86[v88[2]][v88[3]] = v86[v88[4]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[4 - 1]] = v88[4];
									v80 = v80 + (1 - 0);
									v828 = 1616 - (306 + 1299);
								end
								if (v828 == (4 + 5)) then
									v86[v88[4 - 2]] = v88[792 - (671 + 118)];
									v80 = v80 + 1;
									v88 = v76[v80];
									v829 = v88[7 - 5];
									v86[v829] = v86[v829](v13(v86, v829 + (77 - (73 + 3)), v88[8 - 5]));
									v80 = v80 + (4 - 3);
									v828 = 23 - 13;
								end
								if (v828 == (1756 - (1668 + 87))) then
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[3]][v88[1 + 3]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v829 = v88[1901 - (296 + 1603)];
									v86[v829] = v86[v829](v86[v829 + 1]);
									v828 = 2;
								end
								if ((110 - (79 + 27)) == v828) then
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1009 - (700 + 307)]] = v88[3];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1801 - (1477 + 322)]] = v88[1 + 2];
									v828 = 5;
								end
								if ((v828 == (15 - 8)) or (3260 >= 4359)) then
									v86[v88[2 + 0]] = v65[v88[9 - 6]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[8 - 6]] = v86[v88[7 - 4]][v88[2 + 2]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v828 = 18 - 10;
								end
								if ((4979 >= 4797) and (v828 == (2 - 0))) then
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[1788 - (20 + 1766)]] = v86[v88[5 - 2]];
									v80 = v80 + (810 - (88 + 721));
									v88 = v76[v80];
									v86[v88[2]] = v65[v88[3 + 0]];
									v828 = 1 + 2;
								end
								if (v828 == (0 + 0)) then
									v829 = nil;
									v86[v88[1 + 1]] = v86[v88[3]][v88[9 - 5]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[3 - 1]] = v64[v88[440 - (93 + 344)]];
									v80 = v80 + (1214 - (960 + 253));
									v828 = 1 + 0;
								end
								if ((v828 == 12) or (4407 == 1671)) then
									v88 = v76[v80];
									v86[v88[2]] = v88[8 - 5];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v80 = v88[1419 - (74 + 1342)];
									break;
								end
								if (v828 == (3 + 5)) then
									v86[v88[476 - (33 + 441)]] = v88[8 - 5];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1421 - (64 + 1355)]] = v88[4 - 1];
									v80 = v80 + (12 - (5 + 6));
									v88 = v76[v80];
									v828 = 2 + 7;
								end
								if ((203 < 3041) and ((2 + 3) == v828)) then
									v80 = v80 + (447 - (369 + 77));
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[741 - (438 + 300)];
									v80 = v80 + 1;
									v88 = v76[v80];
									v829 = v88[296 - (50 + 244)];
									v828 = 1207 - (95 + 1106);
								end
								if (v828 == (20 - 9)) then
									v88 = v76[v80];
									v86[v88[9 - 7]][v88[1899 - (1741 + 155)]] = v88[11 - 7];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[2]][v88[5 - 2]] = v86[v88[4]];
									v80 = v80 + 1 + 0;
									v828 = 6 + 6;
								end
								if (v828 == (4 + 2)) then
									v86[v829] = v86[v829](v13(v86, v829 + (2 - 1), v88[7 - 4]));
									v80 = v80 + (1778 - (1263 + 514));
									v88 = v76[v80];
									v86[v88[2]][v88[500 - (73 + 424)]] = v86[v88[10 - 6]];
									v80 = v80 + (309 - (93 + 215));
									v88 = v76[v80];
									v828 = 24 - 17;
								end
							end
						end
					elseif ((4059 == 4059) and (v89 <= (2017 - (1756 + 179)))) then
						if (v89 <= 80) then
							if (v89 > (1758 - (550 + 1129))) then
								v86[v88[109 - (57 + 50)]] = v88[632 - (30 + 599)] + v86[v88[1 + 3]];
							else
								v86[v88[2 - 0]] = v86[v88[921 - (794 + 124)]];
							end
						elseif (v89 > 81) then
							local v833 = 0 + 0;
							local v834;
							local v835;
							while true do
								if ((v833 == (1 + 6)) or (3371 <= 2640)) then
									v86[v88[3 - 1]][v88[1930 - (1299 + 628)]] = v86[v88[8 - 4]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v833 = 8 + 0;
								end
								if ((23 - 15) == v833) then
									v80 = v88[3];
									break;
								end
								if (v833 == (1450 - (335 + 1110))) then
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v835 = v88[6 - 4];
									v833 = 10 - 4;
								end
								if (((335 - (268 + 64)) == v833) or (3446 <= 963)) then
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1280 - (243 + 1035)]] = v64[v88[7 - 4]];
									v833 = 18 - 14;
								end
								if (v833 == (0 - 0)) then
									v834 = nil;
									v835 = nil;
									v86[v88[2 + 0]] = v86[v88[3 + 0]][v88[4 - 0]];
									v833 = 101 - (90 + 10);
								end
								if (v833 == 2) then
									v834 = v86[v88[807 - (209 + 595)]];
									v86[v835 + 1] = v834;
									v86[v835] = v834[v88[809 - (603 + 202)]];
									v833 = 3;
								end
								if (((3 + 1) == v833) or (4457 <= 2180)) then
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v86[v88[1 + 1]] = v86[v88[8 - 5]][v88[1 + 3]];
									v833 = 13 - 8;
								end
								if (v833 == 6) then
									v86[v835] = v86[v835](v13(v86, v835 + 1, v88[3]));
									v80 = v80 + (4 - 3);
									v88 = v76[v80];
									v833 = 286 - (174 + 105);
								end
								if ((v833 == 1) or (2152 > 2620)) then
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v835 = v88[915 - (532 + 381)];
									v833 = 2 + 0;
								end
							end
						else
							v86[v88[841 - (137 + 702)]][v88[8 - 5]] = v88[4];
						end
					elseif (v89 <= (7 + 77)) then
						if ((v89 == 83) or (3942 < 3631)) then
							local v838 = 0 - 0;
							local v839;
							while true do
								if ((v838 == (1890 - (1819 + 67))) or (489 > 2158)) then
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1 + 1]] = v86[v88[1360 - (259 + 1098)]];
									v838 = 4 + 1;
								end
								if ((1612 <= 4553) and (v838 == (2 + 7))) then
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[6 - 4]] = v65[v88[2 + 1]];
									break;
								end
								if (v838 == (8 + 0)) then
									v80 = v80 + (4 - 3);
									v88 = v76[v80];
									v86[v88[1708 - (667 + 1039)]][v88[1022 - (274 + 745)]] = v88[4];
									v838 = 7 + 2;
								end
								if ((v838 == 3) or (2292 > 4911)) then
									v88 = v76[v80];
									v839 = v88[2];
									v86[v839] = v86[v839](v86[v839 + 1 + 0]);
									v838 = 4;
								end
								if ((v838 == (432 - (288 + 142))) or (1307 < 752)) then
									v88 = v76[v80];
									v86[v88[1308 - (301 + 1005)]] = v86[v88[2 + 1]][v88[9 - 5]];
									v80 = v80 + (1874 - (674 + 1199));
									v838 = 3;
								end
								if ((v838 == (6 + 0)) or (2021 <= 1818)) then
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v86[v88[8 - 5]][v88[16 - 12]];
									v838 = 2 + 5;
								end
								if (v838 == (446 - (92 + 353))) then
									v88 = v76[v80];
									v86[v88[2 + 0]] = v64[v88[7 - 4]];
									v80 = v80 + (1 - 0);
									v838 = 5 - 3;
								end
								if (v838 == 5) then
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v64[v88[4 - 1]];
									v838 = 6;
								end
								if ((v838 == (15 - 8)) or (3184 > 4881)) then
									v80 = v80 + (4 - 3);
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[5 - 2]] = v86[v88[4]];
									v838 = 273 - (34 + 231);
								end
								if ((v838 == (1317 - (930 + 387))) or (1708 < 564)) then
									v839 = nil;
									v86[v88[2 + 0]] = v86[v88[2 + 1]][v88[10 - 6]];
									v80 = v80 + (698 - (389 + 308));
									v838 = 2 - 1;
								end
							end
						else
							local v840;
							local v841;
							v86[v88[4 - 2]] = v65[v88[8 - 5]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v841 = v88[324 - (125 + 197)];
							v840 = v86[v88[1000 - (339 + 658)]];
							v86[v841 + (2 - 1)] = v840;
							v86[v841] = v840[v88[4]];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[1350 - (743 + 605)]] = v64[v88[3 + 0]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[7 - 5]] = v86[v88[8 - 5]][v88[3 + 1]];
							v80 = v80 + (250 - (197 + 52));
							v88 = v76[v80];
							v841 = v88[3 - 1];
							do
								return v86[v841](v13(v86, v841 + (2 - 1), v88[3]));
							end
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v841 = v88[2 + 0];
							do
								return v13(v86, v841, v81);
							end
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							do
								return;
							end
						end
					elseif (v89 == (286 - 201)) then
						local v856;
						v86[v88[2]] = v86[v88[3]][v88[9 - 5]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[2 - 0]] = v88[1100 - (97 + 1000)];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[6 - 4]] = v88[1848 - (143 + 1702)];
						v80 = v80 + (1 - 0);
						v88 = v76[v80];
						v86[v88[2]] = v88[372 - (40 + 329)];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v856 = v88[1 + 1];
						v86[v856] = v86[v856](v13(v86, v856 + (1 - 0), v88[3]));
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[1 + 1]][v86[v88[68 - (9 + 56)]]] = v86[v88[588 - (531 + 53)]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[2]] = {};
						v80 = v80 + (774 - (89 + 684));
						v88 = v76[v80];
						v86[v88[2]] = v86[v88[3 + 0]][v88[4]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[1 + 1]] = v65[v88[3]];
						v80 = v80 + (1 - 0);
						v88 = v76[v80];
						v86[v88[2 + 0]] = v86[v88[3]][v88[4 + 0]];
					else
						local v874 = 613 - (238 + 375);
						local v875;
						local v876;
						while true do
							if (v874 == (1 + 0)) then
								for v3117 = 1 - 0, #v85 do
									local v3118 = 0;
									local v3119;
									while true do
										if (v3118 == (0 + 0)) then
											v3119 = v85[v3117];
											for v3141 = 0 - 0, #v3119 do
												local v3142 = v3119[v3141];
												local v3143 = v3142[2 - 1];
												local v3144 = v3142[5 - 3];
												if ((v3143 == v86) and (v3144 >= v875)) then
													local v3146 = 0 - 0;
													while true do
														if (v3146 == (0 - 0)) then
															v876[v3144] = v3143[v3144];
															v3142[1 - 0] = v876;
															break;
														end
													end
												end
											end
											break;
										end
									end
								end
								break;
							end
							if (v874 == (0 + 0)) then
								v875 = v88[1 + 1];
								v876 = {};
								v874 = 1 + 0;
							end
						end
					end
				elseif (v89 <= 101) then
					if (v89 <= (555 - (428 + 34))) then
						if (v89 <= (21 + 68)) then
							if ((v89 <= 87) or (2137 <= 1708)) then
								local v209 = 0;
								local v210;
								while true do
									if ((4030 > 2418) and (0 == v209)) then
										v210 = v88[2 - 0];
										v86[v210] = v86[v210](v86[v210 + (2 - 1)]);
										break;
									end
								end
							elseif ((v89 == (210 - 122)) or (4195 <= 1598)) then
								local v877 = 918 - (223 + 695);
								local v878;
								local v879;
								while true do
									if (v877 == (9 - 6)) then
										v80 = v80 + (512 - (329 + 182));
										v88 = v76[v80];
										v86[v88[1 + 1]] = v64[v88[4 - 1]];
										v877 = 1 + 3;
									end
									if ((4737 > 204) and (v877 == (1 + 0))) then
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v879 = v88[3 - 1];
										v877 = 2 - 0;
									end
									if (v877 == (1202 - (177 + 1023))) then
										v878 = v86[v88[5 - 2]];
										v86[v879 + 1 + 0] = v878;
										v86[v879] = v878[v88[8 - 4]];
										v877 = 1468 - (120 + 1345);
									end
									if ((342 - (8 + 329)) == v877) then
										v80 = v80 + (126 - (19 + 106));
										v88 = v76[v80];
										v879 = v88[7 - 5];
										v877 = 6;
									end
									if (v877 == 6) then
										do
											return v86[v879](v13(v86, v879 + (1 - 0), v88[3 + 0]));
										end
										v80 = v80 + 1;
										v88 = v76[v80];
										v877 = 20 - 13;
									end
									if (((20 - 12) == v877) or (2435 > 3226)) then
										v88 = v76[v80];
										do
											return;
										end
										break;
									end
									if (v877 == (15 - 11)) then
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[1 + 1]] = v86[v88[3]][v88[1507 - (957 + 546)]];
										v877 = 21 - 16;
									end
									if (v877 == (3 + 4)) then
										v879 = v88[1 + 1];
										do
											return v13(v86, v879, v81);
										end
										v80 = v80 + 1 + 0;
										v877 = 4 + 4;
									end
									if (v877 == (703 - (227 + 476))) then
										v878 = nil;
										v879 = nil;
										v86[v88[3 - 1]] = v65[v88[3]];
										v877 = 1 - 0;
									end
								end
							else
								local v880;
								v86[v88[2]] = v64[v88[3]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[4 - 1]][v88[5 - 1]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[956 - (166 + 788)]][v88[3]] = v86[v88[4]];
								v80 = v80 + (987 - (21 + 965));
								v88 = v76[v80];
								v86[v88[698 - (127 + 569)]] = v65[v88[3]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[3]][v88[4 + 0]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[1 + 1]] = v86[v88[4 - 1]][v88[4]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[4 - 2]][v88[2 + 1]] = v86[v88[1 + 3]];
								v80 = v80 + (1293 - (1162 + 130));
								v88 = v76[v80];
								v86[v88[3 - 1]][v88[3 + 0]] = v86[v88[8 - 4]];
								v80 = v80 + (937 - (889 + 47));
								v88 = v76[v80];
								v86[v88[2 + 0]] = v65[v88[1267 - (1153 + 111)]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[2 + 1]][v88[3 + 1]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[1 + 1]] = v64[v88[1 + 2]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[2 + 0]] = v86[v88[99 - (23 + 73)]][v88[289 - (26 + 259)]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v880 = v88[1 + 1];
								v86[v880] = v86[v880](v86[v880 + (1 - 0)]);
								v80 = v80 + (3 - 2);
								v88 = v76[v80];
								v86[v88[1631 - (1094 + 535)]] = v86[v88[1 + 2]];
								v80 = v80 + (1877 - (1554 + 322));
								v88 = v76[v80];
								v86[v88[1427 - (989 + 436)]] = v65[v88[1181 - (816 + 362)]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[4 - 2]] = v86[v88[11 - 8]][v88[7 - 3]];
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v86[v88[8 - 6]] = v88[1 + 2];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[765 - (86 + 677)]] = v88[3];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[1 + 1]] = v88[1029 - (263 + 763)];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[1 + 1]] = v88[861 - (649 + 209)];
								v80 = v80 + (4 - 3);
								v88 = v76[v80];
								v880 = v88[733 - (643 + 88)];
								v86[v880] = v86[v880](v13(v86, v880 + 1, v88[1772 - (54 + 1715)]));
								v80 = v80 + (3 - 2);
								v88 = v76[v80];
								v86[v88[5 - 3]][v88[3]] = v86[v88[8 - 4]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[1 + 1]] = v88[11 - 8];
							end
						elseif ((v89 <= (1474 - (132 + 1251))) or (3428 <= 2860)) then
							if (v89 > (90 + 0)) then
								local v918;
								v86[v88[4 - 2]] = v86[v88[3 + 0]][v88[462 - (185 + 273)]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[5 - 3]] = v88[2 + 1];
								v80 = v80 + (1225 - (361 + 863));
								v88 = v76[v80];
								v86[v88[5 - 3]] = v88[1330 - (443 + 884)];
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v86[v88[1 + 1]] = v88[3];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[2 - 0]] = v88[3];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v918 = v88[2 + 0];
								v86[v918] = v86[v918](v13(v86, v918 + 1, v88[6 - 3]));
								v80 = v80 + (748 - (16 + 731));
								v88 = v76[v80];
								v86[v88[1 + 1]][v88[2 + 1]] = v86[v88[4]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[2]] = v65[v88[763 - (527 + 233)]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[4 - 2]] = v86[v88[3 + 0]][v88[4]];
								v80 = v80 + (1786 - (1107 + 678));
								v88 = v76[v80];
								v86[v88[2 + 0]] = v88[3 + 0];
								v80 = v80 + (51 - (4 + 46));
								v88 = v76[v80];
								v86[v88[2]] = v88[11 - 8];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[3 - 1]] = v88[2 + 1];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[2 - 0]] = v88[1399 - (1262 + 134)];
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v918 = v88[2];
								v86[v918] = v86[v918](v13(v86, v918 + 1 + 0, v88[3 + 0]));
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[797 - (383 + 412)]][v88[3]] = v86[v88[4 + 0]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[1 + 1]] = v64[v88[3]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[1 + 2]][v88[4 + 0]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[2 + 0]][v88[8 - 5]] = v86[v88[4 - 0]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[5 - 3]][v88[1 + 2]] = v88[4];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[709 - (667 + 40)]][v88[1313 - (436 + 874)]] = v86[v88[1610 - (762 + 844)]];
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[4 - 2]] = v65[v88[1 + 2]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[479 - (209 + 267)]][v88[6 - 2]];
								v80 = v80 + (2 - 1);
								v88 = v76[v80];
								v86[v88[1713 - (1611 + 100)]] = v64[v88[3]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[786 - (14 + 770)]] = v86[v88[1787 - (1165 + 619)]][v88[5 - 1]];
								v80 = v80 + (382 - (229 + 152));
								v88 = v76[v80];
								v918 = v88[2];
								v86[v918] = v86[v918](v86[v918 + 1]);
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[196 - (107 + 87)]] = v86[v88[5 - 2]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v86[v88[2 + 0]] = v88[14 - 11];
							else
								local v959 = 0 - 0;
								local v960;
								while true do
									if ((6 + 0) == v959) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[16 - (13 + 1)]][v88[3]] = v86[v88[4]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v959 = 7;
									end
									if ((v959 == (5 + 0)) or (1277 >= 3501)) then
										v88 = v76[v80];
										v86[v88[2 + 0]] = v86[v88[1061 - (987 + 71)]][v88[4]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2]][v88[8 - 5]] = v86[v88[4 - 0]];
										v959 = 6;
									end
									if ((7 == v959) or (1935 > 2192)) then
										v86[v88[701 - (514 + 185)]] = v88[1 + 2];
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v80 = v88[11 - 8];
										break;
									end
									if ((v959 == (1507 - (771 + 733))) or (4715 < 767)) then
										v88 = v76[v80];
										v960 = v88[3 - 1];
										v86[v960] = v86[v960](v86[v960 + (1 - 0)]);
										v80 = v80 + (1168 - (407 + 760));
										v88 = v76[v80];
										v959 = 3 + 1;
									end
									if ((1319 == 1319) and (v959 == 2)) then
										v86[v88[1 + 1]] = v64[v88[3]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[1856 - (169 + 1685)]] = v86[v88[1 + 2]][v88[395 - (41 + 350)]];
										v80 = v80 + (2 - 1);
										v959 = 7 - 4;
									end
									if (v959 == (4 - 3)) then
										v80 = v80 + (2 - 1);
										v88 = v76[v80];
										v86[v88[2 + 0]] = v86[v88[890 - (790 + 97)]][v88[18 - 14]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v959 = 1 + 1;
									end
									if ((v959 == (2 + 2)) or (4502 <= 868)) then
										v86[v88[2]] = v86[v88[3]];
										v80 = v80 + (246 - (235 + 10));
										v88 = v76[v80];
										v86[v88[2]] = v64[v88[3 + 0]];
										v80 = v80 + 1;
										v959 = 10 - 5;
									end
									if ((3735 >= 172) and ((1183 - (887 + 296)) == v959)) then
										v960 = nil;
										v86[v88[2]][v88[3]] = v86[v88[1049 - (512 + 533)]];
										v80 = v80 + (1425 - (662 + 762));
										v88 = v76[v80];
										v86[v88[679 - (334 + 343)]] = v65[v88[10 - 7]];
										v959 = 1;
									end
								end
							end
						elseif (v89 == (581 - (198 + 291))) then
							do
								return;
							end
						else
							local v961;
							v86[v88[1 + 1]] = v86[v88[3]][v88[578 - (141 + 433)]];
							v80 = v80 + (4 - 3);
							v88 = v76[v80];
							v86[v88[2 + 0]] = v64[v88[780 - (227 + 550)]];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[5 - 3]] = v86[v88[106 - (72 + 31)]][v88[352 - (89 + 259)]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v961 = v88[2 + 0];
							v86[v961] = v86[v961](v86[v961 + 1]);
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[3 - 1]] = v86[v88[2 + 1]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[3 - 1]] = v65[v88[3]];
							v80 = v80 + (1404 - (1333 + 70));
							v88 = v76[v80];
							v86[v88[1834 - (701 + 1131)]] = v86[v88[130 - (55 + 72)]][v88[160 - (99 + 57)]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2 - 0]] = v88[3];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[1581 - (1243 + 336)]] = v88[3];
							v80 = v80 + (1330 - (774 + 555));
							v88 = v76[v80];
							v86[v88[1 + 1]] = v88[802 - (150 + 649)];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2 - 0]] = v88[5 - 2];
							v80 = v80 + (1985 - (1122 + 862));
							v88 = v76[v80];
							v961 = v88[2];
							v86[v961] = v86[v961](v13(v86, v961 + (1 - 0), v88[1 + 2]));
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[2 + 0]][v88[3]] = v86[v88[4]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[745 - (549 + 194)]] = v65[v88[2 + 1]];
							v80 = v80 + (3 - 2);
							v88 = v76[v80];
							v86[v88[2]] = v86[v88[1 + 2]][v88[6 - 2]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[7 - 5]] = v88[1706 - (453 + 1250)];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[2 + 0]] = v88[578 - (203 + 372)];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[5 - 3]] = v88[3];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]] = v88[1385 - (978 + 404)];
							v80 = v80 + 1;
							v88 = v76[v80];
							v961 = v88[2];
							v86[v961] = v86[v961](v13(v86, v961 + 1, v88[3]));
							v80 = v80 + (3 - 2);
							v88 = v76[v80];
							v86[v88[2 + 0]][v88[321 - (56 + 262)]] = v86[v88[2 + 2]];
							v80 = v80 + (115 - (108 + 6));
							v88 = v76[v80];
							v86[v88[2]] = v64[v88[2 + 1]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2 + 0]] = v86[v88[1955 - (653 + 1299)]][v88[4 + 0]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[1 + 1]][v88[6 - 3]] = v86[v88[1926 - (1042 + 880)]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[1 + 1]][v88[1005 - (16 + 986)]] = v88[1222 - (700 + 518)];
							v80 = v80 + (3 - 2);
							v88 = v76[v80];
							v86[v88[2 - 0]] = v64[v88[1514 - (617 + 894)]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[3 - 1]] = v86[v88[461 - (271 + 187)]][v88[4]];
							v80 = v80 + (1585 - (731 + 853));
							v88 = v76[v80];
							v86[v88[2]][v88[10 - 7]] = v86[v88[4]];
							v80 = v80 + (1522 - (199 + 1322));
							v88 = v76[v80];
							v86[v88[2]] = v88[5 - 2];
						end
					elseif (v89 <= (51 + 46)) then
						if (v89 <= 95) then
							if (v89 > (1754 - (1291 + 369))) then
								local v1003 = 0 + 0;
								local v1004;
								while true do
									if ((v1003 == (4 + 4)) or (4844 <= 3394)) then
										v88 = v76[v80];
										v86[v88[2 + 0]] = v86[v88[1 + 2]][v88[4]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[687 - (561 + 124)]] = v88[3];
										v80 = v80 + 1;
										v88 = v76[v80];
										v1003 = 9 + 0;
									end
									if (v1003 == (856 - (25 + 828))) then
										v88 = v76[v80];
										v1004 = v88[2];
										v86[v1004] = v86[v1004](v86[v1004 + (2 - 1)]);
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[592 - (99 + 491)]] = v86[v88[51 - (18 + 30)]];
										v80 = v80 + (2 - 1);
										v1003 = 4;
									end
									if ((2003 <= 3182) and (v1003 == 7)) then
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[2 - 0]][v88[1 + 2]] = v86[v88[13 - 9]];
										v80 = v80 + (733 - (501 + 231));
										v88 = v76[v80];
										v86[v88[2 + 0]] = v65[v88[1701 - (470 + 1228)]];
										v80 = v80 + 1 + 0;
										v1003 = 8;
									end
									if ((4436 >= 3624) and (v1003 == 2)) then
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[688 - (537 + 149)]] = v64[v88[3 - 0]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[2 + 0]] = v86[v88[5 - 2]][v88[12 - 8]];
										v80 = v80 + (2 - 1);
										v1003 = 3;
									end
									if ((4444 >= 1701) and (v1003 == (5 + 1))) then
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[1 + 1]] = v88[3];
										v80 = v80 + 1;
										v88 = v76[v80];
										v1004 = v88[2 + 0];
										v86[v1004] = v86[v1004](v13(v86, v1004 + 1 + 0, v88[3 + 0]));
										v1003 = 1 + 6;
									end
									if (v1003 == 1) then
										v86[v88[2 + 0]][v88[3]] = v86[v88[6 - 2]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[1 + 1]] = v65[v88[582 - (134 + 445)]];
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v86[v88[2]] = v86[v88[3]][v88[4 + 0]];
										v1003 = 2 + 0;
									end
									if ((v1003 == (42 - 31)) or (3990 < 1842)) then
										v80 = v80 + (261 - (36 + 224));
										v88 = v76[v80];
										v86[v88[1862 - (1033 + 827)]][v88[1849 - (1002 + 844)]] = v88[4];
										v80 = v80 + (1351 - (1126 + 224));
										v88 = v76[v80];
										v86[v88[1 + 1]] = v88[3];
										break;
									end
									if (v1003 == (4 + 0)) then
										v88 = v76[v80];
										v86[v88[6 - 4]] = v65[v88[67 - (48 + 16)]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[9 - 7]] = v86[v88[3]][v88[4]];
										v80 = v80 + (3 - 2);
										v88 = v76[v80];
										v1003 = 2 + 3;
									end
									if (v1003 == (1089 - (910 + 179))) then
										v1004 = nil;
										v86[v88[3 - 1]] = v86[v88[5 - 2]][v88[1383 - (933 + 446)]];
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[1 + 1]][v88[1527 - (248 + 1276)]] = v86[v88[4 + 0]];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v1003 = 1;
									end
									if (5 == v1003) then
										v86[v88[6 - 4]] = v88[9 - 6];
										v80 = v80 + (1546 - (151 + 1394));
										v88 = v76[v80];
										v86[v88[2]] = v88[3];
										v80 = v80 + (945 - (929 + 15));
										v88 = v76[v80];
										v86[v88[2]] = v88[1999 - (1173 + 823)];
										v1003 = 9 - 3;
									end
									if (v1003 == (1786 - (482 + 1294))) then
										v80 = v80 + (1 - 0);
										v88 = v76[v80];
										v1004 = v88[2];
										v86[v1004] = v86[v1004](v13(v86, v1004 + 1, v88[2 + 1]));
										v80 = v80 + 1;
										v88 = v76[v80];
										v86[v88[1308 - (1125 + 181)]][v88[3]] = v86[v88[11 - 7]];
										v1003 = 7 + 4;
									end
									if (9 == v1003) then
										v86[v88[2 - 0]] = v88[1192 - (626 + 563)];
										v80 = v80 + (1251 - (153 + 1097));
										v88 = v76[v80];
										v86[v88[6 - 4]] = v88[3];
										v80 = v80 + 1 + 0;
										v88 = v76[v80];
										v86[v88[5 - 3]] = v88[2 + 1];
										v1003 = 8 + 2;
									end
								end
							else
								for v1525 = v88[1 + 1], v88[3 + 0] do
									v86[v1525] = nil;
								end
							end
						elseif (v89 > (84 + 12)) then
							local v1005 = v88[2];
							local v1006, v1007 = v79(v86[v1005](v13(v86, v1005 + (1158 - (199 + 958)), v88[2 + 1])));
							v81 = (v1007 + v1005) - 1;
							local v1008 = 0 - 0;
							for v1527 = v1005, v81 do
								local v1528 = 0 - 0;
								while true do
									if (v1528 == 0) then
										v1008 = v1008 + (1177 - (1169 + 7));
										v86[v1527] = v1006[v1008];
										break;
									end
								end
							end
						elseif ((v88[1875 - (751 + 1122)] == v86[v88[1 + 3]]) or (3654 > 3853)) then
							v80 = v80 + 1 + 0;
						else
							v80 = v88[1 + 2];
						end
					elseif (v89 <= (19 + 80)) then
						if (v89 > (166 - 68)) then
							local v1009 = 0;
							local v1010;
							local v1011;
							while true do
								if (v1009 == (1186 - (589 + 592))) then
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[3]][v88[7 - 3]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v1011 = v88[26 - (13 + 11)];
									v86[v1011] = v86[v1011](v13(v86, v1011 + 1 + 0, v88[1 + 2]));
									v80 = v80 + (1261 - (684 + 576));
									v1009 = 3 + 3;
								end
								if ((4017 >= 2164) and (v1009 == (9 - 5))) then
									v88 = v76[v80];
									v1011 = v88[2];
									v86[v1011] = v86[v1011](v13(v86, v1011 + 1 + 0, v88[1 + 2]));
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[2 + 0]] = v64[v88[3 + 0]];
									v80 = v80 + 1 + 0;
									v1009 = 1 + 4;
								end
								if (v1009 == (4 + 9)) then
									v80 = v80 + (1849 - (230 + 1618));
									v88 = v76[v80];
									v1011 = v88[2 + 0];
									v1010 = v86[v88[3]];
									v86[v1011 + 1 + 0] = v1010;
									v86[v1011] = v1010[v88[4 + 0]];
									break;
								end
								if (v1009 == 11) then
									v86[v88[205 - (131 + 72)]] = v64[v88[2 + 1]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[206 - (144 + 60)]] = v86[v88[12 - 9]][v88[6 - 2]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v1011 = v88[9 - 7];
									v1009 = 1 + 11;
								end
								if ((2804 > 1147) and (v1009 == 9)) then
									v88 = v76[v80];
									v86[v88[1924 - (523 + 1399)]] = v88[3];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[406 - (72 + 332)]] = v88[3];
									v80 = v80 + 1;
									v88 = v76[v80];
									v1009 = 986 - (269 + 707);
								end
								if (v1009 == (5 - 2)) then
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[132 - (123 + 7)]] = v88[3 + 0];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[9 - 7]] = v88[7 - 4];
									v80 = v80 + (1089 - (38 + 1050));
									v1009 = 4;
								end
								if ((v1009 == (3 + 4)) or (3106 <= 2293)) then
									v86[v88[2]] = v64[v88[2 + 1]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[825 - (426 + 397)]] = v86[v88[3]][v88[1410 - (751 + 655)]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[3 - 1]] = v65[v88[1 + 2]];
									v1009 = 1253 - (39 + 1206);
								end
								if ((1 == v1009) or (1345 < 838)) then
									v88 = v76[v80];
									v86[v88[5 - 3]] = v86[v88[844 - (566 + 275)]][v88[939 - (167 + 768)]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2 - 0]] = v65[v88[1 + 2]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v1009 = 2 - 0;
								end
								if (v1009 == (17 - (8 + 7))) then
									v86[v88[1685 - (1510 + 173)]] = v86[v88[3]][v88[4]];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[256 - (30 + 223)];
									v80 = v80 + (1257 - (300 + 956));
									v88 = v76[v80];
									v86[v88[124 - (22 + 100)]] = v88[6 - 3];
									v1009 = 285 - (47 + 235);
								end
								if (v1009 == (39 - 27)) then
									v86[v1011] = v86[v1011](v13(v86, v1011 + 1 + 0, v88[489 - (21 + 465)]));
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v86[v88[1 + 2]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 - 0]] = v86[v88[1220 - (553 + 664)]][v88[4]];
									v1009 = 13;
								end
								if (v1009 == 0) then
									v1010 = nil;
									v1011 = nil;
									v86[v88[2]] = v86[v88[3]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[80 - (73 + 5)]] = v64[v88[1718 - (1128 + 587)]];
									v80 = v80 + 1;
									v1009 = 1;
								end
								if (v1009 == (30 - 22)) then
									v80 = v80 + (691 - (558 + 132));
									v88 = v76[v80];
									v86[v88[5 - 3]] = v86[v88[3]][v88[11 - 7]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v88[2 + 1];
									v80 = v80 + 1 + 0;
									v1009 = 14 - 5;
								end
								if ((12 < 783) and (v1009 == 6)) then
									v88 = v76[v80];
									v86[v88[1 + 1]] = v86[v88[3]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v86[v88[3]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v1009 = 7;
								end
								if ((v1009 == (781 - (294 + 477))) or (2281 > 4346)) then
									v86[v88[1 + 1]] = v88[6 - 3];
									v80 = v80 + 1;
									v88 = v76[v80];
									v1011 = v88[3 - 1];
									v86[v1011] = v86[v1011](v13(v86, v1011 + 1 + 0, v88[3 + 0]));
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v1009 = 993 - (97 + 885);
								end
							end
						else
							v86[v88[2]] = v86[v88[2 + 1]][v88[4]];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[367 - (271 + 94)]][v88[1606 - (777 + 826)]] = v86[v88[4]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]][v88[2 + 1]] = v88[1359 - (117 + 1238)];
							v80 = v80 + (1716 - (686 + 1029));
							v88 = v76[v80];
							v86[v88[1358 - (1074 + 282)]] = v64[v88[1620 - (1359 + 258)]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]] = v86[v88[3]][v88[8 - 4]];
							v80 = v80 + (1936 - (1730 + 205));
							v88 = v76[v80];
							v86[v88[530 - (67 + 461)]][v88[4 - 1]] = v86[v88[5 - 1]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[4 - 2]][v88[1 + 2]] = v88[633 - (129 + 500)];
							v80 = v80 + (1712 - (1157 + 554));
							v88 = v76[v80];
							v86[v88[2 - 0]] = v65[v88[610 - (82 + 525)]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2 + 0]] = v86[v88[3]][v88[8 - 4]];
							v80 = v80 + (1624 - (948 + 675));
							v88 = v76[v80];
							v86[v88[1 + 1]] = v86[v88[3 + 0]][v88[4]];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[855 - (406 + 447)]][v88[120 - (91 + 26)]] = v86[v88[13 - 9]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[988 - (968 + 18)]][v88[3 + 0]] = v86[v88[4 + 0]];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v86[v88[269 - (172 + 95)]] = v88[3];
						end
					elseif (v89 > (334 - 234)) then
						local v1037;
						v86[v88[267 - (260 + 5)]] = v86[v88[8 - 5]][v88[4]];
						v80 = v80 + (820 - (265 + 554));
						v88 = v76[v80];
						v86[v88[1573 - (1440 + 131)]] = v64[v88[8 - 5]];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[1397 - (253 + 1142)]] = v86[v88[256 - (133 + 120)]][v88[8 - 4]];
						v80 = v80 + (1957 - (809 + 1147));
						v88 = v76[v80];
						v1037 = v88[499 - (178 + 319)];
						v86[v1037] = v86[v1037](v86[v1037 + (1 - 0)]);
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[1272 - (1255 + 15)]] = v86[v88[1545 - (1221 + 321)]];
						v80 = v80 + (2 - 1);
						v88 = v76[v80];
						v86[v88[2 + 0]] = v65[v88[11 - 8]];
						v80 = v80 + (3 - 2);
						v88 = v76[v80];
						v86[v88[2]] = v86[v88[2 + 1]][v88[4]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[3 - 1]] = v88[410 - (204 + 203)];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[80 - (48 + 30)]] = v88[2 + 1];
						v80 = v80 + (1965 - (1472 + 492));
						v88 = v76[v80];
						v86[v88[5 - 3]] = v88[2 + 1];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[2]] = v88[3];
						v80 = v80 + (612 - (258 + 353));
						v88 = v76[v80];
						v1037 = v88[2];
						v86[v1037] = v86[v1037](v13(v86, v1037 + (1995 - (1382 + 612)), v88[3]));
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[1 + 1]][v88[1 + 2]] = v86[v88[11 - 7]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[121 - (35 + 84)]] = v65[v88[3]];
						v80 = v80 + (216 - (75 + 140));
						v88 = v76[v80];
						v86[v88[2]] = v86[v88[3]][v88[14 - 10]];
						v80 = v80 + (1800 - (923 + 876));
						v88 = v76[v80];
						v86[v88[5 - 3]] = v88[815 - (284 + 528)];
						v80 = v80 + (1020 - (867 + 152));
						v88 = v76[v80];
						v86[v88[1108 - (709 + 397)]] = v88[10 - 7];
						v80 = v80 + (37 - (21 + 15));
						v88 = v76[v80];
						v86[v88[2 - 0]] = v88[3];
						v80 = v80 + (1 - 0);
						v88 = v76[v80];
						v86[v88[2]] = v88[1 + 2];
						v80 = v80 + (2 - 1);
						v88 = v76[v80];
						v1037 = v88[4 - 2];
						v86[v1037] = v86[v1037](v13(v86, v1037 + 1 + 0, v88[138 - (97 + 38)]));
						v80 = v80 + (81 - (52 + 28));
						v88 = v76[v80];
						v86[v88[2]][v88[2 + 1]] = v86[v88[853 - (59 + 790)]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[1 + 1]][v88[943 - (467 + 473)]] = v88[19 - 15];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[2]][v88[3]] = v86[v88[10 - 6]];
						v80 = v80 + (2 - 1);
						v88 = v76[v80];
						for v1529 = v88[4 - 2], v88[3] do
							v86[v1529] = nil;
						end
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[4 - 2]] = v88[3];
					else
						local v1078 = 0 - 0;
						local v1079;
						local v1080;
						while true do
							if (3 == v1078) then
								v80 = v80 + (1 - 0);
								v88 = v76[v80];
								v86[v88[2]] = v86[v88[3]][v88[4]];
								v80 = v80 + 1 + 0;
								v1078 = 1 + 3;
							end
							if ((v1078 == 6) or (2429 <= 762)) then
								v80 = v88[3];
								break;
							end
							if (v1078 == (1 + 1)) then
								v86[v1080] = v1079[v88[241 - (58 + 179)]];
								v80 = v80 + 1;
								v88 = v76[v80];
								v86[v88[4 - 2]] = v64[v88[1256 - (677 + 576)]];
								v1078 = 2 + 1;
							end
							if (v1078 == (8 - 4)) then
								v88 = v76[v80];
								v1080 = v88[222 - (88 + 132)];
								v86[v1080] = v86[v1080](v13(v86, v1080 + 1 + 0, v88[3]));
								v80 = v80 + (4 - 3);
								v1078 = 17 - 12;
							end
							if (v1078 == (296 - (12 + 279))) then
								v88 = v76[v80];
								v86[v88[3 - 1]][v88[1 + 2]] = v86[v88[951 - (652 + 295)]];
								v80 = v80 + 1 + 0;
								v88 = v76[v80];
								v1078 = 4 + 2;
							end
							if (v1078 == (990 - (848 + 141))) then
								v88 = v76[v80];
								v1080 = v88[742 - (372 + 368)];
								v1079 = v86[v88[2 + 1]];
								v86[v1080 + 1] = v1079;
								v1078 = 1132 - (542 + 588);
							end
							if (((818 - (6 + 812)) == v1078) or (2508 > 3169)) then
								v1079 = nil;
								v1080 = nil;
								v86[v88[1707 - (1599 + 106)]] = v86[v88[3]][v88[11 - 7]];
								v80 = v80 + 1 + 0;
								v1078 = 1 + 0;
							end
						end
					end
				elseif (v89 <= (409 - 301)) then
					if (v89 <= (180 - 76)) then
						if (v89 <= (17 + 85)) then
							v86[v88[1 + 1]] = v65[v88[3 + 0]];
						elseif (v89 == (24 + 79)) then
							local v1081 = 0;
							local v1082;
							while true do
								if (v1081 == 4) then
									v86[v88[2]] = v88[1 + 2];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v1082 = v88[1931 - (1690 + 239)];
									v86[v1082] = v86[v1082](v13(v86, v1082 + (3 - 2), v88[3]));
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[6 - 3]] = v86[v88[9 - 5]];
									v1081 = 5;
								end
								if ((v1081 == (7 + 3)) or (4359 == 4783)) then
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[3]][v88[1872 - (1736 + 132)]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[6 - 4]][v88[3]] = v86[v88[18 - 14]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v1081 = 11;
								end
								if (((1 + 6) == v1081) or (1302 >= 2955)) then
									v88 = v76[v80];
									v86[v88[34 - (27 + 5)]] = v88[1 + 2];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v1082 = v88[1 + 1];
									v86[v1082] = v86[v1082](v13(v86, v1082 + 1 + 0, v88[3]));
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v1081 = 8;
								end
								if ((v1081 == (1120 - (771 + 346))) or (3094 == 3369)) then
									v80 = v80 + (1635 - (1577 + 57));
									v88 = v76[v80];
									v86[v88[2]] = v88[5 - 2];
									v80 = v80 + (1081 - (684 + 396));
									v88 = v76[v80];
									v86[v88[5 - 3]] = v88[3];
									v80 = v80 + (1197 - (700 + 496));
									v88 = v76[v80];
									v1081 = 4 + 0;
								end
								if (v1081 == (261 - (65 + 187))) then
									v88 = v76[v80];
									v86[v88[941 - (827 + 112)]] = v86[v88[3 + 0]][v88[10 - 6]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[9 - 7]][v88[1 + 2]] = v86[v88[1 + 3]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1198 - (551 + 645)]] = v64[v88[346 - (166 + 177)]];
									v1081 = 10;
								end
								if (8 == v1081) then
									v86[v88[1858 - (1361 + 495)]][v88[7 - 4]] = v86[v88[3 + 1]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[2]][v88[3 + 0]] = v88[228 - (148 + 76)];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[7 - 5]] = v64[v88[3]];
									v80 = v80 + (2 - 1);
									v1081 = 6 + 3;
								end
								if (v1081 == (1753 - (735 + 1007))) then
									v86[v88[281 - (111 + 168)]] = v88[2 + 1];
									break;
								end
								if ((1200 >= 842) and (5 == v1081)) then
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1 + 1]] = v65[v88[6 - 3]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2 + 0]] = v86[v88[1 + 2]][v88[4]];
									v80 = v80 + (4 - 3);
									v88 = v76[v80];
									v1081 = 4 + 2;
								end
								if (v1081 == (938 - (147 + 785))) then
									v86[v88[2]] = v88[669 - (483 + 183)];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[2 + 0]] = v88[1914 - (1790 + 121)];
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v86[v88[1541 - (259 + 1280)]] = v88[1587 - (160 + 1424)];
									v80 = v80 + 1 + 0;
									v1081 = 7;
								end
								if (v1081 == (0 + 0)) then
									v1082 = nil;
									v86[v88[772 - (479 + 291)]] = v86[v88[3]][v88[7 - 3]];
									v80 = v80 + (972 - (569 + 402));
									v88 = v76[v80];
									v86[v88[1307 - (635 + 670)]] = v64[v88[3]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[7 - 5]] = v86[v88[601 - (42 + 556)]][v88[1405 - (1246 + 155)]];
									v1081 = 733 - (31 + 701);
								end
								if (v1081 == 1) then
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v1082 = v88[501 - (393 + 106)];
									v86[v1082] = v86[v1082](v86[v1082 + (1172 - (727 + 444))]);
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[1 + 1]] = v86[v88[656 - (269 + 384)]];
									v80 = v80 + (1570 - (598 + 971));
									v1081 = 1 + 1;
								end
								if ((4917 >= 1468) and (v1081 == (6 - 4))) then
									v88 = v76[v80];
									v86[v88[2]] = v65[v88[3]];
									v80 = v80 + (4 - 3);
									v88 = v76[v80];
									v86[v88[5 - 3]] = v86[v88[1448 - (800 + 645)]][v88[1 + 3]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[792 - (687 + 103)]] = v88[1165 - (142 + 1020)];
									v1081 = 6 - 3;
								end
							end
						else
							local v1083 = v88[1 + 1];
							local v1084 = v86[v1083 + (515 - (306 + 207))];
							local v1085 = v86[v1083] + v1084;
							v86[v1083] = v1085;
							if (v1084 > (1404 - (112 + 1292))) then
								if (v1085 <= v86[v1083 + 1 + 0]) then
									v80 = v88[955 - (587 + 365)];
									v86[v1083 + 3] = v1085;
								end
							elseif ((v1085 >= v86[v1083 + 1]) or (2794 <= 878)) then
								v80 = v88[1718 - (829 + 886)];
								v86[v1083 + (7 - 4)] = v1085;
							end
						end
					elseif (v89 <= (25 + 81)) then
						if (v89 > (416 - 311)) then
							local v1087 = v77[v88[3]];
							local v1088;
							local v1089 = {};
							v1088 = v10({}, {__index=function(v1531, v1532)
								local v1533 = 0;
								local v1534;
								while true do
									if (v1533 == 0) then
										v1534 = v1089[v1532];
										return v1534[3 - 2][v1534[2 + 0]];
									end
								end
							end,__newindex=function(v1535, v1536, v1537)
								local v1538 = v1089[v1536];
								v1538[1 + 0][v1538[2 - 0]] = v1537;
							end});
							for v1540 = 978 - (613 + 364), v88[4 + 0] do
								local v1541 = 0 + 0;
								local v1542;
								while true do
									if ((0 + 0) == v1541) then
										v80 = v80 + (2 - 1);
										v1542 = v76[v80];
										v1541 = 3 - 2;
									end
									if ((2 - 1) == v1541) then
										if (v1542[1 + 0] == (2018 - (1467 + 472))) then
											v1089[v1540 - (1 - 0)] = {v86,v1542[3]};
										else
											v1089[v1540 - (1 + 0)] = {v64,v1542[7 - 4]};
										end
										v85[#v85 + 1 + 0] = v1089;
										break;
									end
								end
							end
							v86[v88[2 - 0]] = v29(v1087, v1088, v65);
						else
							v86[v88[3 - 1]] = v86[v88[5 - 2]][v88[2 + 2]];
							v80 = v80 + 1;
							v88 = v76[v80];
							v86[v88[2]][v86[v88[2 + 1]]] = v86[v88[1 + 3]];
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							for v1543 = v88[1107 - (924 + 181)], v88[800 - (263 + 534)] do
								v86[v1543] = nil;
							end
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2]] = v88[3 + 0] ~= (0 - 0);
							v80 = v80 + (2 - 1);
							v88 = v76[v80];
							v86[v88[2 + 0]] = v88[710 - (562 + 145)] ~= (0 + 0);
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[1 + 1]] = v88[3];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							for v1545 = v88[1 + 1], v88[5 - 2] do
								v86[v1545] = nil;
							end
						end
					elseif (v89 == (106 + 1)) then
						local v1100 = v88[2];
						v86[v1100] = v86[v1100](v13(v86, v1100 + 1, v88[13 - 10]));
					else
						local v1102;
						v86[v88[1 + 1]] = v86[v88[2 + 1]][v88[4]];
						v80 = v80 + (1877 - (1459 + 417));
						v88 = v76[v80];
						v86[v88[2]] = v88[289 - (194 + 92)];
						v80 = v80 + (1386 - (1057 + 328));
						v88 = v76[v80];
						v86[v88[5 - 3]] = v88[14 - 11];
						v80 = v80 + (533 - (5 + 527));
						v88 = v76[v80];
						v86[v88[2 + 0]] = v88[783 - (342 + 438)];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[1 + 1]] = v88[3];
						v80 = v80 + 1;
						v88 = v76[v80];
						v1102 = v88[2];
						v86[v1102] = v86[v1102](v13(v86, v1102 + 1 + 0, v88[3]));
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[3 - 1]][v88[3]] = v86[v88[4]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[2]][v88[1 + 2]] = v88[7 - 3];
						v80 = v80 + (1 - 0);
						v88 = v76[v80];
						v86[v88[14 - (6 + 6)]] = v64[v88[8 - 5]];
						v80 = v80 + (2 - 1);
						v88 = v76[v80];
						v86[v88[1 + 1]] = v86[v88[1256 - (206 + 1047)]][v88[1116 - (470 + 642)]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[1069 - (552 + 515)]][v88[3 + 0]] = v86[v88[4 + 0]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[2]] = v64[v88[2 + 1]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[2 + 0]] = v86[v88[1054 - (701 + 350)]][v88[3 + 1]];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[2 + 0]][v88[2 + 1]] = v86[v88[6 - 2]];
						v80 = v80 + (3 - 2);
						v88 = v76[v80];
						v86[v88[2 + 0]][v88[7 - 4]] = v88[4];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[2 + 0]] = v64[v88[11 - 8]];
						v80 = v80 + (1347 - (281 + 1065));
						v88 = v76[v80];
						v86[v88[9 - 7]] = v86[v88[11 - 8]][v88[1215 - (1114 + 97)]];
						v80 = v80 + (1 - 0);
						v88 = v76[v80];
						v86[v88[1915 - (279 + 1634)]][v88[3]] = v86[v88[4]];
						v80 = v80 + (1281 - (1213 + 67));
						v88 = v76[v80];
						v86[v88[193 - (65 + 126)]] = v88[3 + 0];
					end
				elseif (v89 <= (1197 - (189 + 896))) then
					if (v89 <= (11 + 99)) then
						if (v89 > (2072 - (1872 + 91))) then
							local v1136 = 0 - 0;
							local v1137;
							while true do
								if (v1136 == (2 + 0)) then
									v88 = v76[v80];
									v86[v88[6 - 4]] = v88[3 + 0];
									v80 = v80 + 1 + 0;
									v1136 = 3;
								end
								if (v1136 == (0 - 0)) then
									v1137 = nil;
									v86[v88[78 - (22 + 54)]] = v64[v88[6 - 3]];
									v80 = v80 + (2 - 1);
									v1136 = 1 + 0;
								end
								if ((2398 <= 3265) and (v1136 == (11 - 8))) then
									v88 = v76[v80];
									v1137 = v88[1536 - (553 + 981)];
									v86[v1137](v13(v86, v1137 + 1, v88[3 + 0]));
									v1136 = 3 + 1;
								end
								if (v1136 == (1 + 0)) then
									v88 = v76[v80];
									v86[v88[5 - 3]] = v86[v88[3 - 0]][v88[1901 - (1320 + 577)]];
									v80 = v80 + (850 - (667 + 182));
									v1136 = 1290 - (1115 + 173);
								end
								if (v1136 == (6 - 2)) then
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v80 = v88[1758 - (1375 + 380)];
									break;
								end
							end
						else
							local v1138 = 0 + 0;
							local v1139;
							while true do
								if (v1138 == (39 - (12 + 14))) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + (2 - 1), v88[6 - 3]));
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[5 - 3]][v88[4 - 1]] = v86[v88[4]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 - 0]] = v86[v88[734 - (354 + 377)]];
									v80 = v80 + (4 - 3);
									v1138 = 37 - 23;
								end
								if (v1138 == 18) then
									v88 = v76[v80];
									v86[v88[2]] = v88[1985 - (263 + 1719)];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2]] = v88[3];
									v80 = v80 + (360 - (335 + 24));
									v88 = v76[v80];
									v1139 = v88[953 - (882 + 69)];
									v1138 = 1705 - (657 + 1029);
								end
								if ((901 == 901) and (v1138 == 1)) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + (1201 - (685 + 515)), v88[1641 - (745 + 893)]));
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1 + 1]][v88[775 - (274 + 498)]] = v86[v88[1 + 3]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1608 - (1035 + 571)]] = v86[v88[2 + 1]];
									v80 = v80 + 1 + 0;
									v1138 = 2;
								end
								if ((2030 > 228) and (v1138 == (113 - 82))) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + 1, v88[8 - 5]));
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2 + 0]][v88[3]] = v86[v88[4]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[5 - 3]] = v86[v88[227 - (109 + 115)]];
									break;
								end
								if ((581 <= 4572) and ((1428 - (1047 + 352)) == v1138)) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + (1766 - (852 + 913)), v88[3]));
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2]][v88[1348 - (384 + 961)]] = v86[v88[4]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[5 - 3]] = v86[v88[3]];
									v80 = v80 + 1;
									v1138 = 109 - 79;
								end
								if (v1138 == (618 - (591 + 1))) then
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[1473 - (218 + 1252)];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[358 - (321 + 35)]] = v88[397 - (239 + 155)];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v1139 = v88[44 - (41 + 1)];
									v1138 = 27;
								end
								if ((156 < 4237) and (v1138 == (223 - (80 + 120)))) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + 1, v88[3 + 0]));
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[1 + 1]][v88[3 + 0]] = v86[v88[19 - 15]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[3]];
									v80 = v80 + (4 - 3);
									v1138 = 39 - 15;
								end
								if ((v1138 == (4 + 4)) or (251 > 425)) then
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[1 + 2];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1228 - (165 + 1061)]] = v88[3];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v1139 = v88[2];
									v1138 = 8 + 1;
								end
								if (v1138 == 6) then
									v88 = v76[v80];
									v86[v88[1645 - (596 + 1047)]] = v88[1 + 2];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[2]] = v88[3 - 0];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v1139 = v88[739 - (185 + 552)];
									v1138 = 4 + 3;
								end
								if ((v1138 == (620 - (507 + 94))) or (3584 < 972)) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + (4 - 3), v88[1 + 2]));
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2]][v88[4 - 1]] = v86[v88[1741 - (569 + 1168)]];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[3 - 1]] = v86[v88[3]];
									v80 = v80 + (352 - (118 + 233));
									v1138 = 364 - (279 + 65);
								end
								if ((1834 > 1047) and (v1138 == 10)) then
									v88 = v76[v80];
									v86[v88[2 - 0]] = v88[4 - 1];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[5 - 3]] = v88[3];
									v80 = v80 + (1819 - (1414 + 404));
									v88 = v76[v80];
									v1139 = v88[758 - (347 + 409)];
									v1138 = 11;
								end
								if ((851 == 851) and (v1138 == (6 + 3))) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + 1 + 0, v88[3]));
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1 + 1]][v88[1581 - (420 + 1158)]] = v86[v88[9 - 5]];
									v80 = v80 + (612 - (406 + 205));
									v88 = v76[v80];
									v86[v88[6 - 4]] = v86[v88[2 + 1]];
									v80 = v80 + 1 + 0;
									v1138 = 24 - 14;
								end
								if (v1138 == (75 - (28 + 33))) then
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[1010 - (858 + 149)];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[4 - 1];
									v80 = v80 + (1508 - (829 + 678));
									v88 = v76[v80];
									v1139 = v88[2 + 0];
									v1138 = 1231 - (143 + 1073);
								end
								if (v1138 == (1843 - (898 + 917))) then
									v88 = v76[v80];
									v86[v88[2]] = v88[5 - 2];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[1471 - (882 + 587)]] = v88[3];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v1139 = v88[1 + 1];
									v1138 = 293 - (140 + 124);
								end
								if ((991 >= 218) and ((16 + 0) == v1138)) then
									v88 = v76[v80];
									v86[v88[1537 - (1105 + 430)]] = v88[7 - 4];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[6 - 4]] = v88[6 - 3];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v1139 = v88[2 + 0];
									v1138 = 6 + 11;
								end
								if ((v1138 == (19 + 11)) or (3469 == 3587)) then
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[1994 - (1047 + 944)];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2]] = v88[1305 - (206 + 1096)];
									v80 = v80 + (195 - (30 + 164));
									v88 = v76[v80];
									v1139 = v88[2];
									v1138 = 139 - 108;
								end
								if (v1138 == (2 + 3)) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + 1, v88[1477 - (1383 + 91)]));
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v86[v88[3 - 1]][v88[1663 - (1174 + 486)]] = v86[v88[431 - (172 + 255)]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[6 - 4]] = v86[v88[6 - 3]];
									v80 = v80 + 1;
									v1138 = 6;
								end
								if ((v1138 == (1543 - (594 + 934))) or (2109 <= 746)) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + 1, v88[3]));
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[570 - (211 + 357)]][v88[1 + 2]] = v86[v88[4 + 0]];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[3]];
									v80 = v80 + 1 + 0;
									v1138 = 16;
								end
								if (v1138 == (1421 - (159 + 1255))) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + 1 + 0, v88[3]));
									v80 = v80 + (778 - (24 + 753));
									v88 = v76[v80];
									v86[v88[2]][v88[3]] = v86[v88[2 + 2]];
									v80 = v80 + (1 - 0);
									v88 = v76[v80];
									v86[v88[1134 - (898 + 234)]] = v86[v88[3]];
									v80 = v80 + (536 - (333 + 202));
									v1138 = 4 + 4;
								end
								if (v1138 == (8 + 14)) then
									v88 = v76[v80];
									v86[v88[3 - 1]] = v88[1282 - (1018 + 261)];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[133 - (93 + 38)]] = v88[1 + 2];
									v80 = v80 + 1;
									v88 = v76[v80];
									v1139 = v88[2 + 0];
									v1138 = 23;
								end
								if (v1138 == (0 + 0)) then
									v1139 = nil;
									v86[v88[2 + 0]] = v88[6 - 3];
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v86[v88[5 - 3]] = v88[14 - 11];
									v80 = v80 + 1;
									v88 = v76[v80];
									v1139 = v88[2];
									v1138 = 1 - 0;
								end
								if (((4 + 13) == v1138) or (1779 > 3583)) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + (1 - 0), v88[2 + 1]));
									v80 = v80 + (421 - (14 + 406));
									v88 = v76[v80];
									v86[v88[3 - 1]][v88[3]] = v86[v88[14 - 10]];
									v80 = v80 + (1631 - (20 + 1610));
									v88 = v76[v80];
									v86[v88[1 + 1]] = v86[v88[3]];
									v80 = v80 + (2 - 1);
									v1138 = 18;
								end
								if (v1138 == (59 - 39)) then
									v88 = v76[v80];
									v86[v88[519 - (243 + 274)]] = v88[1625 - (1437 + 185)];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[11 - 8];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v1139 = v88[2];
									v1138 = 1 + 20;
								end
								if (25 == v1138) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + (817 - (326 + 490)), v88[3 + 0]));
									v80 = v80 + (204 - (181 + 22));
									v88 = v76[v80];
									v86[v88[2]][v88[78 - (35 + 40)]] = v86[v88[15 - 11]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[3 - 0]];
									v80 = v80 + 1 + 0;
									v1138 = 904 - (297 + 581);
								end
								if ((2 + 22) == v1138) then
									v88 = v76[v80];
									v86[v88[2 - 0]] = v88[9 - 6];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1 + 1]] = v88[12 - 9];
									v80 = v80 + (4 - 3);
									v88 = v76[v80];
									v1139 = v88[1739 - (1505 + 232)];
									v1138 = 1343 - (415 + 903);
								end
								if (v1138 == (10 - 6)) then
									v88 = v76[v80];
									v86[v88[2]] = v88[3];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2]] = v88[4 - 1];
									v80 = v80 + (718 - (155 + 562));
									v88 = v76[v80];
									v1139 = v88[2];
									v1138 = 3 + 2;
								end
								if (v1138 == (138 - (71 + 46))) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + (1 - 0), v88[688 - (436 + 249)]));
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[1623 - (56 + 1565)]][v88[2 + 1]] = v86[v88[988 - (80 + 904)]];
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[802 - (595 + 205)]] = v86[v88[6 - 3]];
									v80 = v80 + (2 - 1);
									v1138 = 16 + 6;
								end
								if ((11 + 16) == v1138) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + 1, v88[9 - 6]));
									v80 = v80 + 1 + 0;
									v88 = v76[v80];
									v86[v88[667 - (400 + 265)]][v88[5 - 2]] = v86[v88[1 + 3]];
									v80 = v80 + (2 - 1);
									v88 = v76[v80];
									v86[v88[2]] = v86[v88[2 + 1]];
									v80 = v80 + (1672 - (962 + 709));
									v1138 = 23 + 5;
								end
								if ((1996 == 1996) and (v1138 == 11)) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + 1 + 0, v88[3 + 0]));
									v80 = v80 + (3 - 2);
									v88 = v76[v80];
									v86[v88[4 - 2]][v88[3]] = v86[v88[4]];
									v80 = v80 + (782 - (636 + 145));
									v88 = v76[v80];
									v86[v88[297 - (282 + 13)]] = v86[v88[3]];
									v80 = v80 + (1149 - (366 + 782));
									v1138 = 101 - (10 + 79);
								end
								if (2 == v1138) then
									v88 = v76[v80];
									v86[v88[1709 - (1297 + 410)]] = v88[10 - 7];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[2]] = v88[3 + 0];
									v80 = v80 + (279 - (262 + 16));
									v88 = v76[v80];
									v1139 = v88[4 - 2];
									v1138 = 2 + 1;
								end
								if (v1138 == (1 + 2)) then
									v86[v1139] = v86[v1139](v13(v86, v1139 + (1851 - (1056 + 794)), v88[1351 - (741 + 607)]));
									v80 = v80 + (1757 - (730 + 1026));
									v88 = v76[v80];
									v86[v88[1795 - (248 + 1545)]][v88[995 - (191 + 801)]] = v86[v88[19 - 15]];
									v80 = v80 + 1;
									v88 = v76[v80];
									v86[v88[562 - (478 + 82)]] = v86[v88[1710 - (434 + 1273)]];
									v80 = v80 + (2 - 1);
									v1138 = 4;
								end
								if ((10 + 2) == v1138) then
									v88 = v76[v80];
									v86[v88[8 - 6]] = v88[3];
									v80 = v80 + (574 - (349 + 224));
									v88 = v76[v80];
									v86[v88[866 - (275 + 589)]] = v88[5 - 2];
									v80 = v80 + 1;
									v88 = v76[v80];
									v1139 = v88[3 - 1];
									v1138 = 1545 - (1064 + 468);
								end
							end
						end
					elseif (v89 == (82 + 29)) then
						local v1140;
						v86[v88[2]] = v86[v88[2 + 1]][v88[17 - 13]];
						v80 = v80 + (704 - (676 + 27));
						v88 = v76[v80];
						v86[v88[5 - 3]][v88[3]] = v86[v88[1431 - (48 + 1379)]];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[2 + 0]][v88[2 + 1]] = v86[v88[6 - 2]];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[2 + 0]] = v65[v88[3]];
						v80 = v80 + (116 - (79 + 36));
						v88 = v76[v80];
						v86[v88[6 - 4]] = v86[v88[2 + 1]][v88[3 + 1]];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[2]] = v64[v88[3]];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[1 + 1]] = v86[v88[3]][v88[4]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v1140 = v88[4 - 2];
						v86[v1140] = v86[v1140](v86[v1140 + 1 + 0]);
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[1016 - (631 + 383)]] = v86[v88[1638 - (445 + 1190)]];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[1427 - (810 + 615)]] = v65[v88[1297 - (819 + 475)]];
						v80 = v80 + (1336 - (243 + 1092));
						v88 = v76[v80];
						v86[v88[2]] = v86[v88[8 - 5]][v88[3 + 1]];
						v80 = v80 + 1 + 0;
						v88 = v76[v80];
						v86[v88[1 + 1]] = v88[3 + 0];
						v80 = v80 + (1 - 0);
						v88 = v76[v80];
						v86[v88[5 - 3]] = v88[3];
						v80 = v80 + (525 - (119 + 405));
						v88 = v76[v80];
						v86[v88[4 - 2]] = v88[3];
						v80 = v80 + (3 - 2);
						v88 = v76[v80];
						v86[v88[611 - (352 + 257)]] = v88[1 + 2];
						v80 = v80 + (1164 - (88 + 1075));
						v88 = v76[v80];
						v1140 = v88[2];
						v86[v1140] = v86[v1140](v13(v86, v1140 + (1072 - (477 + 594)), v88[726 - (328 + 395)]));
						v80 = v80 + (505 - (164 + 340));
						v88 = v76[v80];
						v86[v88[2 - 0]][v88[7 - 4]] = v86[v88[4]];
						v80 = v80 + 1;
						v88 = v76[v80];
						v86[v88[1231 - (1008 + 221)]] = v64[v88[1514 - (1025 + 486)]];
						v80 = v80 + (2 - 1);
						v88 = v76[v80];
						v86[v88[2]] = v86[v88[8 - 5]][v88[4]];
						v80 = v80 + (220 - (108 + 111));
						v88 = v76[v80];
						v86[v88[100 - (82 + 16)]][v88[1732 - (533 + 1196)]] = v86[v88[5 - 1]];
						v80 = v80 + (213 - (161 + 51));
						v88 = v76[v80];
						v86[v88[436 - (294 + 140)]][v88[12 - 9]] = v88[842 - (717 + 121)];
						v80 = v80 + (1 - 0);
						v88 = v76[v80];
						v86[v88[2 + 0]] = v88[1 + 2];
					else
						local v1178 = v88[2];
						v86[v1178](v13(v86, v1178 + (1711 - (1001 + 709)), v81));
					end
				elseif (v89 <= (110 + 4)) then
					if (v89 == (1233 - (242 + 878))) then
						if (v86[v88[1785 - (1395 + 388)]] == v88[2 + 2]) then
							v80 = v80 + 1;
						else
							v80 = v88[3 + 0];
						end
					else
						v86[v88[2]] = #v86[v88[3 + 0]];
					end
				elseif (v89 == 115) then
					local v1180 = 0;
					local v1181;
					while true do
						if (4 == v1180) then
							v88 = v76[v80];
							v1181 = v88[1 + 1];
							v86[v1181] = v86[v1181](v86[v1181 + (1948 - (1289 + 658))]);
							v80 = v80 + 1;
							v1180 = 3 + 2;
						end
						if (v1180 == (0 - 0)) then
							v1181 = nil;
							v1181 = v88[2 + 0];
							v86[v1181](v13(v86, v1181 + 1 + 0, v88[5 - 2]));
							v80 = v80 + 1;
							v1180 = 1977 - (337 + 1639);
						end
						if (v1180 == (1 + 0)) then
							v88 = v76[v80];
							v86[v88[3 - 1]] = v65[v88[7 - 4]];
							v80 = v80 + (1 - 0);
							v88 = v76[v80];
							v1180 = 1739 - (630 + 1107);
						end
						if ((v1180 == (2 + 0)) or (2958 >= 4530)) then
							v86[v88[2]] = v86[v88[1 + 2]][v88[5 - 1]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v86[v88[2 + 0]] = v64[v88[64 - (13 + 48)]];
							v1180 = 702 - (658 + 41);
						end
						if (v1180 == (10 - 5)) then
							v88 = v76[v80];
							v86[v88[1909 - (1591 + 316)]] = v86[v88[5 - 2]];
							v80 = v80 + 1 + 0;
							v88 = v76[v80];
							v1180 = 6;
						end
						if (v1180 == (2 + 1)) then
							v80 = v80 + (3 - 2);
							v88 = v76[v80];
							v86[v88[1278 - (1241 + 35)]] = v86[v88[43 - (18 + 22)]][v88[4]];
							v80 = v80 + 1;
							v1180 = 4;
						end
						if (v1180 == (8 - 2)) then
							v86[v88[1 + 1]] = v88[1305 - (697 + 605)];
							break;
						end
					end
				else
					local v1182;
					local v1183;
					v86[v88[1 + 1]] = v64[v88[6 - 3]];
					v80 = v80 + (330 - (188 + 141));
					v88 = v76[v80];
					v86[v88[8 - 6]] = v86[v88[3]][v88[4]];
					v80 = v80 + (2 - 1);
					v88 = v76[v80];
					v86[v88[952 - (34 + 916)]][v88[1740 - (357 + 1380)]] = v86[v88[4 + 0]];
					v80 = v80 + 1;
					v88 = v76[v80];
					v86[v88[1 + 1]][v88[1 + 2]] = v88[1931 - (178 + 1749)];
					v80 = v80 + (2 - 1);
					v88 = v76[v80];
					v86[v88[1417 - (142 + 1273)]] = v64[v88[596 - (284 + 309)]];
					v80 = v80 + 1;
					v88 = v76[v80];
					v86[v88[2 + 0]] = v86[v88[693 - (622 + 68)]][v88[4]];
					v80 = v80 + 1;
					v88 = v76[v80];
					v86[v88[2 + 0]][v88[6 - 3]] = v86[v88[4 + 0]];
					v80 = v80 + 1 + 0;
					v88 = v76[v80];
					v86[v88[1900 - (855 + 1043)]][v88[6 - 3]] = v86[v88[13 - 9]];
					v80 = v80 + (3 - 2);
					v88 = v76[v80];
					v86[v88[781 - (576 + 203)]] = v86[v88[7 - 4]][v88[5 - 1]];
					v80 = v80 + (1985 - (709 + 1275));
					v88 = v76[v80];
					v1183 = v88[2 + 0];
					v1182 = v86[v88[3]];
					v86[v1183 + (3 - 2)] = v1182;
					v86[v1183] = v1182[v88[4]];
				end
				v80 = v80 + (3 - 2);
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
